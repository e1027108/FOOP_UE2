OmEntry {	#tags : {		#author : 'p',		#time : DateAndTime [ '2017-06-27T13:37:11.501089+02:00' ],		#prior : OmReference [ 'Pharo.2si20q4h88i3888wh57lvzpgd', '1' ],		#self : OmReference [ '1' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #SnakeModel,				#isMetaSide : false			},			#name : #checkWinner,			#protocol : #checking,			#sourceCode : 'checkWinner "TODO evaluate a winner depending on snake stats --> TODO implement snake with stats"\r\t(redSnake health <= 0)\r\t\tifTrue: [ ^\'Blue\' ].\r\t(blueSnake health <= 0)\r\t\tifTrue: [ ^\'Red\' ].\r\ttimer = 0\r\t\tifTrue: [\r\t\t\t(redSnake cells size) > (blueSnake cells size)\r\t\t\t\tifTrue: [ ^\'Red\' ]\r\t\t\t\tifFalse: [ \r\t\t\t\t\t(redSnake cells size) < (redSnake cells size)\r\t\t\t\t\t\tifTrue: [ ^\'Blue\' ]\t\r\t\t\t\t\t\tifFalse: [ ^\'No one\' ].\r\t\t\t\t].\r\t\t]\r\t\tifFalse: [ ^nil ].',			#stamp : 'p 6/27/2017 13:36',			#package : #snake_game		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #SnakeModel,				#isMetaSide : false			},			#name : #checkWinner,			#protocol : #checking,			#sourceCode : 'checkWinner "TODO evaluate a winner depending on snake stats --> TODO implement snake with stats"\r\t(redSnake health <= 0) | (redSnake size = 0)\r\t\tifTrue: [ ^\'Blue\' ].\r\t(blueSnake health <= 0) | (blueSnake size = 0)\r\t\tifTrue: [ ^\'Red\' ].\r\ttimer = 0\r\t\tifTrue: [\r\t\t\t(redSnake cells size) > (blueSnake cells size)\r\t\t\t\tifTrue: [ ^\'Red\' ]\r\t\t\t\tifFalse: [ \r\t\t\t\t\t(redSnake cells size) < (redSnake cells size)\r\t\t\t\t\t\tifTrue: [ ^\'Blue\' ]\t\r\t\t\t\t\t\tifFalse: [ ^\'No one\' ].\r\t\t\t\t].\r\t\t]\r\t\tifFalse: [ ^nil ].',			#stamp : 'p 6/27/2017 13:37',			#package : #snake_game		}	}}OmEntry {	#tags : {		#author : 'p',		#time : DateAndTime [ '2017-06-27T13:38:41.227089+02:00' ],		#prior : OmReference [ '1' ],		#self : OmReference [ '2' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #SnakeModel,				#isMetaSide : false			},			#name : #checkWinner,			#protocol : #checking,			#sourceCode : 'checkWinner "TODO evaluate a winner depending on snake stats --> TODO implement snake with stats"\r\t(redSnake health <= 0) | (redSnake size = 0)\r\t\tifTrue: [ ^\'Blue\' ].\r\t(blueSnake health <= 0) | (blueSnake size = 0)\r\t\tifTrue: [ ^\'Red\' ].\r\ttimer = 0\r\t\tifTrue: [\r\t\t\t(redSnake cells size) > (blueSnake cells size)\r\t\t\t\tifTrue: [ ^\'Red\' ]\r\t\t\t\tifFalse: [ \r\t\t\t\t\t(redSnake cells size) < (redSnake cells size)\r\t\t\t\t\t\tifTrue: [ ^\'Blue\' ]\t\r\t\t\t\t\t\tifFalse: [ ^\'No one\' ].\r\t\t\t\t].\r\t\t]\r\t\tifFalse: [ ^nil ].',			#stamp : 'p 6/27/2017 13:37',			#package : #snake_game		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #SnakeModel,				#isMetaSide : false			},			#name : #checkWinner,			#protocol : #checking,			#sourceCode : 'checkWinner "TODO evaluate a winner depending on snake stats --> TODO implement snake with stats"\r\t(redSnake health <= 0) | (redSnake snakeSize = 0)\r\t\tifTrue: [ ^\'Blue\' ].\r\t(blueSnake health <= 0) | (blueSnake snakeSize = 0)\r\t\tifTrue: [ ^\'Red\' ].\r\ttimer = 0\r\t\tifTrue: [\r\t\t\t(redSnake cells size) > (blueSnake cells size)\r\t\t\t\tifTrue: [ ^\'Red\' ]\r\t\t\t\tifFalse: [ \r\t\t\t\t\t(redSnake cells size) < (redSnake cells size)\r\t\t\t\t\t\tifTrue: [ ^\'Blue\' ]\t\r\t\t\t\t\t\tifFalse: [ ^\'No one\' ].\r\t\t\t\t].\r\t\t]\r\t\tifFalse: [ ^nil ].',			#stamp : 'p 6/27/2017 13:38',			#package : #snake_game		}	}}OmEntry {	#tags : {		#author : 'p',		#time : DateAndTime [ '2017-06-27T13:39:15.608089+02:00' ],		#prior : OmReference [ '2' ],		#self : OmReference [ '3' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #SnakeModel,				#isMetaSide : false			},			#name : #spawnArtifacts,			#protocol : #'artifact handling',			#sourceCode : 'spawnArtifacts\r\t| x y |\r\tx := self generateRandomNumber: 25.\r\ty := self generateRandomNumber: 25.\r\t\r\t"there can\'t be a snake or other artifact there, we don\'t want too many artifacts"\r\t((artifactCells size <= 15) and: (self checkPosition: x@y))\r\t\tifTrue: [\r\t\t\t| type artifact newCell |\r\t\t\ttype := self generateRandomNumber: 4.\r\t\t\tartifact := Artifact getNew: type.\r\t\t\tnewCell := ((board rows at: x) at: y).\r\t\t\tnewCell artifact: artifact.\r\t\t\tartifactCells add: newCell.\r\t\t].\r\t',			#stamp : 'p 6/25/2017 15:57',			#package : #snake_game		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #SnakeModel,				#isMetaSide : false			},			#name : #spawnArtifacts,			#protocol : #'artifact handling',			#sourceCode : 'spawnArtifacts\r\t| x y |\r\tx := self generateRandomNumber: 25.\r\ty := self generateRandomNumber: 25.\r\t\r\t"there can\'t be a snake or other artifact there, we don\'t want too many artifacts"\r\t((artifactCells size <= 15) and: (self checkPosition: x@y))\r\t\tifTrue: [\r\t\t\t| type artifact newCell |\r\t\t\ttype := self generateRandomNumber: 4.\r\t\t\tartifact := Artifact getNew: 3. "TODO reset to type instead of 3"\r\t\t\tnewCell := ((board rows at: x) at: y).\r\t\t\tnewCell artifact: artifact.\r\t\t\tartifactCells add: newCell.\r\t\t].\r\t',			#stamp : 'p 6/27/2017 13:39',			#package : #snake_game		}	}}