OmEntry {	#tags : {		#author : 'Patrick',		#time : DateAndTime [ '2017-06-22T13:43:48.479248+02:00' ],		#prior : OmReference [ 'Pharo.d30j2mvsykdr451z21pcrrciv', '3' ],		#self : OmReference [ '1' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #SnakeGame,				#isMetaSide : false			},			#name : #addKeyListener,			#protocol : #initialize,			#sourceCode : 'addKeyListener\r\tkeyListener := KeyListener new.\r\tcontainer addMorph: keyListener.\r\t"keyListener parent: self."\r\tcontainer newKeyboardFocus: keyListener.',			#stamp : 'Patrick 6/22/2017 13:42',			#package : #snake_game		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #SnakeGame,				#isMetaSide : false			},			#name : #addKeyListener,			#protocol : #initialize,			#sourceCode : 'addKeyListener\r\tkeyListener := KeyListener new.\r\tcontainer addMorph: keyListener.\r\t"keyListener parent: self."\r\tkeyListener newKeyboardFocus: container.',			#stamp : 'Patrick 6/22/2017 13:43',			#package : #snake_game		}	}}OmEntry {	#tags : {		#author : 'Patrick',		#time : DateAndTime [ '2017-06-22T13:44:10.935248+02:00' ],		#prior : OmReference [ '1' ],		#self : OmReference [ '2' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #SnakeGame,				#isMetaSide : false			},			#name : #addKeyListener,			#protocol : #initialize,			#sourceCode : 'addKeyListener\r\tkeyListener := KeyListener new.\r\tcontainer addMorph: keyListener.\r\t"keyListener parent: self."\r\tkeyListener newKeyboardFocus: container.',			#stamp : 'Patrick 6/22/2017 13:43',			#package : #snake_game		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #SnakeGame,				#isMetaSide : false			},			#name : #addKeyListener,			#protocol : #initialize,			#sourceCode : 'addKeyListener\r\tkeyListener := KeyListener new.\r\tcontainer addMorph: keyListener.\r\tkeyListener parent: self.\r\tkeyListener newKeyboardFocus: container.',			#stamp : 'Patrick 6/22/2017 13:44',			#package : #snake_game		}	}}OmEntry {	#tags : {		#author : 'Patrick',		#time : DateAndTime [ '2017-06-22T13:45:06.595248+02:00' ],		#prior : OmReference [ '2' ],		#self : OmReference [ '3' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #SnakeGame,				#isMetaSide : false			},			#name : #addKeyListener,			#protocol : #initialize,			#sourceCode : 'addKeyListener\r\tkeyListener := KeyListener new.\r\tcontainer addMorph: keyListener.\r\tkeyListener parent: self.\r\tkeyListener newKeyboardFocus: container.',			#stamp : 'Patrick 6/22/2017 13:44',			#package : #snake_game		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #SnakeGame,				#isMetaSide : false			},			#name : #addKeyListener,			#protocol : #initialize,			#sourceCode : 'addKeyListener\r\tkeyListener := KeyListener new.\r\tcontainer addMorph: keyListener.\r\tkeyListener parent: self.\r\tkeyListener keyboardFocus: container.',			#stamp : 'Patrick 6/22/2017 13:45',			#package : #snake_game		}	}}OmEntry {	#tags : {		#author : 'Patrick',		#time : DateAndTime [ '2017-06-22T13:45:38.430248+02:00' ],		#prior : OmReference [ '3' ],		#self : OmReference [ '4' ]	},	#content : EpClassModification {		#oldClass : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'HandMorph',				#traitCompositionSource : '{}',				#definitionSource : 'HandMorph subclass: #KeyListener\r\tinstanceVariableNames: \'parent\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'snake_game\''			},			#name : #KeyListener,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #KeyListener,						#isMetaSide : false					},					#name : #parent,					#parent : @7				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'KeyListener class\r\tinstanceVariableNames: \'\''				},				#name : #'KeyListener class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #KeyListener,					#isMetaSide : false				},				#parent : @7,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #snake_game,			#package : #snake_game,			#sharedPools : OrderedCollection [ ]		},		#newClass : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'HandMorph',				#traitCompositionSource : '{}',				#definitionSource : 'HandMorph subclass: #KeyListener\r\tinstanceVariableNames: \'parent\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'snake_game\''			},			#name : #KeyListener,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #KeyListener,						#isMetaSide : false					},					#name : #parent,					#parent : @23				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'KeyListener class\r\tinstanceVariableNames: \'\''				},				#name : #'KeyListener class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @23			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #KeyListener,					#isMetaSide : false				},				#parent : @23,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #snake_game,			#package : #snake_game,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Patrick',		#time : DateAndTime [ '2017-06-22T13:45:38.599248+02:00' ],		#prior : OmReference [ '4' ],		#self : OmReference [ '5' ]	},	#content : EpClassModification {		#oldClass : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'HandMorph',				#traitCompositionSource : '{}',				#definitionSource : 'HandMorph subclass: #KeyListener\r\tinstanceVariableNames: \'parent\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'snake_game\''			},			#name : #KeyListener,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #KeyListener,						#isMetaSide : false					},					#name : #parent,					#parent : @7				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'KeyListener class\r\tinstanceVariableNames: \'\''				},				#name : #'KeyListener class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #KeyListener,					#isMetaSide : false				},				#parent : @7,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #snake_game,			#package : #snake_game,			#sharedPools : OrderedCollection [ ]		},		#newClass : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Morph',				#traitCompositionSource : '{}',				#definitionSource : 'Morph subclass: #KeyListener\r\tinstanceVariableNames: \'parent\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'snake_game\''			},			#name : #KeyListener,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #KeyListener,						#isMetaSide : false					},					#name : #parent,					#parent : @23				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'KeyListener class\r\tinstanceVariableNames: \'\''				},				#name : #'KeyListener class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @23			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #KeyListener,					#isMetaSide : false				},				#parent : @23,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #snake_game,			#package : #snake_game,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Patrick',		#time : DateAndTime [ '2017-06-22T13:45:43.045248+02:00' ],		#prior : OmReference [ '5' ],		#self : OmReference [ '6' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'Manifestsnakegame class',				#isMetaSide : true			},			#name : #ruleRBNoClassCommentRuleV1FalsePositive,			#protocol : #code-critics,			#sourceCode : 'ruleRBNoClassCommentRuleV1FalsePositive\r\t^ #()',			#stamp : 'Patrick 6/22/2017 13:45',			#package : #snake_game		}	}}OmEntry {	#tags : {		#author : 'Patrick',		#time : DateAndTime [ '2017-06-22T13:45:43.055248+02:00' ],		#prior : OmReference [ '6' ],		#self : OmReference [ '7' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'Manifestsnakegame class',				#isMetaSide : true			},			#name : #ruleRBNoClassCommentRuleV1FalsePositive,			#protocol : #code-critics,			#sourceCode : 'ruleRBNoClassCommentRuleV1FalsePositive\r\t^ #()',			#stamp : 'Patrick 6/22/2017 13:45',			#package : #snake_game		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'Manifestsnakegame class',				#isMetaSide : true			},			#name : #ruleRBNoClassCommentRuleV1FalsePositive,			#protocol : #code-critics,			#sourceCode : 'ruleRBNoClassCommentRuleV1FalsePositive\r\t^ #(#(#(#RGClassDefinition #(#KeyListener)) #\'2017-06-22T13:45:43.049248+02:00\') )',			#stamp : 'Patrick 6/22/2017 13:45',			#package : #snake_game		}	}}OmEntry {	#tags : {		#author : 'Patrick',		#time : DateAndTime [ '2017-06-22T13:46:17.437248+02:00' ],		#prior : OmReference [ '7' ],		#self : OmReference [ '8' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #SnakeGame,				#isMetaSide : false			},			#name : #addKeyListener,			#protocol : #initialize,			#sourceCode : 'addKeyListener\r\tkeyListener := KeyListener new.\r\tcontainer addMorph: keyListener.\r\tkeyListener parent: self.\r\tkeyListener keyboardFocus: container.',			#stamp : 'Patrick 6/22/2017 13:45',			#package : #snake_game		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #SnakeGame,				#isMetaSide : false			},			#name : #addKeyListener,			#protocol : #initialize,			#sourceCode : 'addKeyListener\r\tkeyListener := KeyListener new.\r\tcontainer addMorph: keyListener.\r\tkeyListener parent: self.',			#stamp : 'Patrick 6/22/2017 13:46',			#package : #snake_game		}	}}OmEntry {	#tags : {		#author : 'Patrick',		#time : DateAndTime [ '2017-06-22T13:47:03.378248+02:00' ],		#prior : OmReference [ '8' ],		#self : OmReference [ '9' ]	},	#content : EpProtocolAddition {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Morph',				#traitCompositionSource : '{}',				#definitionSource : 'Morph subclass: #KeyListener\r\tinstanceVariableNames: \'parent\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'snake_game\''			},			#name : #KeyListener,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #KeyListener,						#isMetaSide : false					},					#name : #parent,					#parent : @7				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'KeyListener class\r\tinstanceVariableNames: \'\''				},				#name : #'KeyListener class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #KeyListener,					#isMetaSide : false				},				#parent : @7,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #snake_game,			#package : #snake_game,			#sharedPools : OrderedCollection [ ]		},		#protocol : #initalize	}}OmEntry {	#tags : {		#author : 'Patrick',		#time : DateAndTime [ '2017-06-22T13:47:17.649248+02:00' ],		#prior : OmReference [ '9' ],		#self : OmReference [ '10' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #KeyListener,				#isMetaSide : false			},			#name : #initialize,			#protocol : #initalize,			#sourceCode : 'initialize\r\tself extent: 0@0.',			#stamp : 'Patrick 6/22/2017 13:47',			#package : #snake_game		}	}}OmEntry {	#tags : {		#author : 'Patrick',		#time : DateAndTime [ '2017-06-22T13:47:25.989248+02:00' ],		#prior : OmReference [ '10' ],		#self : OmReference [ '11' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #KeyListener,				#isMetaSide : false			},			#name : #initialize,			#protocol : #initalize,			#sourceCode : 'initialize\r\tself extent: 0@0.',			#stamp : 'Patrick 6/22/2017 13:47',			#package : #snake_game		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #KeyListener,				#isMetaSide : false			},			#name : #initialize,			#protocol : #initalize,			#sourceCode : 'initialize\r\tsuper initialize.\r\tself extent: 0@0.',			#stamp : 'Patrick 6/22/2017 13:47',			#package : #snake_game		}	}}OmEntry {	#tags : {		#author : 'Patrick',		#time : DateAndTime [ '2017-06-22T13:47:58.697248+02:00' ],		#prior : OmReference [ '11' ],		#self : OmReference [ '12' ]	},	#content : EpProtocolRemoval {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Object',				#traitCompositionSource : '{}',				#definitionSource : 'Object subclass: #SnakeGame\r\tinstanceVariableNames: \'container model rows messageArea keyListener\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'snake_game\''			},			#name : #SnakeGame,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #SnakeGame,						#isMetaSide : false					},					#name : #container,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #SnakeGame,						#isMetaSide : false					},					#name : #model,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #SnakeGame,						#isMetaSide : false					},					#name : #rows,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #SnakeGame,						#isMetaSide : false					},					#name : #messageArea,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #SnakeGame,						#isMetaSide : false					},					#name : #keyListener,					#parent : @7				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'SnakeGame class\r\tinstanceVariableNames: \'\''				},				#name : #'SnakeGame class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #SnakeGame,					#isMetaSide : false				},				#parent : @7,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #snake_game,			#package : #snake_game,			#sharedPools : OrderedCollection [ ]		},		#protocol : #'keyboard control'	}}OmEntry {	#tags : {		#author : 'Patrick',		#time : DateAndTime [ '2017-06-22T13:48:17.010248+02:00' ],		#prior : OmReference [ '12' ],		#self : OmReference [ '13' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #SnakeGame,				#isMetaSide : false			},			#name : #start,			#protocol : #starting,			#sourceCode : 'start\r\t| redCell blueCell |\r\t"0/0 is right bottom corner, 25/25 left top corner"\r\tredCell := (rows at: 6) at: 6.\r\tblueCell := (rows at: 20) at: 20.\r\tredCell color: Color red.\r\tblueCell color: Color blue.\r\tkeyListener newKeyboardFocus: keyListener.',			#stamp : 'Patrick 6/22/2017 13:42',			#package : #snake_game		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #SnakeGame,				#isMetaSide : false			},			#name : #start,			#protocol : #starting,			#sourceCode : 'start\r\t| redCell blueCell |\r\t"0/0 is right bottom corner, 25/25 left top corner"\r\tredCell := (rows at: 6) at: 6.\r\tblueCell := (rows at: 20) at: 20.\r\tredCell color: Color red.\r\tblueCell color: Color blue.\r\tcontainer keyboardFocusChange: keyListener.',			#stamp : 'Patrick 6/22/2017 13:48',			#package : #snake_game		}	}}OmEntry {	#tags : {		#author : 'Patrick',		#time : DateAndTime [ '2017-06-22T13:49:32.975248+02:00' ],		#prior : OmReference [ '13' ],		#self : OmReference [ '14' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #SnakeGame,				#isMetaSide : false			},			#name : #start,			#protocol : #starting,			#sourceCode : 'start\r\t| redCell blueCell |\r\t"0/0 is right bottom corner, 25/25 left top corner"\r\tredCell := (rows at: 6) at: 6.\r\tblueCell := (rows at: 20) at: 20.\r\tredCell color: Color red.\r\tblueCell color: Color blue.\r\tcontainer keyboardFocusChange: keyListener.',			#stamp : 'Patrick 6/22/2017 13:48',			#package : #snake_game		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #SnakeGame,				#isMetaSide : false			},			#name : #start,			#protocol : #starting,			#sourceCode : 'start\r\t| redCell blueCell |\r\t"0/0 is right bottom corner, 25/25 left top corner"\r\tredCell := (rows at: 6) at: 6.\r\tblueCell := (rows at: 20) at: 20.\r\tredCell color: Color red.\r\tblueCell color: Color blue.\r\tcontainer drawKeyboardFocusOn: keyListener.',			#stamp : 'Patrick 6/22/2017 13:49',			#package : #snake_game		}	}}OmEntry {	#tags : {		#author : 'Patrick',		#time : DateAndTime [ '2017-06-22T13:51:16.821248+02:00' ],		#prior : OmReference [ '14' ],		#self : OmReference [ '15' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #SnakeGame,				#isMetaSide : false			},			#name : #start,			#protocol : #starting,			#sourceCode : 'start\r\t| redCell blueCell |\r\t"0/0 is right bottom corner, 25/25 left top corner"\r\tredCell := (rows at: 6) at: 6.\r\tblueCell := (rows at: 20) at: 20.\r\tredCell color: Color red.\r\tblueCell color: Color blue.\r\tcontainer drawKeyboardFocusOn: keyListener.',			#stamp : 'Patrick 6/22/2017 13:49',			#package : #snake_game		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #SnakeGame,				#isMetaSide : false			},			#name : #start,			#protocol : #starting,			#sourceCode : 'start\r\t| redCell blueCell |\r\t"0/0 is right bottom corner, 25/25 left top corner"\r\tredCell := (rows at: 6) at: 6.\r\tblueCell := (rows at: 20) at: 20.\r\tredCell color: Color red.\r\tblueCell color: Color blue.',			#stamp : 'Patrick 6/22/2017 13:51',			#package : #snake_game		}	}}OmEntry {	#tags : {		#author : 'Patrick',		#time : DateAndTime [ '2017-06-22T13:53:18.823248+02:00' ],		#prior : OmReference [ '15' ],		#self : OmReference [ '16' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #SnakeGame,				#isMetaSide : false			},			#name : #start,			#protocol : #starting,			#sourceCode : 'start\r\t| redCell blueCell |\r\t"0/0 is right bottom corner, 25/25 left top corner"\r\tredCell := (rows at: 6) at: 6.\r\tblueCell := (rows at: 20) at: 20.\r\tredCell color: Color red.\r\tblueCell color: Color blue.',			#stamp : 'Patrick 6/22/2017 13:52',			#package : #snake_game		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #SnakeGame,				#isMetaSide : false			},			#name : #start,			#protocol : #starting,			#sourceCode : 'start\r\t| redCell blueCell |\r\t"0/0 is right bottom corner, 25/25 left top corner"\r\tredCell := (rows at: 6) at: 6.\r\tblueCell := (rows at: 20) at: 20.\r\tredCell color: Color red.\r\tblueCell color: Color blue.\r\tkeyListener takeKeyboardFocus.',			#stamp : 'Patrick 6/22/2017 13:53',			#package : #snake_game		}	}}OmEntry {	#tags : {		#author : 'Patrick',		#time : DateAndTime [ '2017-06-22T13:55:01.264248+02:00' ],		#prior : OmReference [ '16' ],		#self : OmReference [ '17' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #KeyListener,				#isMetaSide : false			},			#name : #'handleKeystroke:',			#protocol : #'keyboard control',			#sourceCode : 'handleKeystroke: event "no clue how to actually use this"\r\t| key |\r\tkey := event keyValue.\r\tkey = 30 "up blue"\r\t\tifTrue: [ parent messageArea contents: \'up arrow\' ].\r\tkey = 31 "down blue"\r\t\tifTrue: [ parent messageArea contents: \'down arrow\' ].\r\tkey = 29 "right blue"\r\t\tifTrue: [ parent messageArea contents: \'right arrow\' ].\r\tkey = 28 "left blue"\r\t\tifTrue: [ parent messageArea contents: \'left arrow\' ].\r\tkey > 31 | key < 28 "test"\r\t\tifTrue: [ parent messageArea contents: key ]',			#stamp : 'Patrick 6/22/2017 13:39',			#package : #snake_game		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #KeyListener,				#isMetaSide : false			},			#name : #'handleKeystroke:',			#protocol : #'keyboard control',			#sourceCode : 'handleKeystroke: event "no clue how to actually use this"\r\t| key |\r\tkey := event keyValue.\r\tkey = 30 "up blue"\r\t\tifTrue: [ parent messageArea contents: \'up arrow\' ].\r\tkey = 31 "down blue"\r\t\tifTrue: [ parent messageArea contents: \'down arrow\' ].\r\tkey = 29 "right blue"\r\t\tifTrue: [ parent messageArea contents: \'right arrow\' ].\r\tkey = 28 "left blue"\r\t\tifTrue: [ parent messageArea contents: \'left arrow\' ].\r\tkey > 31 "test high"\r\t\tifTrue: [ parent messageArea contents: key, \'high\' ].\r\tkey < 28 "test low"\r\t\tifTrue: [ parent messageArea contents: key, \'low\' ].',			#stamp : 'Patrick 6/22/2017 13:55',			#package : #snake_game		}	}}OmEntry {	#tags : {		#author : 'Patrick',		#time : DateAndTime [ '2017-06-22T13:55:12.610248+02:00' ],		#prior : OmReference [ '17' ],		#self : OmReference [ '18' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #KeyListener,				#isMetaSide : false			},			#name : #'handleKeystroke:',			#protocol : #'keyboard control',			#sourceCode : 'handleKeystroke: event "no clue how to actually use this"\r\t| key |\r\tkey := event keyValue.\r\tkey = 30 "up blue"\r\t\tifTrue: [ parent messageArea contents: \'up arrow\' ].\r\tkey = 31 "down blue"\r\t\tifTrue: [ parent messageArea contents: \'down arrow\' ].\r\tkey = 29 "right blue"\r\t\tifTrue: [ parent messageArea contents: \'right arrow\' ].\r\tkey = 28 "left blue"\r\t\tifTrue: [ parent messageArea contents: \'left arrow\' ].\r\tkey > 31 "test high"\r\t\tifTrue: [ parent messageArea contents: key, \'high\' ].\r\tkey < 28 "test low"\r\t\tifTrue: [ parent messageArea contents: key, \'low\' ].',			#stamp : 'Patrick 6/22/2017 13:55',			#package : #snake_game		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #KeyListener,				#isMetaSide : false			},			#name : #'handleKeystroke:',			#protocol : #'keyboard control',			#sourceCode : 'handleKeystroke: event "no clue how to actually use this"\r\t| key |\r\tkey := event keyValue.\r\tkey = 30 "up blue"\r\t\tifTrue: [ parent messageArea contents: \'up arrow\' ].\r\tkey = 31 "down blue"\r\t\tifTrue: [ parent messageArea contents: \'down arrow\' ].\r\tkey = 29 "right blue"\r\t\tifTrue: [ parent messageArea contents: \'right arrow\' ].\r\tkey = 28 "left blue"\r\t\tifTrue: [ parent messageArea contents: \'left arrow\' ].\r\tkey > 31 "test high"\r\t\tifTrue: [ parent messageArea contents: (key, \'high\') ].\r\tkey < 28 "test low"\r\t\tifTrue: [ parent messageArea contents: (key, \'low\') ].',			#stamp : 'Patrick 6/22/2017 13:55',			#package : #snake_game		}	}}OmEntry {	#tags : {		#author : 'Patrick',		#time : DateAndTime [ '2017-06-22T13:55:27.486248+02:00' ],		#prior : OmReference [ '18' ],		#self : OmReference [ '19' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'Manifestsnakegame class',				#isMetaSide : true			},			#name : #ruleRBInconsistentMethodClassificationRuleV1FalsePositive,			#protocol : #code-critics,			#sourceCode : 'ruleRBInconsistentMethodClassificationRuleV1FalsePositive\r\t^ #(#(#(#RGClassDefinition #(#SnakeGame)) #\'2017-06-21T19:55:19.866111+02:00\') )',			#stamp : 'Patrick 6/21/2017 19:55',			#package : #snake_game		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'Manifestsnakegame class',				#isMetaSide : true			},			#name : #ruleRBInconsistentMethodClassificationRuleV1FalsePositive,			#protocol : #code-critics,			#sourceCode : 'ruleRBInconsistentMethodClassificationRuleV1FalsePositive\r\t^ #(#(#(#RGClassDefinition #(#SnakeGame)) #\'2017-06-21T19:55:19.866111+02:00\') #(#(#RGClassDefinition #(#KeyListener)) #\'2017-06-22T13:55:27.473248+02:00\') )',			#stamp : 'Patrick 6/22/2017 13:55',			#package : #snake_game		}	}}OmEntry {	#tags : {		#author : 'Patrick',		#time : DateAndTime [ '2017-06-22T13:56:23.589248+02:00' ],		#prior : OmReference [ '19' ],		#self : OmReference [ '20' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #KeyListener,				#isMetaSide : false			},			#name : #'handleKeystroke:',			#protocol : #'keyboard control',			#sourceCode : 'handleKeystroke: event "no clue how to actually use this"\r\t| key |\r\tkey := event keyValue.\r\tkey = 30 "up blue"\r\t\tifTrue: [ parent messageArea contents: \'up arrow\' ].\r\tkey = 31 "down blue"\r\t\tifTrue: [ parent messageArea contents: \'down arrow\' ].\r\tkey = 29 "right blue"\r\t\tifTrue: [ parent messageArea contents: \'right arrow\' ].\r\tkey = 28 "left blue"\r\t\tifTrue: [ parent messageArea contents: \'left arrow\' ].\r\tkey > 31 "test high"\r\t\tifTrue: [ parent messageArea contents: (key, \'high\') ].\r\tkey < 28 "test low"\r\t\tifTrue: [ parent messageArea contents: (key, \'low\') ].',			#stamp : 'Patrick 6/22/2017 13:55',			#package : #snake_game		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #KeyListener,				#isMetaSide : false			},			#name : #'handleKeystroke:',			#protocol : #'keyboard control',			#sourceCode : 'handleKeystroke: event "no clue how to actually use this"\r\t| key |\r\tkey := event keyValue.\r\tkey = 30 "up blue"\r\t\tifTrue: [ parent messageArea contents: \'up arrow\' ].\r\tkey = 31 "down blue"\r\t\tifTrue: [ parent messageArea contents: \'down arrow\' ].\r\tkey = 29 "right blue"\r\t\tifTrue: [ parent messageArea contents: \'right arrow\' ].\r\tkey = 28 "left blue"\r\t\tifTrue: [ parent messageArea contents: \'left arrow\' ].\r\tkey > 31 "test high"\r\t\tifTrue: [ parent messageArea contents: key ].\r\tkey < 28 "test low"\r\t\tifTrue: [ parent messageArea contents: key ].',			#stamp : 'Patrick 6/22/2017 13:56',			#package : #snake_game		}	}}OmEntry {	#tags : {		#author : 'Patrick',		#time : DateAndTime [ '2017-06-22T13:57:06.825248+02:00' ],		#prior : OmReference [ '20' ],		#self : OmReference [ '21' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #KeyListener,				#isMetaSide : false			},			#name : #'handleKeystroke:',			#protocol : #'keyboard control',			#sourceCode : 'handleKeystroke: event "no clue how to actually use this"\r\t| key |\r\tkey := event keyValue.\r\tkey = 30 "up blue"\r\t\tifTrue: [ parent messageArea contents: \'up arrow\' ].\r\tkey = 31 "down blue"\r\t\tifTrue: [ parent messageArea contents: \'down arrow\' ].\r\tkey = 29 "right blue"\r\t\tifTrue: [ parent messageArea contents: \'right arrow\' ].\r\tkey = 28 "left blue"\r\t\tifTrue: [ parent messageArea contents: \'left arrow\' ].\r\tkey > 31 "test high"\r\t\tifTrue: [ parent messageArea contents: key ].\r\tkey < 28 "test low"\r\t\tifTrue: [ parent messageArea contents: key ].',			#stamp : 'Patrick 6/22/2017 13:56',			#package : #snake_game		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #KeyListener,				#isMetaSide : false			},			#name : #'handleKeystroke:',			#protocol : #'keyboard control',			#sourceCode : 'handleKeystroke: event "no clue how to actually use this"\r\t| key |\r\tkey := event keyValue.\r\tkey = 30 "up blue"\r\t\tifTrue: [ parent messageArea contents: \'up arrow\' ].\r\tkey = 31 "down blue"\r\t\tifTrue: [ parent messageArea contents: \'down arrow\' ].\r\tkey = 29 "right blue"\r\t\tifTrue: [ parent messageArea contents: \'right arrow\' ].\r\tkey = 28 "left blue"\r\t\tifTrue: [ parent messageArea contents: \'left arrow\' ].\r\tkey > 31 "test high"\r\t\tifTrue: [ parent messageArea contents: (key printString) ].\r\tkey < 28 "test low"\r\t\tifTrue: [ parent messageArea contents: (key printString) ].',			#stamp : 'Patrick 6/22/2017 13:57',			#package : #snake_game		}	}}OmEntry {	#tags : {		#author : 'Patrick',		#time : DateAndTime [ '2017-06-22T13:59:55.830248+02:00' ],		#prior : OmReference [ '21' ],		#self : OmReference [ '22' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #KeyListener,				#isMetaSide : false			},			#name : #'handleKeystroke:',			#protocol : #'keyboard control',			#sourceCode : 'handleKeystroke: event "no clue how to actually use this"\r\t| key |\r\tkey := event keyValue.\r\tkey = 30 "up blue"\r\t\tifTrue: [ parent messageArea contents: \'up arrow\' ].\r\tkey = 31 "down blue"\r\t\tifTrue: [ parent messageArea contents: \'down arrow\' ].\r\tkey = 29 "right blue"\r\t\tifTrue: [ parent messageArea contents: \'right arrow\' ].\r\tkey = 28 "left blue"\r\t\tifTrue: [ parent messageArea contents: \'left arrow\' ].\r\tkey > 31 "test high"\r\t\tifTrue: [ parent messageArea contents: (key printString) ].\r\tkey < 28 "test low"\r\t\tifTrue: [ parent messageArea contents: (key printString) ].',			#stamp : 'Patrick 6/22/2017 13:57',			#package : #snake_game		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #KeyListener,				#isMetaSide : false			},			#name : #'handleKeystroke:',			#protocol : #'keyboard control',			#sourceCode : 'handleKeystroke: event "no clue how to actually use this"\r\t| key |\r\tkey := event keyValue.\r\tkey = 30 "up blue"\r\t\tifTrue: [ parent messageArea contents: \'up arrow\' ].\r\tkey = 31 "down blue"\r\t\tifTrue: [ parent messageArea contents: \'down arrow\' ].\r\tkey = 29 "right blue"\r\t\tifTrue: [ parent messageArea contents: \'right arrow\' ].\r\tkey = 28 "left blue"\r\t\tifTrue: [ parent messageArea contents: \'left arrow\' ].\r\tkey = 119 "red up"\r\t\tifTrue: [ parent messageArea contents: \'w\' ].\r\tkey = 115 "red down"\r\t\tifTrue: [ parent messageArea contents: \'s\' ].\r\tkey = 100 "red right"\r\t\tifTrue: [ parent messageArea contents: \'d\' ].\r\tkey = 97 "red left"\r\t\tifTrue: [ parent messageArea contents: \'a\' ].',			#stamp : 'Patrick 6/22/2017 13:59',			#package : #snake_game		}	}}OmEntry {	#tags : {		#author : 'Patrick',		#time : DateAndTime [ '2017-06-22T14:01:14.604248+02:00' ],		#prior : OmReference [ '22' ],		#self : OmReference [ '23' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #SnakeGame,				#isMetaSide : false			},			#name : #initialize,			#protocol : #initialize,			#sourceCode : 'initialize\r\t"makes a table to be filled with information"\r\tcontainer := Morph new\r\t\tlayoutPolicy: TableLayout new;\r\t\textent: 500@550;\r\t\tcolor: Color transparent.\r\tmodel := SnakeModel new. "new: 3?"\r\tself addRows.\r\tself addControls.\r\tself addKeyListener.\r\t^self.',			#stamp : 'Patrick 6/22/2017 13:37',			#package : #snake_game		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #SnakeGame,				#isMetaSide : false			},			#name : #initialize,			#protocol : #initialize,			#sourceCode : 'initialize\r\t"makes a table to be filled with information"\r\tcontainer := Morph new\r\t\tlayoutPolicy: TableLayout new;\r\t\textent: 500@550;\r\t\tcolor: Color transparent.\r\tmodel := SnakeModel new.\r\tself addRows.\r\tself addControls.\r\tself addKeyListener.\r\t^self.',			#stamp : 'Patrick 6/22/2017 14:01',			#package : #snake_game		}	}}OmEntry {	#tags : {		#author : 'Patrick',		#time : DateAndTime [ '2017-06-22T14:01:38.469248+02:00' ],		#prior : OmReference [ '23' ],		#self : OmReference [ '24' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #SnakeGame,				#isMetaSide : false			},			#name : #initialize,			#protocol : #initialize,			#sourceCode : 'initialize\r\t"makes a table to be filled with information"\r\tcontainer := Morph new\r\t\tlayoutPolicy: TableLayout new;\r\t\textent: 500@550;\r\t\tcolor: Color transparent.\r\tmodel := SnakeModel new.\r\tself addRows.\r\tself addControls.\r\tself addKeyListener.\r\t^self.',			#stamp : 'Patrick 6/22/2017 14:01',			#package : #snake_game		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #SnakeGame,				#isMetaSide : false			},			#name : #initialize,			#protocol : #initialize,			#sourceCode : 'initialize\r\t"makes a table to be filled with information"\r\tcontainer := Morph new\r\t\tlayoutPolicy: TableLayout new;\r\t\textent: 500@550;\r\t\tcolor: Color transparent.\r\tmodel := SnakeModel new blueDirection: #south; redDirection: #north.\r\tself addRows.\r\tself addControls.\r\tself addKeyListener.\r\t^self.',			#stamp : 'Patrick 6/22/2017 14:01',			#package : #snake_game		}	}}OmEntry {	#tags : {		#author : 'Patrick',		#time : DateAndTime [ '2017-06-22T14:01:50.707248+02:00' ],		#prior : OmReference [ '24' ],		#self : OmReference [ '25' ]	},	#content : EpClassModification {		#oldClass : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Matrix',				#traitCompositionSource : '{}',				#definitionSource : 'Matrix subclass: #SnakeModel\r\tinstanceVariableNames: \'filledCells current winner\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'snake_game\''			},			#name : #SnakeModel,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #SnakeModel,						#isMetaSide : false					},					#name : #filledCells,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #SnakeModel,						#isMetaSide : false					},					#name : #current,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #SnakeModel,						#isMetaSide : false					},					#name : #winner,					#parent : @7				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'SnakeModel class\r\tinstanceVariableNames: \'\''				},				#name : #'SnakeModel class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #SnakeModel,					#isMetaSide : false				},				#parent : @7,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #snake_game,			#package : #snake_game,			#sharedPools : OrderedCollection [ ]		},		#newClass : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Matrix',				#traitCompositionSource : '{}',				#definitionSource : 'Matrix subclass: #SnakeModel\r\tinstanceVariableNames: \'filledCells current winner blueDirection redDirection\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'snake_game\''			},			#name : #SnakeModel,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #SnakeModel,						#isMetaSide : false					},					#name : #filledCells,					#parent : @27				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #SnakeModel,						#isMetaSide : false					},					#name : #current,					#parent : @27				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #SnakeModel,						#isMetaSide : false					},					#name : #winner,					#parent : @27				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #SnakeModel,						#isMetaSide : false					},					#name : #blueDirection,					#parent : @27				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #SnakeModel,						#isMetaSide : false					},					#name : #redDirection,					#parent : @27				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'SnakeModel class\r\tinstanceVariableNames: \'\''				},				#name : #'SnakeModel class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @27			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #SnakeModel,					#isMetaSide : false				},				#parent : @27,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #snake_game,			#package : #snake_game,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Patrick',		#time : DateAndTime [ '2017-06-22T14:04:02.782248+02:00' ],		#prior : OmReference [ '25' ],		#self : OmReference [ '26' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Object',				#traitCompositionSource : '{}',				#definitionSource : 'Object subclass: #Directions\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'snake_game\''			},			#name : #Directions,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'Directions class\r\tinstanceVariableNames: \'\''				},				#name : #'Directions class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #Directions,					#isMetaSide : false				},				#parent : @7,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #snake_game,			#package : #snake_game,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Patrick',		#time : DateAndTime [ '2017-06-22T14:05:00.676248+02:00' ],		#prior : OmReference [ '26' ],		#self : OmReference [ '27' ]	},	#content : EpGenericRefactoring {		#storeString : '(RBRemoveClassRefactoring classNames: #(#Directions ))'	}}OmEntry {	#tags : {		#author : 'Patrick',		#prior : OmReference [ '27' ],		#self : OmReference [ '28' ],		#time : DateAndTime [ '2017-06-22T14:05:00.689248+02:00' ],		#trigger : @3	},	#content : EpClassRemoval {		#classRemoved : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Object',				#traitCompositionSource : '{}',				#definitionSource : 'Object subclass: #Directions\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: #snake_game'			},			#name : #Directions,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'Directions class\r\tinstanceVariableNames: \'\''				},				#name : #'AnObsoleteDirections class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #AnObsoleteDirections,					#isMetaSide : false				},				#parent : @7,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #snake_game,			#package : #snake_game,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Patrick',		#time : DateAndTime [ '2017-06-22T14:05:20.507248+02:00' ],		#prior : OmReference [ '28' ],		#self : OmReference [ '29' ]	},	#content : EpClassModification {		#oldClass : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Matrix',				#traitCompositionSource : '{}',				#definitionSource : 'Matrix subclass: #SnakeModel\r\tinstanceVariableNames: \'filledCells current winner blueDirection redDirection\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'snake_game\''			},			#name : #SnakeModel,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #SnakeModel,						#isMetaSide : false					},					#name : #filledCells,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #SnakeModel,						#isMetaSide : false					},					#name : #current,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #SnakeModel,						#isMetaSide : false					},					#name : #winner,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #SnakeModel,						#isMetaSide : false					},					#name : #blueDirection,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #SnakeModel,						#isMetaSide : false					},					#name : #redDirection,					#parent : @7				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'SnakeModel class\r\tinstanceVariableNames: \'\''				},				#name : #'SnakeModel class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #SnakeModel,					#isMetaSide : false				},				#parent : @7,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #snake_game,			#package : #snake_game,			#sharedPools : OrderedCollection [ ]		},		#newClass : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Matrix',				#traitCompositionSource : '{}',				#definitionSource : 'Matrix subclass: #SnakeModel\r\tinstanceVariableNames: \'blueCells redCells blueDirection redDirection\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'snake_game\''			},			#name : #SnakeModel,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #SnakeModel,						#isMetaSide : false					},					#name : #blueCells,					#parent : @31				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #SnakeModel,						#isMetaSide : false					},					#name : #redCells,					#parent : @31				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #SnakeModel,						#isMetaSide : false					},					#name : #blueDirection,					#parent : @31				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #SnakeModel,						#isMetaSide : false					},					#name : #redDirection,					#parent : @31				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'SnakeModel class\r\tinstanceVariableNames: \'\''				},				#name : #'SnakeModel class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @31			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #SnakeModel,					#isMetaSide : false				},				#parent : @31,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #snake_game,			#package : #snake_game,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Patrick',		#time : DateAndTime [ '2017-06-22T14:05:24.411248+02:00' ],		#prior : OmReference [ '29' ],		#self : OmReference [ '30' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #SnakeModel,				#isMetaSide : false			},			#name : #checkWinCondition,			#protocol : #execution,			#sourceCode : 'checkWinCondition\r\tfilledCells >= 5\r\tifTrue: [ \r\t\tTranscript show: \'yes\'.\r\t\t1 to: 3 do: [ :idx |\r\t\t\tself checkWinConditionInRow: idx.\r\t\t\tself checkWinConditionInColumn: idx.\t\t\t\r\t\t].\t\r\t\tself checkWinConditionInDiagonals.\r\t].\r\t',			#stamp : 'Patrick 6/19/2017 18:38',			#package : #snake_game		}	}}OmEntry {	#tags : {		#author : 'Patrick',		#time : DateAndTime [ '2017-06-22T14:05:28.428248+02:00' ],		#prior : OmReference [ '30' ],		#self : OmReference [ '31' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #SnakeModel,				#isMetaSide : false			},			#name : #'checkWinConditionInColumn:',			#protocol : #execution,			#sourceCode : 'checkWinConditionInColumn: col\r\t| set |\r\twinner isNil\r\tifTrue: [ \r\t\tset := (self atColumn: col) asSet.\r\t\tself checkWinConditionInSet: set\t\r\t].\r\t^winner.',			#stamp : 'Patrick 6/19/2017 18:41',			#package : #snake_game		}	}}OmEntry {	#tags : {		#author : 'Patrick',		#time : DateAndTime [ '2017-06-22T14:05:31.521248+02:00' ],		#prior : OmReference [ '31' ],		#self : OmReference [ '32' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #SnakeModel,				#isMetaSide : false			},			#name : #checkWinConditionInDiagonals,			#protocol : #execution,			#sourceCode : 'checkWinConditionInDiagonals\r\t| set1 set2 |\r\twinner isNil\r\tifTrue: [ \r\t\tset1 := (self diagonal) asSet.\r\t\tset2 := Set newFrom: {\r\t\t\t(self at: 1 at: 3).\r\t\t\t(self at: 2 at: 2).\r\t\t\t(self at: 3 at: 1).\r\t\t} asOrderedCollection.\r\t\tself checkWinConditionInSet: set1.\r\t\tself checkWinConditionInSet: set2.\r\t].\r\t^winner.',			#stamp : 'Patrick 6/19/2017 18:43',			#package : #snake_game		}	}}OmEntry {	#tags : {		#author : 'Patrick',		#time : DateAndTime [ '2017-06-22T14:05:34.830248+02:00' ],		#prior : OmReference [ '32' ],		#self : OmReference [ '33' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #SnakeModel,				#isMetaSide : false			},			#name : #'checkWinConditionInRow:',			#protocol : #execution,			#sourceCode : 'checkWinConditionInRow: row\r\t| set |\r\twinner isNil\r\tifTrue: [ \r\t\tset := (self atRow: row) asSet.\r\t\tself checkWinConditionInSet: set\t\r\t].\r\t^winner.',			#stamp : 'Patrick 6/19/2017 18:40',			#package : #snake_game		}	}}OmEntry {	#tags : {		#author : 'Patrick',		#time : DateAndTime [ '2017-06-22T14:05:40.807248+02:00' ],		#prior : OmReference [ '33' ],		#self : OmReference [ '34' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #SnakeModel,				#isMetaSide : false			},			#name : #'checkWinConditionInSet:',			#protocol : #execution,			#sourceCode : 'checkWinConditionInSet: set "runs? pharo cries"\r\tset size == 1\r\tifTrue: [\r\t\t(set includes: \'X\')\r\t\tifTrue: [\r\t\t\twinner := \'P1\'.\r\t\t\tTranscript show: \'Player 1 won!\'\r\t\t].\r\t\t(set includes: \'O\')\r\t\tifTrue: [\r\t\t\twinner := \'P2\'.\r\t\t\tTranscript show: \'Player 2 won!\'\r\t\t].\r\t].',			#stamp : 'Patrick 6/19/2017 18:52',			#package : #snake_game		}	}}OmEntry {	#tags : {		#author : 'Patrick',		#time : DateAndTime [ '2017-06-22T14:05:43.336248+02:00' ],		#prior : OmReference [ '34' ],		#self : OmReference [ '35' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #SnakeModel,				#isMetaSide : false			},			#name : #'updateAtRow:col:',			#protocol : #accessing,			#sourceCode : 'updateAtRow: row col: col\r\tcurrent isNil\r\t\tifTrue: [ current := \'X\' ]\r\t\tifFalse: [ \r\t\t\tcurrent == \'X\'\r\t\t\tifTrue: [ current := \'O\' ]\r\t\t\tifFalse: [ current := \'X\' ]\t\r\t\t].\r\tself at: row at: col put: current.\r\tfilledCells := filledCells + 1.\r\t^current.',			#stamp : 'Patrick 6/19/2017 18:34',			#package : #snake_game		}	}}OmEntry {	#tags : {		#author : 'Patrick',		#time : DateAndTime [ '2017-06-22T14:05:49.174248+02:00' ],		#prior : OmReference [ '35' ],		#self : OmReference [ '36' ]	},	#content : EpProtocolRemoval {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Matrix',				#traitCompositionSource : '{}',				#definitionSource : 'Matrix subclass: #SnakeModel\r\tinstanceVariableNames: \'blueCells redCells blueDirection redDirection\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'snake_game\''			},			#name : #SnakeModel,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #SnakeModel,						#isMetaSide : false					},					#name : #blueCells,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #SnakeModel,						#isMetaSide : false					},					#name : #redCells,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #SnakeModel,						#isMetaSide : false					},					#name : #blueDirection,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #SnakeModel,						#isMetaSide : false					},					#name : #redDirection,					#parent : @7				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'SnakeModel class\r\tinstanceVariableNames: \'\''				},				#name : #'SnakeModel class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #SnakeModel,					#isMetaSide : false				},				#parent : @7,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #snake_game,			#package : #snake_game,			#sharedPools : OrderedCollection [ ]		},		#protocol : #execution	}}OmEntry {	#tags : {		#author : 'Patrick',		#time : DateAndTime [ '2017-06-22T14:05:59.415248+02:00' ],		#prior : OmReference [ '36' ],		#self : OmReference [ '37' ]	},	#content : EpGenericRefactoring {		#storeString : '(RBCreateAccessorsForVariableRefactoring variable: #blueCells class: SnakeModel classVariable: false)'	}}OmEntry {	#tags : {		#author : 'Patrick',		#prior : OmReference [ '37' ],		#self : OmReference [ '38' ],		#time : DateAndTime [ '2017-06-22T14:05:59.433248+02:00' ],		#trigger : @3	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #SnakeModel,				#isMetaSide : false			},			#name : #blueCells,			#protocol : #accessing,			#sourceCode : 'blueCells\r\t^ blueCells',			#stamp : 'Patrick 6/22/2017 14:05',			#package : #snake_game		}	}}OmEntry {	#tags : {		#author : 'Patrick',		#prior : OmReference [ '38' ],		#self : OmReference [ '39' ],		#time : DateAndTime [ '2017-06-22T14:05:59.442248+02:00' ],		#trigger : OmReference [ '37' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #SnakeModel,				#isMetaSide : false			},			#name : #'blueCells:',			#protocol : #accessing,			#sourceCode : 'blueCells: anObject\r\tblueCells := anObject',			#stamp : 'Patrick 6/22/2017 14:05',			#package : #snake_game		}	}}OmEntry {	#tags : {		#author : 'Patrick',		#time : DateAndTime [ '2017-06-22T14:06:12.554248+02:00' ],		#prior : OmReference [ '39' ],		#self : OmReference [ '40' ]	},	#content : EpCompositeRefactoring {		#childrenRefactorings : [			EpGenericRefactoring {				#storeString : '(RBCreateAccessorsForVariableRefactoring variable: #blueCells class: SnakeModel classVariable: false)'			},			EpGenericRefactoring {				#storeString : '(RBCreateAccessorsForVariableRefactoring variable: #redCells class: SnakeModel classVariable: false)'			},			EpGenericRefactoring {				#storeString : '(RBCreateAccessorsForVariableRefactoring variable: #blueDirection class: SnakeModel classVariable: false)'			},			EpGenericRefactoring {				#storeString : '(RBCreateAccessorsForVariableRefactoring variable: #redDirection class: SnakeModel classVariable: false)'			}		]	}}OmEntry {	#tags : {		#author : 'Patrick',		#prior : OmReference [ '40' ],		#self : OmReference [ '41' ],		#time : DateAndTime [ '2017-06-22T14:06:12.574248+02:00' ],		#trigger : @3	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #SnakeModel,				#isMetaSide : false			},			#name : #redCells,			#protocol : #accessing,			#sourceCode : 'redCells\r\t^ redCells',			#stamp : 'Patrick 6/22/2017 14:06',			#package : #snake_game		}	}}OmEntry {	#tags : {		#author : 'Patrick',		#prior : OmReference [ '41' ],		#self : OmReference [ '42' ],		#time : DateAndTime [ '2017-06-22T14:06:12.584248+02:00' ],		#trigger : OmReference [ '40' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #SnakeModel,				#isMetaSide : false			},			#name : #'redCells:',			#protocol : #accessing,			#sourceCode : 'redCells: anObject\r\tredCells := anObject',			#stamp : 'Patrick 6/22/2017 14:06',			#package : #snake_game		}	}}OmEntry {	#tags : {		#author : 'Patrick',		#prior : OmReference [ '42' ],		#self : OmReference [ '43' ],		#time : DateAndTime [ '2017-06-22T14:06:12.592248+02:00' ],		#trigger : OmReference [ '40' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #SnakeModel,				#isMetaSide : false			},			#name : #blueDirection,			#protocol : #accessing,			#sourceCode : 'blueDirection\r\t^ blueDirection',			#stamp : 'Patrick 6/22/2017 14:06',			#package : #snake_game		}	}}OmEntry {	#tags : {		#author : 'Patrick',		#prior : OmReference [ '43' ],		#self : OmReference [ '44' ],		#time : DateAndTime [ '2017-06-22T14:06:12.600248+02:00' ],		#trigger : OmReference [ '40' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #SnakeModel,				#isMetaSide : false			},			#name : #'blueDirection:',			#protocol : #accessing,			#sourceCode : 'blueDirection: anObject\r\tblueDirection := anObject',			#stamp : 'Patrick 6/22/2017 14:06',			#package : #snake_game		}	}}OmEntry {	#tags : {		#author : 'Patrick',		#prior : OmReference [ '44' ],		#self : OmReference [ '45' ],		#time : DateAndTime [ '2017-06-22T14:06:12.609248+02:00' ],		#trigger : OmReference [ '40' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #SnakeModel,				#isMetaSide : false			},			#name : #redDirection,			#protocol : #accessing,			#sourceCode : 'redDirection\r\t^ redDirection',			#stamp : 'Patrick 6/22/2017 14:06',			#package : #snake_game		}	}}OmEntry {	#tags : {		#author : 'Patrick',		#prior : OmReference [ '45' ],		#self : OmReference [ '46' ],		#time : DateAndTime [ '2017-06-22T14:06:12.617248+02:00' ],		#trigger : OmReference [ '40' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #SnakeModel,				#isMetaSide : false			},			#name : #'redDirection:',			#protocol : #accessing,			#sourceCode : 'redDirection: anObject\r\tredDirection := anObject',			#stamp : 'Patrick 6/22/2017 14:06',			#package : #snake_game		}	}}OmEntry {	#tags : {		#author : 'Patrick',		#time : DateAndTime [ '2017-06-22T14:06:37.014248+02:00' ],		#prior : OmReference [ '46' ],		#self : OmReference [ '47' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #SnakeModel,				#isMetaSide : false			},			#name : #initialize,			#protocol : #initialize,			#sourceCode : 'initialize\r\tsuper initialize.\r\tfilledCells := 0.\r\tcurrent := nil.\r\twinner := nil.',			#stamp : 'Patrick 6/19/2017 18:30',			#package : #snake_game		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #SnakeModel,				#isMetaSide : false			},			#name : #initialize,			#protocol : #initialize,			#sourceCode : 'initialize\r\tsuper initialize.\r\tblueDirection := #north.',			#stamp : 'Patrick 6/22/2017 14:06',			#package : #snake_game		}	}}OmEntry {	#tags : {		#author : 'Patrick',		#time : DateAndTime [ '2017-06-22T14:06:44.997248+02:00' ],		#prior : OmReference [ '47' ],		#self : OmReference [ '48' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #SnakeGame,				#isMetaSide : false			},			#name : #initialize,			#protocol : #initialize,			#sourceCode : 'initialize\r\t"makes a table to be filled with information"\r\tcontainer := Morph new\r\t\tlayoutPolicy: TableLayout new;\r\t\textent: 500@550;\r\t\tcolor: Color transparent.\r\tmodel := SnakeModel new blueDirection: #south; redDirection: #north.\r\tself addRows.\r\tself addControls.\r\tself addKeyListener.\r\t^self.',			#stamp : 'Patrick 6/22/2017 14:01',			#package : #snake_game		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #SnakeGame,				#isMetaSide : false			},			#name : #initialize,			#protocol : #initialize,			#sourceCode : 'initialize\r\t"makes a table to be filled with information"\r\tcontainer := Morph new\r\t\tlayoutPolicy: TableLayout new;\r\t\textent: 500@550;\r\t\tcolor: Color transparent.\r\tmodel := SnakeModel new.\r\tself addRows.\r\tself addControls.\r\tself addKeyListener.\r\t^self.',			#stamp : 'Patrick 6/22/2017 14:06',			#package : #snake_game		}	}}OmEntry {	#tags : {		#author : 'Patrick',		#time : DateAndTime [ '2017-06-22T14:06:56.928248+02:00' ],		#prior : OmReference [ '48' ],		#self : OmReference [ '49' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #SnakeModel,				#isMetaSide : false			},			#name : #initialize,			#protocol : #initialize,			#sourceCode : 'initialize\r\tsuper initialize.\r\tblueDirection := #north.',			#stamp : 'Patrick 6/22/2017 14:06',			#package : #snake_game		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #SnakeModel,				#isMetaSide : false			},			#name : #initialize,			#protocol : #initialize,			#sourceCode : 'initialize\r\tsuper initialize.\r\tblueDirection := #south.\r\tredDirection := #north.',			#stamp : 'Patrick 6/22/2017 14:06',			#package : #snake_game		}	}}OmEntry {	#tags : {		#author : 'Patrick',		#time : DateAndTime [ '2017-06-22T15:06:11.263248+02:00' ],		#prior : OmReference [ '49' ],		#self : OmReference [ '50' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #SnakeModel,				#isMetaSide : false			},			#name : #initialize,			#protocol : #initialize,			#sourceCode : 'initialize\r\tsuper initialize.\r\tblueDirection := #south.\r\tredDirection := #north.',			#stamp : 'Patrick 6/22/2017 14:07',			#package : #snake_game		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #SnakeModel,				#isMetaSide : false			},			#name : #initialize,			#protocol : #initialize,			#sourceCode : 'initialize\r\tsuper initialize.\r\tblueDirection := #south.\r\tredDirection := #north.\r\tblueCells := OrderedCollection new.\r\tredCells := OrderedCollection new.',			#stamp : 'Patrick 6/22/2017 15:06',			#package : #snake_game		}	}}OmEntry {	#tags : {		#author : 'Patrick',		#time : DateAndTime [ '2017-06-22T15:06:49.802248+02:00' ],		#prior : OmReference [ '50' ],		#self : OmReference [ '51' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #SnakeGame,				#isMetaSide : false			},			#name : #initialize,			#protocol : #initialize,			#sourceCode : 'initialize\r\t"makes a table to be filled with information"\r\tcontainer := Morph new\r\t\tlayoutPolicy: TableLayout new;\r\t\textent: 500@550;\r\t\tcolor: Color transparent.\r\tmodel := SnakeModel new.\r\tself addRows.\r\tself addControls.\r\tself addKeyListener.\r\t^self.',			#stamp : 'Patrick 6/22/2017 14:06',			#package : #snake_game		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #SnakeGame,				#isMetaSide : false			},			#name : #initialize,			#protocol : #initialize,			#sourceCode : 'initialize\r\t"makes a table to be filled with information"\r\tcontainer := Morph new\r\t\tlayoutPolicy: TableLayout new;\r\t\textent: 500@550;\r\t\tcolor: Color transparent.\r\tself addRows.\r\tself addControls.\r\tself addKeyListener.\r\t\r\tmodel := SnakeModel new.\r\t\r\t^self.',			#stamp : 'Patrick 6/22/2017 15:06',			#package : #snake_game		}	}}OmEntry {	#tags : {		#author : 'Patrick',		#time : DateAndTime [ '2017-06-22T15:07:49.230248+02:00' ],		#prior : OmReference [ '51' ],		#self : OmReference [ '52' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #SnakeGame,				#isMetaSide : false			},			#name : #start,			#protocol : #starting,			#sourceCode : 'start\r\t| redCell blueCell |\r\t"0/0 is right bottom corner, 25/25 left top corner"\r\tredCell := (rows at: 6) at: 6.\r\tblueCell := (rows at: 20) at: 20.\r\tredCell color: Color red.\r\tblueCell color: Color blue.\r\tkeyListener takeKeyboardFocus.',			#stamp : 'Patrick 6/22/2017 13:53',			#package : #snake_game		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #SnakeGame,				#isMetaSide : false			},			#name : #start,			#protocol : #starting,			#sourceCode : 'start\r\t| redCell blueCell |\r\t"0/0 is right bottom corner, 25/25 left top corner"\r\tredCell := (rows at: 6) at: 6.\r\tblueCell := (rows at: 20) at: 20.\r\tredCell color: Color red.\r\tblueCell color: Color blue.\r\t\r\tmodel blueCells addFirst: blueCell.\r\tmodel redCells addFirst: redCell.\r\t\r\tkeyListener takeKeyboardFocus.',			#stamp : 'Patrick 6/22/2017 15:07',			#package : #snake_game		}	}}OmEntry {	#tags : {		#author : 'Patrick',		#time : DateAndTime [ '2017-06-22T15:08:45.661248+02:00' ],		#prior : OmReference [ '52' ],		#self : OmReference [ '53' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #KeyListener,				#isMetaSide : false			},			#name : #'handleKeystroke:',			#protocol : #'keyboard control',			#sourceCode : 'handleKeystroke: event "no clue how to actually use this"\r\t| key |\r\tkey := event keyValue.\r\tkey = 30 "up blue"\r\t\tifTrue: [ parent messageArea contents: \'up arrow\' ].\r\tkey = 31 "down blue"\r\t\tifTrue: [ parent messageArea contents: \'down arrow\' ].\r\tkey = 29 "right blue"\r\t\tifTrue: [ parent messageArea contents: \'right arrow\' ].\r\tkey = 28 "left blue"\r\t\tifTrue: [ parent messageArea contents: \'left arrow\' ].\r\tkey = 119 "red up"\r\t\tifTrue: [ parent messageArea contents: \'w\' ].\r\tkey = 115 "red down"\r\t\tifTrue: [ parent messageArea contents: \'s\' ].\r\tkey = 100 "red right"\r\t\tifTrue: [ parent messageArea contents: \'d\' ].\r\tkey = 97 "red left"\r\t\tifTrue: [ parent messageArea contents: \'a\' ].',			#stamp : 'Patrick 6/22/2017 13:59',			#package : #snake_game		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #KeyListener,				#isMetaSide : false			},			#name : #'handleKeystroke:',			#protocol : #'keyboard control',			#sourceCode : 'handleKeystroke: event "no clue how to actually use this"\r\t| key |\r\tkey := event keyValue.\r\tkey = 30 "up blue"\r\t\tifTrue: [ parent model blueDirection: #north ].\r\tkey = 31 "down blue"\r\t\tifTrue: [ parent messageArea contents: \'down arrow\' ].\r\tkey = 29 "right blue"\r\t\tifTrue: [ parent messageArea contents: \'right arrow\' ].\r\tkey = 28 "left blue"\r\t\tifTrue: [ parent messageArea contents: \'left arrow\' ].\r\tkey = 119 "red up"\r\t\tifTrue: [ parent messageArea contents: \'w\' ].\r\tkey = 115 "red down"\r\t\tifTrue: [ parent messageArea contents: \'s\' ].\r\tkey = 100 "red right"\r\t\tifTrue: [ parent messageArea contents: \'d\' ].\r\tkey = 97 "red left"\r\t\tifTrue: [ parent messageArea contents: \'a\' ].',			#stamp : 'Patrick 6/22/2017 15:08',			#package : #snake_game		}	}}OmEntry {	#tags : {		#author : 'Patrick',		#time : DateAndTime [ '2017-06-22T15:09:47.903248+02:00' ],		#prior : OmReference [ '53' ],		#self : OmReference [ '54' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #KeyListener,				#isMetaSide : false			},			#name : #'handleKeystroke:',			#protocol : #'keyboard control',			#sourceCode : 'handleKeystroke: event "no clue how to actually use this"\r\t| key |\r\tkey := event keyValue.\r\tkey = 30 "up blue"\r\t\tifTrue: [ parent model blueDirection: #north ].\r\tkey = 31 "down blue"\r\t\tifTrue: [ parent messageArea contents: \'down arrow\' ].\r\tkey = 29 "right blue"\r\t\tifTrue: [ parent messageArea contents: \'right arrow\' ].\r\tkey = 28 "left blue"\r\t\tifTrue: [ parent messageArea contents: \'left arrow\' ].\r\tkey = 119 "red up"\r\t\tifTrue: [ parent messageArea contents: \'w\' ].\r\tkey = 115 "red down"\r\t\tifTrue: [ parent messageArea contents: \'s\' ].\r\tkey = 100 "red right"\r\t\tifTrue: [ parent messageArea contents: \'d\' ].\r\tkey = 97 "red left"\r\t\tifTrue: [ parent messageArea contents: \'a\' ].',			#stamp : 'Patrick 6/22/2017 15:08',			#package : #snake_game		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #KeyListener,				#isMetaSide : false			},			#name : #'handleKeystroke:',			#protocol : #'keyboard control',			#sourceCode : 'handleKeystroke: event "no clue how to actually use this"\r\t| key |\r\tkey := event keyValue.\r\tkey = 30 "up blue"\r\t\tifTrue: [ parent model blueDirection: #north ].\r\tkey = 31 "down blue"\r\t\tifTrue: [ parent model blueDirection: #south ].\r\tkey = 29 "right blue"\r\t\tifTrue: [ parent model blueDirection: #east ].\r\tkey = 28 "left blue"\r\t\tifTrue: [ parent model blueDirection: #west ].\r\tkey = 119 "red up"\r\t\tifTrue: [ parent model redDirection: #north ].\r\tkey = 115 "red down"\r\t\tifTrue: [ parent model redDirection: #south ].\r\tkey = 100 "red right"\r\t\tifTrue: [ parent model redDirection: #east ].\r\tkey = 97 "red left"\r\t\tifTrue: [ parent model redDirection: #west ].',			#stamp : 'Patrick 6/22/2017 15:09',			#package : #snake_game		}	}}OmEntry {	#tags : {		#author : 'Patrick',		#time : DateAndTime [ '2017-06-22T15:10:23.655248+02:00' ],		#prior : OmReference [ '54' ],		#self : OmReference [ '55' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #KeyListener,				#isMetaSide : false			},			#name : #'handleKeystroke:',			#protocol : #'keyboard control',			#sourceCode : 'handleKeystroke: event "no clue how to actually use this"\r\t| key |\r\tkey := event keyValue.\r\tkey = 30 "up blue"\r\t\tifTrue: [ parent model blueDirection: #north ].\r\tkey = 31 "down blue"\r\t\tifTrue: [ parent model blueDirection: #south ].\r\tkey = 29 "right blue"\r\t\tifTrue: [ parent model blueDirection: #east ].\r\tkey = 28 "left blue"\r\t\tifTrue: [ parent model blueDirection: #west ].\r\tkey = 119 "red up"\r\t\tifTrue: [ parent model redDirection: #north ].\r\tkey = 115 "red down"\r\t\tifTrue: [ parent model redDirection: #south ].\r\tkey = 100 "red right"\r\t\tifTrue: [ parent model redDirection: #east ].\r\tkey = 97 "red left"\r\t\tifTrue: [ parent model redDirection: #west ].',			#stamp : 'Patrick 6/22/2017 15:09',			#package : #snake_game		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #KeyListener,				#isMetaSide : false			},			#name : #'handleKeystroke:',			#protocol : #'keyboard control',			#sourceCode : 'handleKeystroke: event "no clue how to actually use this"\r\t| key |\r\tkey := event keyValue.\r\tkey = 30 "up blue"\r\t\tifTrue: [ parent model blueDirection: #north ].\r\tkey = 31 "down blue"\r\t\tifTrue: [ parent model blueDirection: #south ].\r\tkey = 29 "right blue"\r\t\tifTrue: [ parent model blueDirection: #east ].\r\tkey = 28 "left blue"\r\t\tifTrue: [ parent model blueDirection: #west ].\r\tkey = 119 "red up (w)"\r\t\tifTrue: [ parent model redDirection: #north ].\r\tkey = 115 "red down (s)"\r\t\tifTrue: [ parent model redDirection: #south ].\r\tkey = 100 "red right (d)"\r\t\tifTrue: [ parent model redDirection: #east ].\r\tkey = 97 "red left (a)"\r\t\tifTrue: [ parent model redDirection: #west ].',			#stamp : 'Patrick 6/22/2017 15:10',			#package : #snake_game		}	}}OmEntry {	#tags : {		#author : 'Patrick',		#time : DateAndTime [ '2017-06-22T15:11:52.718248+02:00' ],		#prior : OmReference [ '55' ],		#self : OmReference [ '56' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #SnakeGame,				#isMetaSide : false			},			#name : #addControls,			#protocol : #initialize,			#sourceCode : 'addControls\r\t| rowMorph startBtn |\r\trowMorph := Morph new \r\t\tlayoutPolicy: RowLayout new;\r\t\textent: 500@50;\r\t\tcolor: Color transparent.\r\tstartBtn := self createButton: \'Start\' onClickExecutes: [ self start ].\r\tmessageArea := self createTextArea: \'Welcome to Snake\'.\r\trowMorph addMorph: messageArea.\r\trowMorph addMorph: startBtn.\r\tcontainer addMorph: rowMorph.',			#stamp : 'Patrick 6/21/2017 19:28',			#package : #snake_game		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #SnakeGame,				#isMetaSide : false			},			#name : #addControls,			#protocol : #initialize,			#sourceCode : 'addControls\r\t| rowMorph startBtn |\r\trowMorph := Morph new \r\t\tlayoutPolicy: RowLayout new;\r\t\textent: 500@50;\r\t\tcolor: Color transparent.\r\tstartBtn := self createButton: \'Start\' onClickExecutes: [ self start ].\r\tmessageArea := self createTextArea: \'Welcome to Snake (use WASD to control red, arrow keys to control blue)\'.\r\trowMorph addMorph: messageArea.\r\trowMorph addMorph: startBtn.\r\tcontainer addMorph: rowMorph.',			#stamp : 'Patrick 6/22/2017 15:11',			#package : #snake_game		}	}}OmEntry {	#tags : {		#author : 'Patrick',		#time : DateAndTime [ '2017-06-22T15:12:22.476248+02:00' ],		#prior : OmReference [ '56' ],		#self : OmReference [ '57' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #SnakeGame,				#isMetaSide : false			},			#name : #addControls,			#protocol : #initialize,			#sourceCode : 'addControls\r\t| rowMorph startBtn |\r\trowMorph := Morph new \r\t\tlayoutPolicy: RowLayout new;\r\t\textent: 500@50;\r\t\tcolor: Color transparent.\r\tstartBtn := self createButton: \'Start\' onClickExecutes: [ self start ].\r\tmessageArea := self createTextArea: \'Welcome to Snake (use WASD to control red, arrow keys to control blue)\'.\r\trowMorph addMorph: messageArea.\r\trowMorph addMorph: startBtn.\r\tcontainer addMorph: rowMorph.',			#stamp : 'Patrick 6/22/2017 15:11',			#package : #snake_game		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #SnakeGame,				#isMetaSide : false			},			#name : #addControls,			#protocol : #initialize,			#sourceCode : 'addControls\r\t| rowMorph startBtn |\r\trowMorph := Morph new \r\t\tlayoutPolicy: RowLayout new;\r\t\textent: 500@50;\r\t\tcolor: Color transparent.\r\tstartBtn := self createButton: \'Start\' onClickExecutes: [ self start ].\r\tmessageArea := self createTextArea: \'Welcome to Snake! (WASD controls red, arrow keys control blue)\'.\r\trowMorph addMorph: messageArea.\r\trowMorph addMorph: startBtn.\r\tcontainer addMorph: rowMorph.',			#stamp : 'Patrick 6/22/2017 15:12',			#package : #snake_game		}	}}OmEntry {	#tags : {		#author : 'Patrick',		#time : DateAndTime [ '2017-06-22T17:25:22.996248+02:00' ],		#prior : OmReference [ '57' ],		#self : OmReference [ '58' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #SnakeGame,				#isMetaSide : false			},			#name : #start,			#protocol : #starting,			#sourceCode : 'start\r\t| redCell blueCell |\r\t"0/0 is right bottom corner, 25/25 left top corner"\r\tredCell := (rows at: 6) at: 6.\r\tblueCell := (rows at: 20) at: 20.\r\tredCell color: Color red.\r\tblueCell color: Color blue.\r\t\r\tmodel blueCells addFirst: blueCell.\r\tmodel redCells addFirst: redCell.\r\t\r\tkeyListener takeKeyboardFocus.',			#stamp : 'Patrick 6/22/2017 15:07',			#package : #snake_game		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #SnakeGame,				#isMetaSide : false			},			#name : #start,			#protocol : #starting,			#sourceCode : 'start\r\t| redCell blueCell winner |\r\t"0/0 is right bottom corner, 25/25 left top corner"\r\tredCell := (rows at: 6) at: 6.\r\tblueCell := (rows at: 20) at: 20.\r\tredCell color: Color red.\r\tblueCell color: Color blue.\r\t\r\tmodel blueCells addFirst: blueCell.\r\tmodel redCells addFirst: redCell.\r\t\r\tkeyListener takeKeyboardFocus.\r\t\r\t',			#stamp : 'Patrick 6/22/2017 17:25',			#package : #snake_game		}	}}OmEntry {	#tags : {		#author : 'Patrick',		#time : DateAndTime [ '2017-06-22T17:25:37.721248+02:00' ],		#prior : OmReference [ '58' ],		#self : OmReference [ '59' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #SnakeGame,				#isMetaSide : false			},			#name : #start,			#protocol : #starting,			#sourceCode : 'start\r\t| redCell blueCell winner |\r\t"0/0 is right bottom corner, 25/25 left top corner"\r\tredCell := (rows at: 6) at: 6.\r\tblueCell := (rows at: 20) at: 20.\r\tredCell color: Color red.\r\tblueCell color: Color blue.\r\t\r\tmodel blueCells addFirst: blueCell.\r\tmodel redCells addFirst: redCell.\r\t\r\tkeyListener takeKeyboardFocus.\r\t\r\t',			#stamp : 'Patrick 6/22/2017 17:25',			#package : #snake_game		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #SnakeGame,				#isMetaSide : false			},			#name : #start,			#protocol : #starting,			#sourceCode : 'start\r\t| redCell blueCell winner |\r\t"0/0 is right bottom corner, 25/25 left top corner"\r\tredCell := (rows at: 6) at: 6.\r\tblueCell := (rows at: 20) at: 20.\r\tredCell color: Color red.\r\tblueCell color: Color blue.\r\t\r\tmodel blueCells addFirst: blueCell.\r\tmodel redCells addFirst: redCell.\r\t\r\tkeyListener takeKeyboardFocus.\r\t\r\twinner := nil.\r\t\r\t',			#stamp : 'Patrick 6/22/2017 17:25',			#package : #snake_game		}	}}OmEntry {	#tags : {		#author : 'Patrick',		#time : DateAndTime [ '2017-06-22T17:29:14.548248+02:00' ],		#prior : OmReference [ '59' ],		#self : OmReference [ '60' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #SnakeGame,				#isMetaSide : false			},			#name : #start,			#protocol : #starting,			#sourceCode : 'start\r\t| redCell blueCell winner |\r\t"0/0 is right bottom corner, 25/25 left top corner"\r\tredCell := (rows at: 6) at: 6.\r\tblueCell := (rows at: 20) at: 20.\r\tredCell color: Color red.\r\tblueCell color: Color blue.\r\t\r\tmodel blueCells addFirst: blueCell.\r\tmodel redCells addFirst: redCell.\r\t\r\tkeyListener takeKeyboardFocus.\r\t\r\twinner := nil.\r\t\r\t',			#stamp : 'Patrick 6/22/2017 17:25',			#package : #snake_game		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #SnakeGame,				#isMetaSide : false			},			#name : #start,			#protocol : #starting,			#sourceCode : 'start\r\t| redCell blueCell winner |\r\t"0/0 is right bottom corner, 25/25 left top corner"\r\tredCell := (rows at: 6) at: 6.\r\tblueCell := (rows at: 20) at: 20.\r\tredCell color: Color red.\r\tblueCell color: Color blue.\r\t\r\tmodel blueCells addFirst: blueCell.\r\tmodel redCells addFirst: redCell.\r\t\r\tkeyListener takeKeyboardFocus.\r\t\r\twinner := nil.\r\t\r\t"the game loop code ought to give us a winner at some point"\r\twinner = nil\r\t\twhileTrue: [ \r\t\t\t(Delay forMilliseconds: 120).\r\t\t\tmodel executeSteps.\r\t\t\twinner := winner.\r\t\t].',			#stamp : 'Patrick 6/22/2017 17:29',			#package : #snake_game		}	}}OmEntry {	#tags : {		#author : 'Patrick',		#time : DateAndTime [ '2017-06-22T17:29:24.424248+02:00' ],		#prior : OmReference [ '60' ],		#self : OmReference [ '61' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #SnakeGame,				#isMetaSide : false			},			#name : #start,			#protocol : #starting,			#sourceCode : 'start\r\t| redCell blueCell winner |\r\t"0/0 is right bottom corner, 25/25 left top corner"\r\tredCell := (rows at: 6) at: 6.\r\tblueCell := (rows at: 20) at: 20.\r\tredCell color: Color red.\r\tblueCell color: Color blue.\r\t\r\tmodel blueCells addFirst: blueCell.\r\tmodel redCells addFirst: redCell.\r\t\r\tkeyListener takeKeyboardFocus.\r\t\r\twinner := nil.\r\t\r\t"the game loop code ought to give us a winner at some point"\r\twinner = nil\r\t\twhileTrue: [ \r\t\t\t(Delay forMilliseconds: 120).\r\t\t\tmodel executeSteps.\r\t\t\twinner := winner.\r\t\t].',			#stamp : 'Patrick 6/22/2017 17:29',			#package : #snake_game		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #SnakeGame,				#isMetaSide : false			},			#name : #start,			#protocol : #starting,			#sourceCode : 'start\r\t| redCell blueCell winner |\r\t"0/0 is right bottom corner, 25/25 left top corner"\r\tredCell := (rows at: 6) at: 6.\r\tblueCell := (rows at: 20) at: 20.\r\tredCell color: Color red.\r\tblueCell color: Color blue.\r\t\r\tmodel blueCells addFirst: blueCell.\r\tmodel redCells addFirst: redCell.\r\t\r\tkeyListener takeKeyboardFocus.\r\t\r\twinner := nil.\r\t\r\t"the game loop code ought to give us a winner at some point"\r\twinner = nil\r\t\twhileTrue: [ \r\t\t\t(Delay forMilliseconds: 120).\r\t\t\tmodel executeSteps.\r\t\t\twinner := model checkWinner.\r\t\t].',			#stamp : 'Patrick 6/22/2017 17:29',			#package : #snake_game		}	}}OmEntry {	#tags : {		#author : 'Patrick',		#time : DateAndTime [ '2017-06-22T17:29:46.260248+02:00' ],		#prior : OmReference [ '61' ],		#self : OmReference [ '62' ]	},	#content : EpProtocolAddition {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Matrix',				#traitCompositionSource : '{}',				#definitionSource : 'Matrix subclass: #SnakeModel\r\tinstanceVariableNames: \'blueCells redCells blueDirection redDirection\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'snake_game\''			},			#name : #SnakeModel,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #SnakeModel,						#isMetaSide : false					},					#name : #blueCells,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #SnakeModel,						#isMetaSide : false					},					#name : #redCells,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #SnakeModel,						#isMetaSide : false					},					#name : #blueDirection,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #SnakeModel,						#isMetaSide : false					},					#name : #redDirection,					#parent : @7				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'SnakeModel class\r\tinstanceVariableNames: \'\''				},				#name : #'SnakeModel class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #SnakeModel,					#isMetaSide : false				},				#parent : @7,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #snake_game,			#package : #snake_game,			#sharedPools : OrderedCollection [ ]		},		#protocol : #execution	}}OmEntry {	#tags : {		#author : 'Patrick',		#time : DateAndTime [ '2017-06-22T17:30:01.574248+02:00' ],		#prior : OmReference [ '62' ],		#self : OmReference [ '63' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #SnakeGame,				#isMetaSide : false			},			#name : #start,			#protocol : #starting,			#sourceCode : 'start\r\t| redCell blueCell winner |\r\t"0/0 is right bottom corner, 25/25 left top corner"\r\tredCell := (rows at: 6) at: 6.\r\tblueCell := (rows at: 20) at: 20.\r\tredCell color: Color red.\r\tblueCell color: Color blue.\r\t\r\tmodel blueCells addFirst: blueCell.\r\tmodel redCells addFirst: redCell.\r\t\r\tkeyListener takeKeyboardFocus.\r\t\r\twinner := nil.\r\t\r\t"the game loop code ought to give us a winner at some point"\r\twinner = nil\r\t\twhileTrue: [ \r\t\t\t(Delay forMilliseconds: 120).\r\t\t\tmodel executeSteps.\r\t\t\twinner := model checkWinner.\r\t\t].',			#stamp : 'Patrick 6/22/2017 17:29',			#package : #snake_game		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #SnakeGame,				#isMetaSide : false			},			#name : #start,			#protocol : #starting,			#sourceCode : 'start\r\t| redCell blueCell winner |\r\t"0/0 is right bottom corner, 25/25 left top corner"\r\tredCell := (rows at: 6) at: 6.\r\tblueCell := (rows at: 20) at: 20.\r\tredCell color: Color red.\r\tblueCell color: Color blue.\r\t\r\tmodel blueCells addFirst: blueCell.\r\tmodel redCells addFirst: redCell.\r\t\r\tkeyListener takeKeyboardFocus.\r\t\r\twinner := nil.\r\t\r\t"the game loop code ought to give us a winner at some point"\r\twinner = nil\r\t\twhileTrue: [ \r\t\t\t(Delay forMilliseconds: 120).\r\t\t\tmodel executeStep.\r\t\t\twinner := model checkWinner.\r\t\t].',			#stamp : 'Patrick 6/22/2017 17:30',			#package : #snake_game		}	}}OmEntry {	#tags : {		#author : 'Patrick',		#time : DateAndTime [ '2017-06-22T17:34:34.970248+02:00' ],		#prior : OmReference [ '63' ],		#self : OmReference [ '64' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #SnakeModel,				#isMetaSide : false			},			#name : #executeStep,			#protocol : #execution,			#sourceCode : 'executeStep\r\t"TODO start with blue only"\r\t"TODO this is supposed to compute snake movement"\r\tblueDirection = #north\r\t\tifTrue: [ self moveNorth: blueCells ].\r\tblueDirection = #south\r\t\tifTrue: [ self moveSouth: blueCells ].\r\tblueDirection = #east\r\t\tifTrue: [ self moveEast: blueCells ].\r\tblueDirection = #west\r\t\tifTrue: [ self moveWest: blueCells ].\r\t"TODO here we want to do collision checks after movement"',			#stamp : 'Patrick 6/22/2017 17:34',			#package : #snake_game		}	}}OmEntry {	#tags : {		#author : 'Patrick',		#time : DateAndTime [ '2017-06-22T17:35:46.357248+02:00' ],		#prior : OmReference [ '64' ],		#self : OmReference [ '65' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #SnakeModel,				#isMetaSide : false			},			#name : #'moveNorth:',			#protocol : #execution,			#sourceCode : 'moveNorth: ordered\r\t| firstCell newCell lastCell |\r\t\r\t',			#stamp : 'Patrick 6/22/2017 17:35',			#package : #snake_game		}	}}OmEntry {	#tags : {		#author : 'Patrick',		#time : DateAndTime [ '2017-06-22T17:36:25.464248+02:00' ],		#prior : OmReference [ '65' ],		#self : OmReference [ '66' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #SnakeModel,				#isMetaSide : false			},			#name : #'moveNorth:',			#protocol : #execution,			#sourceCode : 'moveNorth: ordered\r\t| firstCell newCell lastCell |\r\t\r\t',			#stamp : 'Patrick 6/22/2017 17:35',			#package : #snake_game		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #SnakeModel,				#isMetaSide : false			},			#name : #'moveNorth:',			#protocol : #execution,			#sourceCode : 'moveNorth: ordered\r\t| firstCell newCell lastCell |\r\tfirstCell := ordered first.\r\t',			#stamp : 'Patrick 6/22/2017 17:36',			#package : #snake_game		}	}}OmEntry {	#tags : {		#author : 'Patrick',		#time : DateAndTime [ '2017-06-22T17:38:28.266248+02:00' ],		#prior : OmReference [ '66' ],		#self : OmReference [ '67' ]	},	#content : EpCompositeRefactoring {		#childrenRefactorings : [			EpGenericRefactoring {				#storeString : '(RBCreateAccessorsForVariableRefactoring variable: #parent class: SnakeCell classVariable: false)'			},			EpGenericRefactoring {				#storeString : '(RBCreateAccessorsForVariableRefactoring variable: #row class: SnakeCell classVariable: false)'			},			EpGenericRefactoring {				#storeString : '(RBCreateAccessorsForVariableRefactoring variable: #column class: SnakeCell classVariable: false)'			}		]	}}OmEntry {	#tags : {		#author : 'Patrick',		#prior : OmReference [ '67' ],		#self : OmReference [ '68' ],		#time : DateAndTime [ '2017-06-22T17:38:28.286248+02:00' ],		#trigger : @3	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #SnakeCell,				#isMetaSide : false			},			#name : #parent,			#protocol : #accessing,			#sourceCode : 'parent\r\t^ parent',			#stamp : 'Patrick 6/22/2017 17:38',			#package : #snake_game		}	}}OmEntry {	#tags : {		#author : 'Patrick',		#prior : OmReference [ '68' ],		#self : OmReference [ '69' ],		#time : DateAndTime [ '2017-06-22T17:38:28.299248+02:00' ],		#trigger : OmReference [ '67' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #SnakeCell,				#isMetaSide : false			},			#name : #'parent:',			#protocol : #accessing,			#sourceCode : 'parent: anObject\r\tparent := anObject',			#stamp : 'Patrick 6/22/2017 17:38',			#package : #snake_game		}	}}OmEntry {	#tags : {		#author : 'Patrick',		#prior : OmReference [ '69' ],		#self : OmReference [ '70' ],		#time : DateAndTime [ '2017-06-22T17:38:28.308248+02:00' ],		#trigger : OmReference [ '67' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #SnakeCell,				#isMetaSide : false			},			#name : #row,			#protocol : #accessing,			#sourceCode : 'row\r\t^ row',			#stamp : 'Patrick 6/22/2017 17:38',			#package : #snake_game		}	}}OmEntry {	#tags : {		#author : 'Patrick',		#prior : OmReference [ '70' ],		#self : OmReference [ '71' ],		#time : DateAndTime [ '2017-06-22T17:38:28.316248+02:00' ],		#trigger : OmReference [ '67' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #SnakeCell,				#isMetaSide : false			},			#name : #'row:',			#protocol : #accessing,			#sourceCode : 'row: anObject\r\trow := anObject',			#stamp : 'Patrick 6/22/2017 17:38',			#package : #snake_game		}	}}OmEntry {	#tags : {		#author : 'Patrick',		#prior : OmReference [ '71' ],		#self : OmReference [ '72' ],		#time : DateAndTime [ '2017-06-22T17:38:28.325248+02:00' ],		#trigger : OmReference [ '67' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #SnakeCell,				#isMetaSide : false			},			#name : #column,			#protocol : #accessing,			#sourceCode : 'column\r\t^ column',			#stamp : 'Patrick 6/22/2017 17:38',			#package : #snake_game		}	}}OmEntry {	#tags : {		#author : 'Patrick',		#prior : OmReference [ '72' ],		#self : OmReference [ '73' ],		#time : DateAndTime [ '2017-06-22T17:38:28.333248+02:00' ],		#trigger : OmReference [ '67' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #SnakeCell,				#isMetaSide : false			},			#name : #'column:',			#protocol : #accessing,			#sourceCode : 'column: anObject\r\tcolumn := anObject',			#stamp : 'Patrick 6/22/2017 17:38',			#package : #snake_game		}	}}OmEntry {	#tags : {		#author : 'Patrick',		#time : DateAndTime [ '2017-06-22T17:41:08.448248+02:00' ],		#prior : OmReference [ '73' ],		#self : OmReference [ '74' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #SnakeModel,				#isMetaSide : false			},			#name : #'moveNorth:',			#protocol : #execution,			#sourceCode : 'moveNorth: ordered\r\t| firstCell newCell lastCell |\r\tfirstCell := ordered first.\r\t',			#stamp : 'Patrick 6/22/2017 17:36',			#package : #snake_game		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #SnakeModel,				#isMetaSide : false			},			#name : #'moveNorth:',			#protocol : #execution,			#sourceCode : 'moveNorth: ordered\r\t| firstCell newCell lastCell |\r\tfirstCell := ordered first.\r\t(firstCell column = 25)\r\t\tifTrue: [ "TODO catch collision with border" ].\r\t\r\t',			#stamp : 'Patrick 6/22/2017 17:41',			#package : #snake_game		}	}}OmEntry {	#tags : {		#author : 'Patrick',		#time : DateAndTime [ '2017-06-22T17:42:01.049248+02:00' ],		#prior : OmReference [ '74' ],		#self : OmReference [ '75' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #SnakeModel,				#isMetaSide : false			},			#name : #'moveNorth:',			#protocol : #execution,			#sourceCode : 'moveNorth: ordered\r\t| firstCell newCell lastCell |\r\tfirstCell := ordered first.\r\t(firstCell column = 25)\r\t\tifTrue: [ "TODO catch collision with border" ].\r\t\r\t',			#stamp : 'Patrick 6/22/2017 17:41',			#package : #snake_game		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #SnakeModel,				#isMetaSide : false			},			#name : #'moveNorth:',			#protocol : #execution,			#sourceCode : 'moveNorth: ordered\r\t| firstCell newCell lastCell |\r\tfirstCell := ordered first.\r\t(firstCell column = 25)\r\t\tifTrue: [ "TODO catch collision with border" ]\r\t',			#stamp : 'Patrick 6/22/2017 17:42',			#package : #snake_game		}	}}OmEntry {	#tags : {		#author : 'Patrick',		#time : DateAndTime [ '2017-06-22T17:42:15.533248+02:00' ],		#prior : OmReference [ '75' ],		#self : OmReference [ '76' ]	},	#content : EpClassModification {		#oldClass : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Matrix',				#traitCompositionSource : '{}',				#definitionSource : 'Matrix subclass: #SnakeModel\r\tinstanceVariableNames: \'blueCells redCells blueDirection redDirection\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'snake_game\''			},			#name : #SnakeModel,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #SnakeModel,						#isMetaSide : false					},					#name : #blueCells,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #SnakeModel,						#isMetaSide : false					},					#name : #redCells,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #SnakeModel,						#isMetaSide : false					},					#name : #blueDirection,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #SnakeModel,						#isMetaSide : false					},					#name : #redDirection,					#parent : @7				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'SnakeModel class\r\tinstanceVariableNames: \'\''				},				#name : #'SnakeModel class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #SnakeModel,					#isMetaSide : false				},				#parent : @7,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #snake_game,			#package : #snake_game,			#sharedPools : OrderedCollection [ ]		},		#newClass : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Matrix',				#traitCompositionSource : '{}',				#definitionSource : 'Matrix subclass: #SnakeModel\r\tinstanceVariableNames: \'parent blueCells redCells blueDirection redDirection\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'snake_game\''			},			#name : #SnakeModel,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #SnakeModel,						#isMetaSide : false					},					#name : #parent,					#parent : @29				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #SnakeModel,						#isMetaSide : false					},					#name : #blueCells,					#parent : @29				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #SnakeModel,						#isMetaSide : false					},					#name : #redCells,					#parent : @29				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #SnakeModel,						#isMetaSide : false					},					#name : #blueDirection,					#parent : @29				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #SnakeModel,						#isMetaSide : false					},					#name : #redDirection,					#parent : @29				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'SnakeModel class\r\tinstanceVariableNames: \'\''				},				#name : #'SnakeModel class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @29			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #SnakeModel,					#isMetaSide : false				},				#parent : @29,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #snake_game,			#package : #snake_game,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Patrick',		#time : DateAndTime [ '2017-06-22T17:42:33.794248+02:00' ],		#prior : OmReference [ '76' ],		#self : OmReference [ '77' ]	},	#content : EpClassModification {		#oldClass : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Matrix',				#traitCompositionSource : '{}',				#definitionSource : 'Matrix subclass: #SnakeModel\r\tinstanceVariableNames: \'parent blueCells redCells blueDirection redDirection\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'snake_game\''			},			#name : #SnakeModel,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #SnakeModel,						#isMetaSide : false					},					#name : #parent,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #SnakeModel,						#isMetaSide : false					},					#name : #blueCells,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #SnakeModel,						#isMetaSide : false					},					#name : #redCells,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #SnakeModel,						#isMetaSide : false					},					#name : #blueDirection,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #SnakeModel,						#isMetaSide : false					},					#name : #redDirection,					#parent : @7				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'SnakeModel class\r\tinstanceVariableNames: \'\''				},				#name : #'SnakeModel class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #SnakeModel,					#isMetaSide : false				},				#parent : @7,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #snake_game,			#package : #snake_game,			#sharedPools : OrderedCollection [ ]		},		#newClass : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Matrix',				#traitCompositionSource : '{}',				#definitionSource : 'Matrix subclass: #SnakeModel\r\tinstanceVariableNames: \'board blueCells redCells blueDirection redDirection\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'snake_game\''			},			#name : #SnakeModel,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #SnakeModel,						#isMetaSide : false					},					#name : #board,					#parent : @31				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #SnakeModel,						#isMetaSide : false					},					#name : #blueCells,					#parent : @31				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #SnakeModel,						#isMetaSide : false					},					#name : #redCells,					#parent : @31				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #SnakeModel,						#isMetaSide : false					},					#name : #blueDirection,					#parent : @31				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #SnakeModel,						#isMetaSide : false					},					#name : #redDirection,					#parent : @31				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'SnakeModel class\r\tinstanceVariableNames: \'\''				},				#name : #'SnakeModel class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @31			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #SnakeModel,					#isMetaSide : false				},				#parent : @31,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #snake_game,			#package : #snake_game,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Patrick',		#time : DateAndTime [ '2017-06-22T17:44:03.118248+02:00' ],		#prior : OmReference [ '77' ],		#self : OmReference [ '78' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #SnakeGame,				#isMetaSide : false			},			#name : #initialize,			#protocol : #initialize,			#sourceCode : 'initialize\r\t"makes a table to be filled with information"\r\tcontainer := Morph new\r\t\tlayoutPolicy: TableLayout new;\r\t\textent: 500@550;\r\t\tcolor: Color transparent.\r\tself addRows.\r\tself addControls.\r\tself addKeyListener.\r\t\r\tmodel := SnakeModel new.\r\t\r\t^self.',			#stamp : 'Patrick 6/22/2017 15:06',			#package : #snake_game		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #SnakeGame,				#isMetaSide : false			},			#name : #initialize,			#protocol : #initialize,			#sourceCode : 'initialize\r\t"makes a table to be filled with information"\r\tcontainer := Morph new\r\t\tlayoutPolicy: TableLayout new;\r\t\textent: 500@550;\r\t\tcolor: Color transparent.\r\t\t\r\tmodel := SnakeModel new.\r\t\r\tself addRows.\r\tself addControls.\r\tself addKeyListener.\r\t\r\t^self.',			#stamp : 'Patrick 6/22/2017 17:44',			#package : #snake_game		}	}}OmEntry {	#tags : {		#author : 'Patrick',		#time : DateAndTime [ '2017-06-22T17:44:10.533248+02:00' ],		#prior : OmReference [ '78' ],		#self : OmReference [ '79' ]	},	#content : EpCompositeRefactoring {		#childrenRefactorings : [			EpGenericRefactoring {				#storeString : '(RBCreateAccessorsForVariableRefactoring variable: #board class: SnakeModel classVariable: false)'			},			EpGenericRefactoring {				#storeString : '(RBCreateAccessorsForVariableRefactoring variable: #blueCells class: SnakeModel classVariable: false)'			},			EpGenericRefactoring {				#storeString : '(RBCreateAccessorsForVariableRefactoring variable: #redCells class: SnakeModel classVariable: false)'			},			EpGenericRefactoring {				#storeString : '(RBCreateAccessorsForVariableRefactoring variable: #blueDirection class: SnakeModel classVariable: false)'			},			EpGenericRefactoring {				#storeString : '(RBCreateAccessorsForVariableRefactoring variable: #redDirection class: SnakeModel classVariable: false)'			}		]	}}OmEntry {	#tags : {		#author : 'Patrick',		#prior : OmReference [ '79' ],		#self : OmReference [ '80' ],		#time : DateAndTime [ '2017-06-22T17:44:10.553248+02:00' ],		#trigger : @3	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #SnakeModel,				#isMetaSide : false			},			#name : #board,			#protocol : #accessing,			#sourceCode : 'board\r\t^ board',			#stamp : 'Patrick 6/22/2017 17:44',			#package : #snake_game		}	}}OmEntry {	#tags : {		#author : 'Patrick',		#prior : OmReference [ '80' ],		#self : OmReference [ '81' ],		#time : DateAndTime [ '2017-06-22T17:44:10.565248+02:00' ],		#trigger : OmReference [ '79' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #SnakeModel,				#isMetaSide : false			},			#name : #'board:',			#protocol : #accessing,			#sourceCode : 'board: anObject\r\tboard := anObject',			#stamp : 'Patrick 6/22/2017 17:44',			#package : #snake_game		}	}}OmEntry {	#tags : {		#author : 'Patrick',		#time : DateAndTime [ '2017-06-22T17:44:22.661248+02:00' ],		#prior : OmReference [ '81' ],		#self : OmReference [ '82' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #SnakeGame,				#isMetaSide : false			},			#name : #initialize,			#protocol : #initialize,			#sourceCode : 'initialize\r\t"makes a table to be filled with information"\r\tcontainer := Morph new\r\t\tlayoutPolicy: TableLayout new;\r\t\textent: 500@550;\r\t\tcolor: Color transparent.\r\t\t\r\tmodel := SnakeModel new.\r\t\r\tself addRows.\r\tself addControls.\r\tself addKeyListener.\r\t\r\t^self.',			#stamp : 'Patrick 6/22/2017 17:44',			#package : #snake_game		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #SnakeGame,				#isMetaSide : false			},			#name : #initialize,			#protocol : #initialize,			#sourceCode : 'initialize\r\t"makes a table to be filled with information"\r\tcontainer := Morph new\r\t\tlayoutPolicy: TableLayout new;\r\t\textent: 500@550;\r\t\tcolor: Color transparent.\r\t\t\r\tmodel := SnakeModel new.\r\tmodel board put: self. \r\t\r\tself addRows.\r\tself addControls.\r\tself addKeyListener.\r\t\r\t^self.',			#stamp : 'Patrick 6/22/2017 17:44',			#package : #snake_game		}	}}OmEntry {	#tags : {		#author : 'Patrick',		#time : DateAndTime [ '2017-06-22T17:44:25.930248+02:00' ],		#prior : OmReference [ '82' ],		#self : OmReference [ '83' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #SnakeGame,				#isMetaSide : false			},			#name : #initialize,			#protocol : #initialize,			#sourceCode : 'initialize\r\t"makes a table to be filled with information"\r\tcontainer := Morph new\r\t\tlayoutPolicy: TableLayout new;\r\t\textent: 500@550;\r\t\tcolor: Color transparent.\r\t\t\r\tmodel := SnakeModel new.\r\tmodel board put: self. \r\t\r\tself addRows.\r\tself addControls.\r\tself addKeyListener.\r\t\r\t^self.',			#stamp : 'Patrick 6/22/2017 17:44',			#package : #snake_game		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #SnakeGame,				#isMetaSide : false			},			#name : #initialize,			#protocol : #initialize,			#sourceCode : 'initialize\r\t"makes a table to be filled with information"\r\tcontainer := Morph new\r\t\tlayoutPolicy: TableLayout new;\r\t\textent: 500@550;\r\t\tcolor: Color transparent.\r\t\t\r\tmodel := SnakeModel new.\r\tmodel board put: self.\r\t\r\tself addRows.\r\tself addControls.\r\tself addKeyListener.\r\t\r\t^self.',			#stamp : 'Patrick 6/22/2017 17:44',			#package : #snake_game		}	}}OmEntry {	#tags : {		#author : 'Patrick',		#time : DateAndTime [ '2017-06-22T17:44:46.322248+02:00' ],		#prior : OmReference [ '83' ],		#self : OmReference [ '84' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #SnakeGame,				#isMetaSide : false			},			#name : #initialize,			#protocol : #initialize,			#sourceCode : 'initialize\r\t"makes a table to be filled with information"\r\tcontainer := Morph new\r\t\tlayoutPolicy: TableLayout new;\r\t\textent: 500@550;\r\t\tcolor: Color transparent.\r\t\t\r\tmodel := SnakeModel new.\r\tmodel board put: self.\r\t\r\tself addRows.\r\tself addControls.\r\tself addKeyListener.\r\t\r\t^self.',			#stamp : 'Patrick 6/22/2017 17:44',			#package : #snake_game		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #SnakeGame,				#isMetaSide : false			},			#name : #initialize,			#protocol : #initialize,			#sourceCode : 'initialize\r\t"makes a table to be filled with information"\r\tcontainer := Morph new\r\t\tlayoutPolicy: TableLayout new;\r\t\textent: 500@550;\r\t\tcolor: Color transparent.\r\t\t\r\tmodel := SnakeModel new.\r\tmodel board: self.\r\t\r\tself addRows.\r\tself addControls.\r\tself addKeyListener.\r\t\r\t^self.',			#stamp : 'Patrick 6/22/2017 17:44',			#package : #snake_game		}	}}OmEntry {	#tags : {		#author : 'Patrick',		#time : DateAndTime [ '2017-06-22T17:45:51.228248+02:00' ],		#prior : OmReference [ '84' ],		#self : OmReference [ '85' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #SnakeModel,				#isMetaSide : false			},			#name : #'moveNorth:',			#protocol : #execution,			#sourceCode : 'moveNorth: ordered\r\t| firstCell newCell lastCell |\r\tfirstCell := ordered first.\r\t(firstCell column = 25)\r\t\tifTrue: [ "TODO catch collision with border" ]\r\t',			#stamp : 'Patrick 6/22/2017 17:42',			#package : #snake_game		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #SnakeModel,				#isMetaSide : false			},			#name : #'moveNorth:',			#protocol : #execution,			#sourceCode : 'moveNorth: ordered\r\t| firstCell newCell lastCell |\r\tfirstCell := ordered first.\r\t(firstCell column = 25)\r\t\tifTrue: [ "TODO catch collision with border" ]\r\t\tifFalse: [ newCell := board rows at: (firstCell row) ]\r\t',			#stamp : 'Patrick 6/22/2017 17:45',			#package : #snake_game		}	}}OmEntry {	#tags : {		#author : 'Patrick',		#time : DateAndTime [ '2017-06-22T17:46:11.157248+02:00' ],		#prior : OmReference [ '85' ],		#self : OmReference [ '86' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #SnakeModel,				#isMetaSide : false			},			#name : #'moveNorth:',			#protocol : #execution,			#sourceCode : 'moveNorth: ordered\r\t| firstCell newCell lastCell |\r\tfirstCell := ordered first.\r\t(firstCell column = 25)\r\t\tifTrue: [ "TODO catch collision with border" ]\r\t\tifFalse: [ newCell := board rows at: (firstCell row) ]\r\t',			#stamp : 'Patrick 6/22/2017 17:45',			#package : #snake_game		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #SnakeModel,				#isMetaSide : false			},			#name : #'moveNorth:',			#protocol : #execution,			#sourceCode : 'moveNorth: ordered\r\t| firstCell newCell lastCell |\r\tfirstCell := ordered first.\r\t(firstCell column = 25)\r\t\tifTrue: [ "TODO catch collision with border" ]\r\t\tifFalse: [ newCell := board rows at: (firstCell row)+1 at: (firstCell column)]\r\t',			#stamp : 'Patrick 6/22/2017 17:46',			#package : #snake_game		}	}}OmEntry {	#tags : {		#author : 'Patrick',		#time : DateAndTime [ '2017-06-22T17:47:14.288248+02:00' ],		#prior : OmReference [ '86' ],		#self : OmReference [ '87' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #SnakeModel,				#isMetaSide : false			},			#name : #'moveNorth:',			#protocol : #execution,			#sourceCode : 'moveNorth: ordered\r\t| firstCell newCell lastCell |\r\tfirstCell := ordered first.\r\t(firstCell column = 25)\r\t\tifTrue: [ "TODO catch collision with border" ]\r\t\tifFalse: [ newCell := board rows at: (firstCell row)+1 at: (firstCell column)]\r\t',			#stamp : 'Patrick 6/22/2017 17:46',			#package : #snake_game		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #SnakeModel,				#isMetaSide : false			},			#name : #'moveNorth:',			#protocol : #execution,			#sourceCode : 'moveNorth: ordered\r\t| firstCell newCell lastCell |\r\tfirstCell := ordered first.\r\t(firstCell column = 25)\r\t\tifTrue: [ "TODO catch collision with border" ]\r\t\tifFalse: [ newCell := board rows at: (firstCell row)+1 at: (firstCell column)].\r\tordered removeLast.\r\t',			#stamp : 'Patrick 6/22/2017 17:47',			#package : #snake_game		}	}}OmEntry {	#tags : {		#author : 'Patrick',		#time : DateAndTime [ '2017-06-22T17:47:51.116248+02:00' ],		#prior : OmReference [ '87' ],		#self : OmReference [ '88' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #SnakeModel,				#isMetaSide : false			},			#name : #'moveNorth:',			#protocol : #execution,			#sourceCode : 'moveNorth: ordered\r\t| firstCell newCell lastCell |\r\tfirstCell := ordered first.\r\t(firstCell column = 25)\r\t\tifTrue: [ "TODO catch collision with border" ]\r\t\tifFalse: [ newCell := board rows at: (firstCell row)+1 at: (firstCell column)].\r\tordered removeLast.\r\t',			#stamp : 'Patrick 6/22/2017 17:47',			#package : #snake_game		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #SnakeModel,				#isMetaSide : false			},			#name : #'moveNorth:',			#protocol : #execution,			#sourceCode : 'moveNorth: ordered\r\t| firstCell newCell lastCell |\r\tfirstCell := ordered first.\r\t(firstCell column = 25)\r\t\tifTrue: [ "TODO catch collision with border" ]\r\t\tifFalse: [ newCell := board rows at: (firstCell row)+1 at: (firstCell column)].\r\tlastCell := ordered last.\r\t\r\t\r\t\r\tordered removeLast.\r\t',			#stamp : 'Patrick 6/22/2017 17:47',			#package : #snake_game		}	}}OmEntry {	#tags : {		#author : 'Patrick',		#time : DateAndTime [ '2017-06-22T17:49:10.338248+02:00' ],		#prior : OmReference [ '88' ],		#self : OmReference [ '89' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #SnakeModel,				#isMetaSide : false			},			#name : #'moveNorth:',			#protocol : #execution,			#sourceCode : 'moveNorth: ordered\r\t| firstCell newCell lastCell |\r\tfirstCell := ordered first.\r\t(firstCell column = 25)\r\t\tifTrue: [ "TODO catch collision with border" ]\r\t\tifFalse: [ newCell := board rows at: (firstCell row)+1 at: (firstCell column)].\r\tlastCell := ordered last.\r\t\r\t\r\t\r\tordered removeLast.\r\t',			#stamp : 'Patrick 6/22/2017 17:47',			#package : #snake_game		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #SnakeModel,				#isMetaSide : false			},			#name : #'moveNorth:',			#protocol : #execution,			#sourceCode : 'moveNorth: ordered\r\t| firstCell newCell lastCell |\r\tfirstCell := ordered first.\r\t(firstCell column = 25)\r\t\tifTrue: [ "TODO catch collision with border" ]\r\t\tifFalse: [ newCell := board rows at: (firstCell row)+1 at: (firstCell column)].\r\tlastCell := ordered last.\r\t\r\tnewCell color: Color blue.\r\tlastCell color: Color lightGray.\r\t\r\tordered removeLast.\r\t',			#stamp : 'Patrick 6/22/2017 17:49',			#package : #snake_game		}	}}OmEntry {	#tags : {		#author : 'Patrick',		#time : DateAndTime [ '2017-06-22T17:49:23.324248+02:00' ],		#prior : OmReference [ '89' ],		#self : OmReference [ '90' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #SnakeModel,				#isMetaSide : false			},			#name : #'moveNorth:',			#protocol : #execution,			#sourceCode : 'moveNorth: ordered\r\t| firstCell newCell lastCell |\r\tfirstCell := ordered first.\r\t(firstCell column = 25)\r\t\tifTrue: [ "TODO catch collision with border" ]\r\t\tifFalse: [ newCell := board rows at: (firstCell row)+1 at: (firstCell column)].\r\tlastCell := ordered last.\r\t\r\tnewCell color: Color blue.\r\tlastCell color: Color lightGray.\r\t\r\tordered removeLast.\r\t',			#stamp : 'Patrick 6/22/2017 17:49',			#package : #snake_game		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #SnakeModel,				#isMetaSide : false			},			#name : #'moveNorth:',			#protocol : #execution,			#sourceCode : 'moveNorth: ordered\r\t| firstCell newCell lastCell |\r\tfirstCell := ordered first.\r\t(firstCell column = 25)\r\t\tifTrue: [ "TODO catch collision with border" ]\r\t\tifFalse: [ newCell := board rows at: (firstCell row)+1 at: (firstCell column)].\r\tlastCell := ordered last.\r\t\r\tnewCell color: Color blue.\r\tlastCell color: Color lightGray.\r\t\r\tordered addFirst: newCell.\r\tordered removeLast.\r\t',			#stamp : 'Patrick 6/22/2017 17:49',			#package : #snake_game		}	}}OmEntry {	#tags : {		#author : 'Patrick',		#time : DateAndTime [ '2017-06-22T17:50:38.377248+02:00' ],		#prior : OmReference [ '90' ],		#self : OmReference [ '91' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #SnakeModel,				#isMetaSide : false			},			#name : #'moveNorth:for:',			#protocol : #execution,			#sourceCode : 'moveNorth: ordered for: player\r\t| firstCell newCell lastCell playerColor |\r\tfirstCell := ordered first.\r\t(firstCell column = 25)\r\t\tifTrue: [ "TODO catch collision with border" ]\r\t\tifFalse: [ newCell := board rows at: (firstCell row)+1 at: (firstCell column)].\r\tlastCell := ordered last.\r\t\r\tplayerColor := self getColor: player.\r\t\r\tnewCell color: Color blue.\r\tlastCell color: Color lightGray.\r\t\r\tordered addFirst: newCell.\r\tordered removeLast.\r\t',			#stamp : 'Patrick 6/22/2017 17:50',			#package : #snake_game		}	}}OmEntry {	#tags : {		#author : 'Patrick',		#time : DateAndTime [ '2017-06-22T17:50:50.664248+02:00' ],		#prior : OmReference [ '91' ],		#self : OmReference [ '92' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #SnakeModel,				#isMetaSide : false			},			#name : #'moveNorth:',			#protocol : #execution,			#sourceCode : 'moveNorth: ordered\r\t| firstCell newCell lastCell |\r\tfirstCell := ordered first.\r\t(firstCell column = 25)\r\t\tifTrue: [ "TODO catch collision with border" ]\r\t\tifFalse: [ newCell := board rows at: (firstCell row)+1 at: (firstCell column)].\r\tlastCell := ordered last.\r\t\r\tnewCell color: Color blue.\r\tlastCell color: Color lightGray.\r\t\r\tordered addFirst: newCell.\r\tordered removeLast.\r\t',			#stamp : 'Patrick 6/22/2017 17:49',			#package : #snake_game		}	}}OmEntry {	#tags : {		#author : 'Patrick',		#time : DateAndTime [ '2017-06-22T17:52:05.401248+02:00' ],		#prior : OmReference [ '92' ],		#self : OmReference [ '93' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #SnakeModel,				#isMetaSide : false			},			#name : #'moveNorth:',			#protocol : #execution,			#sourceCode : 'moveNorth: ordered\r\t| firstCell newCell lastCell playerColor |\r\tfirstCell := ordered first.\r\t(firstCell column = 25)\r\t\tifTrue: [ "TODO catch collision with border" ]\r\t\tifFalse: [ newCell := board rows at: (firstCell row)+1 at: (firstCell column)].\r\tlastCell := ordered last.\r\t\r\tplayerColor := firstCell color.\r\t\r\tnewCell color: playerColor.\r\tlastCell color: Color lightGray.\r\t\r\tordered addFirst: newCell.\r\tordered removeLast.\r\t',			#stamp : 'Patrick 6/22/2017 17:52',			#package : #snake_game		}	}}OmEntry {	#tags : {		#author : 'Patrick',		#time : DateAndTime [ '2017-06-22T17:52:19.457248+02:00' ],		#prior : OmReference [ '93' ],		#self : OmReference [ '94' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #SnakeModel,				#isMetaSide : false			},			#name : #'moveNorth:for:',			#protocol : #execution,			#sourceCode : 'moveNorth: ordered for: player\r\t| firstCell newCell lastCell playerColor |\r\tfirstCell := ordered first.\r\t(firstCell column = 25)\r\t\tifTrue: [ "TODO catch collision with border" ]\r\t\tifFalse: [ newCell := board rows at: (firstCell row)+1 at: (firstCell column)].\r\tlastCell := ordered last.\r\t\r\tplayerColor := self getColor: player.\r\t\r\tnewCell color: Color blue.\r\tlastCell color: Color lightGray.\r\t\r\tordered addFirst: newCell.\r\tordered removeLast.\r\t',			#stamp : 'Patrick 6/22/2017 17:50',			#package : #snake_game		}	}}OmEntry {	#tags : {		#author : 'Patrick',		#time : DateAndTime [ '2017-06-22T17:52:53.963248+02:00' ],		#prior : OmReference [ '94' ],		#self : OmReference [ '95' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #SnakeModel,				#isMetaSide : false			},			#name : #'moveSouth:',			#protocol : #execution,			#sourceCode : 'moveSouth: ordered\r\t| firstCell newCell lastCell playerColor |\r\tfirstCell := ordered first.\r\t(firstCell column = 1)\r\t\tifTrue: [ "TODO catch collision with border" ]\r\t\tifFalse: [ newCell := board rows at: (firstCell row)-1 at: (firstCell column)].\r\tlastCell := ordered last.\r\t\r\tplayerColor := firstCell color.\r\t\r\tnewCell color: playerColor.\r\tlastCell color: Color lightGray.\r\t\r\tordered addFirst: newCell.\r\tordered removeLast.',			#stamp : 'Patrick 6/22/2017 17:52',			#package : #snake_game		}	}}OmEntry {	#tags : {		#author : 'Patrick',		#time : DateAndTime [ '2017-06-22T17:53:33.813248+02:00' ],		#prior : OmReference [ '95' ],		#self : OmReference [ '96' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #SnakeModel,				#isMetaSide : false			},			#name : #'moveEast:',			#protocol : #execution,			#sourceCode : 'moveEast: ordered\r\t| firstCell newCell lastCell playerColor |\r\tfirstCell := ordered first.\r\t(firstCell column = 25)\r\t\tifTrue: [ "TODO catch collision with border" ]\r\t\tifFalse: [ newCell := board rows at: (firstCell row)+1 at: (firstCell column)].\r\tlastCell := ordered last.\r\t\r\tplayerColor := firstCell color.\r\t\r\tnewCell color: playerColor.\r\tlastCell color: Color lightGray.\r\t\r\tordered addFirst: newCell.\r\tordered removeLast.',			#stamp : 'Patrick 6/22/2017 17:53',			#package : #snake_game		}	}}OmEntry {	#tags : {		#author : 'Patrick',		#time : DateAndTime [ '2017-06-22T17:53:38.206248+02:00' ],		#prior : OmReference [ '96' ],		#self : OmReference [ '97' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #SnakeModel,				#isMetaSide : false			},			#name : #'moveNorth:',			#protocol : #execution,			#sourceCode : 'moveNorth: ordered\r\t| firstCell newCell lastCell playerColor |\r\tfirstCell := ordered first.\r\t(firstCell column = 25)\r\t\tifTrue: [ "TODO catch collision with border" ]\r\t\tifFalse: [ newCell := board rows at: (firstCell row)+1 at: (firstCell column)].\r\tlastCell := ordered last.\r\t\r\tplayerColor := firstCell color.\r\t\r\tnewCell color: playerColor.\r\tlastCell color: Color lightGray.\r\t\r\tordered addFirst: newCell.\r\tordered removeLast.\r\t',			#stamp : 'Patrick 6/22/2017 17:52',			#package : #snake_game		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #SnakeModel,				#isMetaSide : false			},			#name : #'moveNorth:',			#protocol : #execution,			#sourceCode : 'moveNorth: ordered\r\t| firstCell newCell lastCell playerColor |\r\tfirstCell := ordered first.\r\t(firstCell row = 25)\r\t\tifTrue: [ "TODO catch collision with border" ]\r\t\tifFalse: [ newCell := board rows at: (firstCell row)+1 at: (firstCell column)].\r\tlastCell := ordered last.\r\t\r\tplayerColor := firstCell color.\r\t\r\tnewCell color: playerColor.\r\tlastCell color: Color lightGray.\r\t\r\tordered addFirst: newCell.\r\tordered removeLast.\r\t',			#stamp : 'Patrick 6/22/2017 17:53',			#package : #snake_game		}	}}OmEntry {	#tags : {		#author : 'Patrick',		#time : DateAndTime [ '2017-06-22T17:53:42.787248+02:00' ],		#prior : OmReference [ '97' ],		#self : OmReference [ '98' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #SnakeModel,				#isMetaSide : false			},			#name : #'moveSouth:',			#protocol : #execution,			#sourceCode : 'moveSouth: ordered\r\t| firstCell newCell lastCell playerColor |\r\tfirstCell := ordered first.\r\t(firstCell column = 1)\r\t\tifTrue: [ "TODO catch collision with border" ]\r\t\tifFalse: [ newCell := board rows at: (firstCell row)-1 at: (firstCell column)].\r\tlastCell := ordered last.\r\t\r\tplayerColor := firstCell color.\r\t\r\tnewCell color: playerColor.\r\tlastCell color: Color lightGray.\r\t\r\tordered addFirst: newCell.\r\tordered removeLast.',			#stamp : 'Patrick 6/22/2017 17:52',			#package : #snake_game		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #SnakeModel,				#isMetaSide : false			},			#name : #'moveSouth:',			#protocol : #execution,			#sourceCode : 'moveSouth: ordered\r\t| firstCell newCell lastCell playerColor |\r\tfirstCell := ordered first.\r\t(firstCell row = 1)\r\t\tifTrue: [ "TODO catch collision with border" ]\r\t\tifFalse: [ newCell := board rows at: (firstCell row)-1 at: (firstCell column)].\r\tlastCell := ordered last.\r\t\r\tplayerColor := firstCell color.\r\t\r\tnewCell color: playerColor.\r\tlastCell color: Color lightGray.\r\t\r\tordered addFirst: newCell.\r\tordered removeLast.',			#stamp : 'Patrick 6/22/2017 17:53',			#package : #snake_game		}	}}OmEntry {	#tags : {		#author : 'Patrick',		#time : DateAndTime [ '2017-06-22T17:53:56.517248+02:00' ],		#prior : OmReference [ '98' ],		#self : OmReference [ '99' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #SnakeModel,				#isMetaSide : false			},			#name : #'moveWest:',			#protocol : #execution,			#sourceCode : 'moveWest: ordered\r\t| firstCell newCell lastCell playerColor |\r\tfirstCell := ordered first.\r\t(firstCell column = 1)\r\t\tifTrue: [ "TODO catch collision with border" ]\r\t\tifFalse: [ newCell := board rows at: (firstCell row)-1 at: (firstCell column)].\r\tlastCell := ordered last.\r\t\r\tplayerColor := firstCell color.\r\t\r\tnewCell color: playerColor.\r\tlastCell color: Color lightGray.\r\t\r\tordered addFirst: newCell.\r\tordered removeLast.',			#stamp : 'Patrick 6/22/2017 17:53',			#package : #snake_game		}	}}OmEntry {	#tags : {		#author : 'Patrick',		#time : DateAndTime [ '2017-06-22T17:54:10.653248+02:00' ],		#prior : OmReference [ '99' ],		#self : OmReference [ '100' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #SnakeModel,				#isMetaSide : false			},			#name : #'moveEast:',			#protocol : #execution,			#sourceCode : 'moveEast: ordered\r\t| firstCell newCell lastCell playerColor |\r\tfirstCell := ordered first.\r\t(firstCell column = 25)\r\t\tifTrue: [ "TODO catch collision with border" ]\r\t\tifFalse: [ newCell := board rows at: (firstCell row)+1 at: (firstCell column)].\r\tlastCell := ordered last.\r\t\r\tplayerColor := firstCell color.\r\t\r\tnewCell color: playerColor.\r\tlastCell color: Color lightGray.\r\t\r\tordered addFirst: newCell.\r\tordered removeLast.',			#stamp : 'Patrick 6/22/2017 17:53',			#package : #snake_game		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #SnakeModel,				#isMetaSide : false			},			#name : #'moveEast:',			#protocol : #execution,			#sourceCode : 'moveEast: ordered\r\t| firstCell newCell lastCell playerColor |\r\tfirstCell := ordered first.\r\t(firstCell column = 25)\r\t\tifTrue: [ "TODO catch collision with border" ]\r\t\tifFalse: [ newCell := board rows at: (firstCell row) at: (firstCell column)+1].\r\tlastCell := ordered last.\r\t\r\tplayerColor := firstCell color.\r\t\r\tnewCell color: playerColor.\r\tlastCell color: Color lightGray.\r\t\r\tordered addFirst: newCell.\r\tordered removeLast.',			#stamp : 'Patrick 6/22/2017 17:54',			#package : #snake_game		}	}}OmEntry {	#tags : {		#author : 'Patrick',		#time : DateAndTime [ '2017-06-22T17:54:29.958248+02:00' ],		#prior : OmReference [ '100' ],		#self : OmReference [ '101' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #SnakeModel,				#isMetaSide : false			},			#name : #'moveWest:',			#protocol : #execution,			#sourceCode : 'moveWest: ordered\r\t| firstCell newCell lastCell playerColor |\r\tfirstCell := ordered first.\r\t(firstCell column = 1)\r\t\tifTrue: [ "TODO catch collision with border" ]\r\t\tifFalse: [ newCell := board rows at: (firstCell row)-1 at: (firstCell column)].\r\tlastCell := ordered last.\r\t\r\tplayerColor := firstCell color.\r\t\r\tnewCell color: playerColor.\r\tlastCell color: Color lightGray.\r\t\r\tordered addFirst: newCell.\r\tordered removeLast.',			#stamp : 'Patrick 6/22/2017 17:53',			#package : #snake_game		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #SnakeModel,				#isMetaSide : false			},			#name : #'moveWest:',			#protocol : #execution,			#sourceCode : 'moveWest: ordered\r\t| firstCell newCell lastCell playerColor |\r\tfirstCell := ordered first.\r\t(firstCell column = 1)\r\t\tifTrue: [ "TODO catch collision with border" ]\r\t\tifFalse: [ newCell := board rows at: (firstCell row) at: (firstCell column)-1].\r\tlastCell := ordered last.\r\t\r\tplayerColor := firstCell color.\r\t\r\tnewCell color: playerColor.\r\tlastCell color: Color lightGray.\r\t\r\tordered addFirst: newCell.\r\tordered removeLast.',			#stamp : 'Patrick 6/22/2017 17:54',			#package : #snake_game		}	}}OmEntry {	#tags : {		#author : 'Patrick',		#time : DateAndTime [ '2017-06-22T17:54:45.554248+02:00' ],		#prior : OmReference [ '101' ],		#self : OmReference [ '102' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #SnakeModel,				#isMetaSide : false			},			#name : #'move:',			#protocol : #execution,			#sourceCode : 'move: ordered\r\t',			#stamp : 'Patrick 6/22/2017 17:54',			#package : #snake_game		}	}}OmEntry {	#tags : {		#author : 'Patrick',		#time : DateAndTime [ '2017-06-22T17:55:27.448248+02:00' ],		#prior : OmReference [ '102' ],		#self : OmReference [ '103' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #SnakeModel,				#isMetaSide : false			},			#name : #'move:',			#protocol : #execution,			#sourceCode : 'move: ordered\r\t',			#stamp : 'Patrick 6/22/2017 17:54',			#package : #snake_game		}	}}OmEntry {	#tags : {		#author : 'Patrick',		#time : DateAndTime [ '2017-06-22T17:56:30.301248+02:00' ],		#prior : OmReference [ '103' ],		#self : OmReference [ '104' ]	},	#content : EpProtocolAddition {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Matrix',				#traitCompositionSource : '{}',				#definitionSource : 'Matrix subclass: #SnakeModel\r\tinstanceVariableNames: \'board blueCells redCells blueDirection redDirection\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'snake_game\''			},			#name : #SnakeModel,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #SnakeModel,						#isMetaSide : false					},					#name : #board,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #SnakeModel,						#isMetaSide : false					},					#name : #blueCells,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #SnakeModel,						#isMetaSide : false					},					#name : #redCells,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #SnakeModel,						#isMetaSide : false					},					#name : #blueDirection,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #SnakeModel,						#isMetaSide : false					},					#name : #redDirection,					#parent : @7				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'SnakeModel class\r\tinstanceVariableNames: \'\''				},				#name : #'SnakeModel class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #SnakeModel,					#isMetaSide : false				},				#parent : @7,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #snake_game,			#package : #snake_game,			#sharedPools : OrderedCollection [ ]		},		#protocol : #evaluation	}}OmEntry {	#tags : {		#author : 'Patrick',		#time : DateAndTime [ '2017-06-22T17:56:45.901248+02:00' ],		#prior : OmReference [ '104' ],		#self : OmReference [ '105' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #SnakeModel,				#isMetaSide : false			},			#name : #checkWinner,			#protocol : #evaluation,			#sourceCode : 'checkWinner\r\t^nil.',			#stamp : 'Patrick 6/22/2017 17:56',			#package : #snake_game		}	}}OmEntry {	#tags : {		#author : 'Patrick',		#time : DateAndTime [ '2017-06-22T17:57:06.353248+02:00' ],		#prior : OmReference [ '105' ],		#self : OmReference [ '106' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #SnakeModel,				#isMetaSide : false			},			#name : #checkWinner,			#protocol : #evaluation,			#sourceCode : 'checkWinner\r\t^nil.',			#stamp : 'Patrick 6/22/2017 17:56',			#package : #snake_game		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #SnakeModel,				#isMetaSide : false			},			#name : #checkWinner,			#protocol : #evaluation,			#sourceCode : 'checkWinner "TODO evaluate a winner depending on snake stats"\r\t^nil.',			#stamp : 'Patrick 6/22/2017 17:57',			#package : #snake_game		}	}}OmEntry {	#tags : {		#author : 'Patrick',		#time : DateAndTime [ '2017-06-22T17:57:14.329248+02:00' ],		#prior : OmReference [ '106' ],		#self : OmReference [ '107' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #SnakeModel,				#isMetaSide : false			},			#name : #checkWinner,			#protocol : #evaluation,			#sourceCode : 'checkWinner "TODO evaluate a winner depending on snake stats"\r\t^nil.',			#stamp : 'Patrick 6/22/2017 17:57',			#package : #snake_game		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #SnakeModel,				#isMetaSide : false			},			#name : #checkWinner,			#protocol : #evaluation,			#sourceCode : 'checkWinner "TODO evaluate a winner depending on snake stats --> TODO implement snake with stats"\r\t^nil.',			#stamp : 'Patrick 6/22/2017 17:57',			#package : #snake_game		}	}}OmEntry {	#tags : {		#author : 'Patrick',		#time : DateAndTime [ '2017-06-22T17:58:22.660248+02:00' ],		#prior : OmReference [ '107' ],		#self : OmReference [ '108' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #SnakeGame,				#isMetaSide : false			},			#name : #start,			#protocol : #starting,			#sourceCode : 'start\r\t| redCell blueCell winner |\r\t"0/0 is right bottom corner, 25/25 left top corner"\r\tredCell := (rows at: 6) at: 6.\r\tblueCell := (rows at: 20) at: 20.\r\tredCell color: Color red.\r\tblueCell color: Color blue.\r\t\r\tmodel blueCells addFirst: blueCell.\r\tmodel redCells addFirst: redCell.\r\t\r\tkeyListener takeKeyboardFocus.\r\t\r\twinner := nil.\r\t\r\t"the game loop code ought to give us a winner at some point"\r\twinner = nil\r\t\twhileTrue: [ \r\t\t\t(Delay forMilliseconds: 120).\r\t\t\tmodel executeStep.\r\t\t\twinner := model checkWinner.\r\t\t].',			#stamp : 'Patrick 6/22/2017 17:30',			#package : #snake_game		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #SnakeGame,				#isMetaSide : false			},			#name : #start,			#protocol : #starting,			#sourceCode : 'start\r\t| redCell blueCell winner |\r\t"0/0 is right bottom corner, 25/25 left top corner"\r\tredCell := (rows at: 6) at: 6.\r\tblueCell := (rows at: 20) at: 20.\r\tredCell color: Color red.\r\tblueCell color: Color blue.\r\t\r\tmodel blueCells addFirst: blueCell.\r\tmodel redCells addFirst: redCell.\r\t\r\tkeyListener takeKeyboardFocus.\r\t\r\twinner := nil.\r\t\r\t"the game loop code ought to give us a winner at some point"\r\t[winner = nil ] whileTrue: [ \r\t\t\t(Delay forMilliseconds: 120).\r\t\t\tmodel executeStep.\r\t\t\twinner := model checkWinner.\r\t\t].',			#stamp : 'Patrick 6/22/2017 17:58',			#package : #snake_game		}	}}OmEntry {	#tags : {		#author : 'Patrick',		#time : DateAndTime [ '2017-06-22T17:58:29.633248+02:00' ],		#prior : OmReference [ '108' ],		#self : OmReference [ '109' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #SnakeGame,				#isMetaSide : false			},			#name : #start,			#protocol : #starting,			#sourceCode : 'start\r\t| redCell blueCell winner |\r\t"0/0 is right bottom corner, 25/25 left top corner"\r\tredCell := (rows at: 6) at: 6.\r\tblueCell := (rows at: 20) at: 20.\r\tredCell color: Color red.\r\tblueCell color: Color blue.\r\t\r\tmodel blueCells addFirst: blueCell.\r\tmodel redCells addFirst: redCell.\r\t\r\tkeyListener takeKeyboardFocus.\r\t\r\twinner := nil.\r\t\r\t"the game loop code ought to give us a winner at some point"\r\t[winner = nil ] whileTrue: [ \r\t\t\t(Delay forMilliseconds: 120).\r\t\t\tmodel executeStep.\r\t\t\twinner := model checkWinner.\r\t\t].',			#stamp : 'Patrick 6/22/2017 17:58',			#package : #snake_game		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #SnakeGame,				#isMetaSide : false			},			#name : #start,			#protocol : #starting,			#sourceCode : 'start\r\t| redCell blueCell winner |\r\t"0/0 is right bottom corner, 25/25 left top corner"\r\tredCell := (rows at: 6) at: 6.\r\tblueCell := (rows at: 20) at: 20.\r\tredCell color: Color red.\r\tblueCell color: Color blue.\r\t\r\tmodel blueCells addFirst: blueCell.\r\tmodel redCells addFirst: redCell.\r\t\r\tkeyListener takeKeyboardFocus.\r\t\r\twinner := nil.\r\t\r\t"the game loop code ought to give us a winner at some point"\r\t[winner = nil ] whileTrue: [ \r\t\t(Delay forMilliseconds: 120).\r\t\tmodel executeStep.\r\t\twinner := model checkWinner.\r\t].',			#stamp : 'Patrick 6/22/2017 17:58',			#package : #snake_game		}	}}OmEntry {	#tags : {		#author : 'Patrick',		#time : DateAndTime [ '2017-06-22T17:58:37.199248+02:00' ],		#prior : OmReference [ '109' ],		#self : OmReference [ '110' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #SnakeGame,				#isMetaSide : false			},			#name : #start,			#protocol : #starting,			#sourceCode : 'start\r\t| redCell blueCell winner |\r\t"0/0 is right bottom corner, 25/25 left top corner"\r\tredCell := (rows at: 6) at: 6.\r\tblueCell := (rows at: 20) at: 20.\r\tredCell color: Color red.\r\tblueCell color: Color blue.\r\t\r\tmodel blueCells addFirst: blueCell.\r\tmodel redCells addFirst: redCell.\r\t\r\tkeyListener takeKeyboardFocus.\r\t\r\twinner := nil.\r\t\r\t"the game loop code ought to give us a winner at some point"\r\t[winner = nil ] whileTrue: [ \r\t\t(Delay forMilliseconds: 120).\r\t\tmodel executeStep.\r\t\twinner := model checkWinner.\r\t].',			#stamp : 'Patrick 6/22/2017 17:58',			#package : #snake_game		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #SnakeGame,				#isMetaSide : false			},			#name : #start,			#protocol : #starting,			#sourceCode : 'start\r\t| redCell blueCell winner |\r\t"0/0 is right bottom corner, 25/25 left top corner"\r\tredCell := (rows at: 6) at: 6.\r\tblueCell := (rows at: 20) at: 20.\r\tredCell color: Color red.\r\tblueCell color: Color blue.\r\t\r\tmodel blueCells addFirst: blueCell.\r\tmodel redCells addFirst: redCell.\r\t\r\tkeyListener takeKeyboardFocus.\r\t\r\twinner := nil.\r\t\r\t"the game loop code ought to give us a winner at some point"\r\t[winner isNil ] whileTrue: [ \r\t\t(Delay forMilliseconds: 120).\r\t\tmodel executeStep.\r\t\twinner := model checkWinner.\r\t].',			#stamp : 'Patrick 6/22/2017 17:58',			#package : #snake_game		}	}}OmEntry {	#tags : {		#author : 'Patrick',		#time : DateAndTime [ '2017-06-22T18:00:57.798248+02:00' ],		#prior : OmReference [ '110' ],		#self : OmReference [ '111' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #SnakeGame,				#isMetaSide : false			},			#name : #'rows:at:',			#protocol : #accessing,			#sourceCode : 'rows: aRow at: aColumn\r\t^rows at: aRow at: aColumn.',			#stamp : 'Patrick 6/22/2017 18:00',			#package : #snake_game		}	}}OmEntry {	#tags : {		#author : 'Patrick',		#time : DateAndTime [ '2017-06-22T18:01:22.432248+02:00' ],		#prior : OmReference [ '111' ],		#self : OmReference [ '112' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #SnakeModel,				#isMetaSide : false			},			#name : #'moveEast:',			#protocol : #execution,			#sourceCode : 'moveEast: ordered\r\t| firstCell newCell lastCell playerColor |\r\tfirstCell := ordered first.\r\t(firstCell column = 25)\r\t\tifTrue: [ "TODO catch collision with border" ]\r\t\tifFalse: [ newCell := board rows at: (firstCell row) at: (firstCell column)+1].\r\tlastCell := ordered last.\r\t\r\tplayerColor := firstCell color.\r\t\r\tnewCell color: playerColor.\r\tlastCell color: Color lightGray.\r\t\r\tordered addFirst: newCell.\r\tordered removeLast.',			#stamp : 'Patrick 6/22/2017 17:54',			#package : #snake_game		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #SnakeModel,				#isMetaSide : false			},			#name : #'moveEast:',			#protocol : #execution,			#sourceCode : 'moveEast: ordered\r\t| firstCell newCell lastCell playerColor |\r\tfirstCell := ordered first.\r\t(firstCell column = 25)\r\t\tifTrue: [ "TODO catch collision with border" ]\r\t\tifFalse: [ newCell := board rows: (firstCell row) at: (firstCell column)+1].\r\tlastCell := ordered last.\r\t\r\tplayerColor := firstCell color.\r\t\r\tnewCell color: playerColor.\r\tlastCell color: Color lightGray.\r\t\r\tordered addFirst: newCell.\r\tordered removeLast.',			#stamp : 'Patrick 6/22/2017 18:01',			#package : #snake_game		}	}}OmEntry {	#tags : {		#author : 'Patrick',		#time : DateAndTime [ '2017-06-22T18:01:25.235248+02:00' ],		#prior : OmReference [ '112' ],		#self : OmReference [ '113' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #SnakeModel,				#isMetaSide : false			},			#name : #'moveNorth:',			#protocol : #execution,			#sourceCode : 'moveNorth: ordered\r\t| firstCell newCell lastCell playerColor |\r\tfirstCell := ordered first.\r\t(firstCell row = 25)\r\t\tifTrue: [ "TODO catch collision with border" ]\r\t\tifFalse: [ newCell := board rows at: (firstCell row)+1 at: (firstCell column)].\r\tlastCell := ordered last.\r\t\r\tplayerColor := firstCell color.\r\t\r\tnewCell color: playerColor.\r\tlastCell color: Color lightGray.\r\t\r\tordered addFirst: newCell.\r\tordered removeLast.\r\t',			#stamp : 'Patrick 6/22/2017 17:53',			#package : #snake_game		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #SnakeModel,				#isMetaSide : false			},			#name : #'moveNorth:',			#protocol : #execution,			#sourceCode : 'moveNorth: ordered\r\t| firstCell newCell lastCell playerColor |\r\tfirstCell := ordered first.\r\t(firstCell row = 25)\r\t\tifTrue: [ "TODO catch collision with border" ]\r\t\tifFalse: [ newCell := board rows: (firstCell row)+1 at: (firstCell column)].\r\tlastCell := ordered last.\r\t\r\tplayerColor := firstCell color.\r\t\r\tnewCell color: playerColor.\r\tlastCell color: Color lightGray.\r\t\r\tordered addFirst: newCell.\r\tordered removeLast.\r\t',			#stamp : 'Patrick 6/22/2017 18:01',			#package : #snake_game		}	}}OmEntry {	#tags : {		#author : 'Patrick',		#time : DateAndTime [ '2017-06-22T18:01:28.674248+02:00' ],		#prior : OmReference [ '113' ],		#self : OmReference [ '114' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #SnakeModel,				#isMetaSide : false			},			#name : #'moveSouth:',			#protocol : #execution,			#sourceCode : 'moveSouth: ordered\r\t| firstCell newCell lastCell playerColor |\r\tfirstCell := ordered first.\r\t(firstCell row = 1)\r\t\tifTrue: [ "TODO catch collision with border" ]\r\t\tifFalse: [ newCell := board rows at: (firstCell row)-1 at: (firstCell column)].\r\tlastCell := ordered last.\r\t\r\tplayerColor := firstCell color.\r\t\r\tnewCell color: playerColor.\r\tlastCell color: Color lightGray.\r\t\r\tordered addFirst: newCell.\r\tordered removeLast.',			#stamp : 'Patrick 6/22/2017 17:53',			#package : #snake_game		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #SnakeModel,				#isMetaSide : false			},			#name : #'moveSouth:',			#protocol : #execution,			#sourceCode : 'moveSouth: ordered\r\t| firstCell newCell lastCell playerColor |\r\tfirstCell := ordered first.\r\t(firstCell row = 1)\r\t\tifTrue: [ "TODO catch collision with border" ]\r\t\tifFalse: [ newCell := board rows: (firstCell row)-1 at: (firstCell column)].\r\tlastCell := ordered last.\r\t\r\tplayerColor := firstCell color.\r\t\r\tnewCell color: playerColor.\r\tlastCell color: Color lightGray.\r\t\r\tordered addFirst: newCell.\r\tordered removeLast.',			#stamp : 'Patrick 6/22/2017 18:01',			#package : #snake_game		}	}}OmEntry {	#tags : {		#author : 'Patrick',		#time : DateAndTime [ '2017-06-22T18:01:32.788248+02:00' ],		#prior : OmReference [ '114' ],		#self : OmReference [ '115' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #SnakeModel,				#isMetaSide : false			},			#name : #'moveWest:',			#protocol : #execution,			#sourceCode : 'moveWest: ordered\r\t| firstCell newCell lastCell playerColor |\r\tfirstCell := ordered first.\r\t(firstCell column = 1)\r\t\tifTrue: [ "TODO catch collision with border" ]\r\t\tifFalse: [ newCell := board rows at: (firstCell row) at: (firstCell column)-1].\r\tlastCell := ordered last.\r\t\r\tplayerColor := firstCell color.\r\t\r\tnewCell color: playerColor.\r\tlastCell color: Color lightGray.\r\t\r\tordered addFirst: newCell.\r\tordered removeLast.',			#stamp : 'Patrick 6/22/2017 17:54',			#package : #snake_game		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #SnakeModel,				#isMetaSide : false			},			#name : #'moveWest:',			#protocol : #execution,			#sourceCode : 'moveWest: ordered\r\t| firstCell newCell lastCell playerColor |\r\tfirstCell := ordered first.\r\t(firstCell column = 1)\r\t\tifTrue: [ "TODO catch collision with border" ]\r\t\tifFalse: [ newCell := board rows: (firstCell row) at: (firstCell column)-1].\r\tlastCell := ordered last.\r\t\r\tplayerColor := firstCell color.\r\t\r\tnewCell color: playerColor.\r\tlastCell color: Color lightGray.\r\t\r\tordered addFirst: newCell.\r\tordered removeLast.',			#stamp : 'Patrick 6/22/2017 18:01',			#package : #snake_game		}	}}OmEntry {	#tags : {		#author : 'Patrick',		#time : DateAndTime [ '2017-06-22T18:02:51.388248+02:00' ],		#prior : OmReference [ '115' ],		#self : OmReference [ '116' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #SnakeGame,				#isMetaSide : false			},			#name : #'rows:at:',			#protocol : #accessing,			#sourceCode : 'rows: aRow at: aColumn\r\t^rows at: aRow at: aColumn.',			#stamp : 'Patrick 6/22/2017 18:00',			#package : #snake_game		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #SnakeGame,				#isMetaSide : false			},			#name : #'rows:at:',			#protocol : #accessing,			#sourceCode : 'rows: aRow at: aColumn\r\t^(rows at: aRow) at: aColumn.',			#stamp : 'Patrick 6/22/2017 18:02',			#package : #snake_game		}	}}OmEntry {	#tags : {		#author : 'Patrick',		#time : DateAndTime [ '2017-06-22T18:04:29.982248+02:00' ],		#prior : OmReference [ '116' ],		#self : OmReference [ '117' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #SnakeGame,				#isMetaSide : false			},			#name : #start,			#protocol : #starting,			#sourceCode : 'start\r\t| redCell blueCell winner |\r\t"0/0 is right bottom corner, 25/25 left top corner"\r\tredCell := (rows at: 6) at: 6.\r\tblueCell := (rows at: 20) at: 20.\r\tredCell color: Color red.\r\tblueCell color: Color blue.\r\t\r\tmodel blueCells addFirst: blueCell.\r\tmodel redCells addFirst: redCell.\r\t\r\tkeyListener takeKeyboardFocus.\r\t\r\twinner := nil.\r\t\r\t"the game loop code ought to give us a winner at some point"\r\t[winner isNil ] whileTrue: [ \r\t\t(Delay forMilliseconds: 120).\r\t\tmodel executeStep.\r\t\twinner := model checkWinner.\r\t].',			#stamp : 'Patrick 6/22/2017 17:58',			#package : #snake_game		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #SnakeGame,				#isMetaSide : false			},			#name : #start,			#protocol : #starting,			#sourceCode : 'start\r\t| redCell blueCell winner |\r\t"0/0 is right bottom corner, 25/25 left top corner"\r\tredCell := (rows at: 6) at: 6.\r\tblueCell := (rows at: 20) at: 20.\r\tredCell color: Color red.\r\tblueCell color: Color blue.\r\t\r\tmodel blueCells addFirst: blueCell.\r\tmodel redCells addFirst: redCell.\r\t\r\tkeyListener takeKeyboardFocus.\r\t\r\twinner := nil.\r\t\r\t"the game loop code ought to give us a winner at some point"\r\t[winner isNil ] whileTrue: [ \r\t\t(Delay forMilliseconds: 1200).\r\t\tmodel executeStep.\r\t\twinner := model checkWinner.\r\t].',			#stamp : 'Patrick 6/22/2017 18:04',			#package : #snake_game		}	}}OmEntry {	#tags : {		#author : 'Patrick',		#time : DateAndTime [ '2017-06-22T18:06:16.780248+02:00' ],		#prior : OmReference [ '117' ],		#self : OmReference [ '118' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #SnakeGame,				#isMetaSide : false			},			#name : #start,			#protocol : #starting,			#sourceCode : 'start\r\t| redCell blueCell winner |\r\t"0/0 is right bottom corner, 25/25 left top corner"\r\tredCell := (rows at: 6) at: 6.\r\tblueCell := (rows at: 20) at: 20.\r\tredCell color: Color red.\r\tblueCell color: Color blue.\r\t\r\tmodel blueCells addFirst: blueCell.\r\tmodel redCells addFirst: redCell.\r\t\r\tkeyListener takeKeyboardFocus.\r\t\r\twinner := nil.\r\t\r\t"the game loop code ought to give us a winner at some point"\r\t[winner isNil ] whileTrue: [ \r\t\t(Delay forMilliseconds: 1200).\r\t\tmodel executeStep.\r\t\twinner := model checkWinner.\r\t].',			#stamp : 'Patrick 6/22/2017 18:04',			#package : #snake_game		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #SnakeGame,				#isMetaSide : false			},			#name : #start,			#protocol : #starting,			#sourceCode : 'start\r\t| redCell blueCell winner |\r\t"0/0 is right bottom corner, 25/25 left top corner"\r\tredCell := (rows at: 6) at: 6.\r\tblueCell := (rows at: 20) at: 20.\r\tredCell color: Color red.\r\tblueCell color: Color blue.\r\t\r\tmodel blueCells addFirst: blueCell.\r\tmodel redCells addFirst: redCell.\r\t\r\tkeyListener takeKeyboardFocus.\r\t\r\twinner := nil.\r\t\r\t"the game loop code ought to give us a winner at some point"\r\t[winner isNil ] whileTrue: [ \r\t\t| delay |\r\t\tdelay := (Delay forMilliseconds: 1200).\r\t\tdelay wait.\r\t\tmodel executeStep.\r\t\twinner := model checkWinner.\r\t].',			#stamp : 'Patrick 6/22/2017 18:06',			#package : #snake_game		}	}}OmEntry {	#tags : {		#author : 'Patrick',		#time : DateAndTime [ '2017-06-22T18:06:20.527248+02:00' ],		#prior : OmReference [ '118' ],		#self : OmReference [ '119' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #SnakeGame,				#isMetaSide : false			},			#name : #start,			#protocol : #starting,			#sourceCode : 'start\r\t| redCell blueCell winner |\r\t"0/0 is right bottom corner, 25/25 left top corner"\r\tredCell := (rows at: 6) at: 6.\r\tblueCell := (rows at: 20) at: 20.\r\tredCell color: Color red.\r\tblueCell color: Color blue.\r\t\r\tmodel blueCells addFirst: blueCell.\r\tmodel redCells addFirst: redCell.\r\t\r\tkeyListener takeKeyboardFocus.\r\t\r\twinner := nil.\r\t\r\t"the game loop code ought to give us a winner at some point"\r\t[winner isNil ] whileTrue: [ \r\t\t| delay |\r\t\tdelay := (Delay forMilliseconds: 1200).\r\t\tdelay wait.\r\t\tmodel executeStep.\r\t\twinner := model checkWinner.\r\t].',			#stamp : 'Patrick 6/22/2017 18:06',			#package : #snake_game		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #SnakeGame,				#isMetaSide : false			},			#name : #start,			#protocol : #starting,			#sourceCode : 'start\r\t| redCell blueCell winner |\r\t"0/0 is right bottom corner, 25/25 left top corner"\r\tredCell := (rows at: 6) at: 6.\r\tblueCell := (rows at: 20) at: 20.\r\tredCell color: Color red.\r\tblueCell color: Color blue.\r\t\r\tmodel blueCells addFirst: blueCell.\r\tmodel redCells addFirst: redCell.\r\t\r\tkeyListener takeKeyboardFocus.\r\t\r\twinner := nil.\r\t\r\t"the game loop code ought to give us a winner at some point"\r\t[winner isNil ] whileTrue: [ \r\t\t| delay |\r\t\tdelay := (Delay forMilliseconds: 120).\r\t\tdelay wait.\r\t\tmodel executeStep.\r\t\twinner := model checkWinner.\r\t].',			#stamp : 'Patrick 6/22/2017 18:06',			#package : #snake_game		}	}}OmEntry {	#tags : {		#author : 'Patrick',		#time : DateAndTime [ '2017-06-22T18:12:13.367248+02:00' ],		#prior : OmReference [ '119' ],		#self : OmReference [ '120' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #SnakeGame,				#isMetaSide : false			},			#name : #start,			#protocol : #starting,			#sourceCode : 'start\r\t| redCell blueCell winner |\r\t"0/0 is right bottom corner, 25/25 left top corner"\r\tredCell := (rows at: 6) at: 6.\r\tblueCell := (rows at: 20) at: 20.\r\tredCell color: Color red.\r\tblueCell color: Color blue.\r\t\r\tmodel blueCells addFirst: blueCell.\r\tmodel redCells addFirst: redCell.\r\t\r\tkeyListener takeKeyboardFocus.\r\t\r\twinner := nil.\r\t\r\t"the game loop code ought to give us a winner at some point"\r\t[winner isNil ] whileTrue: [ \r\t\t| delay |\r\t\tdelay := (Delay forMilliseconds: 120).\r\t\tdelay wait.\r\t\tmodel executeStep.\r\t\twinner := model checkWinner.\r\t].',			#stamp : 'Patrick 6/22/2017 18:06',			#package : #snake_game		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #SnakeGame,				#isMetaSide : false			},			#name : #start,			#protocol : #starting,			#sourceCode : 'start\r\t| redCell blueCell winner |\r\t"0/0 is right bottom corner, 25/25 left top corner"\r\tredCell := (rows at: 6) at: 6.\r\tblueCell := (rows at: 20) at: 20.\r\tredCell color: Color red.\r\tblueCell color: Color blue.\r\t\r\tmodel blueCells addFirst: blueCell.\r\tmodel redCells addFirst: redCell.\r\t\r\tkeyListener takeKeyboardFocus.\r\t\r\twinner := nil.\r\t\r\t"the game loop code ought to give us a winner at some point"\r\t[winner isNil ] whileTrue: [ \r\t\t| delay |\r\t\tdelay := (Delay forMilliseconds: 250).\r\t\tdelay wait.\r\t\tmodel executeStep.\r\t\twinner := model checkWinner.\r\t].',			#stamp : 'Patrick 6/22/2017 18:12',			#package : #snake_game		}	}}OmEntry {	#tags : {		#author : 'Patrick',		#time : DateAndTime [ '2017-06-22T18:16:29.028248+02:00' ],		#prior : OmReference [ '120' ],		#self : OmReference [ '121' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #KeyListener,				#isMetaSide : false			},			#name : #'handleKeystroke:',			#protocol : #'keyboard control',			#sourceCode : 'handleKeystroke: event "no clue how to actually use this"\r\t| key |\r\tkey := event keyValue.\r\tkey = 30 "up blue"\r\t\tifTrue: [ parent model blueDirection: #north ].\r\tkey = 31 "down blue"\r\t\tifTrue: [ parent model blueDirection: #south ].\r\tkey = 29 "right blue"\r\t\tifTrue: [ parent model blueDirection: #east ].\r\tkey = 28 "left blue"\r\t\tifTrue: [ parent model blueDirection: #west ].\r\tkey = 119 "red up (w)"\r\t\tifTrue: [ parent model redDirection: #north ].\r\tkey = 115 "red down (s)"\r\t\tifTrue: [ parent model redDirection: #south ].\r\tkey = 100 "red right (d)"\r\t\tifTrue: [ parent model redDirection: #east ].\r\tkey = 97 "red left (a)"\r\t\tifTrue: [ parent model redDirection: #west ].',			#stamp : 'Patrick 6/22/2017 15:10',			#package : #snake_game		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #KeyListener,				#isMetaSide : false			},			#name : #'handleKeystroke:',			#protocol : #'keyboard control',			#sourceCode : 'handleKeystroke: event "no clue how to actually use this"\r\t| key |\r\tkey := event keyValue.\r\tkey = 30 "up blue"\r\t\tifTrue: [ parent model blueDirection: #north. parent messageArea contents: \'n\' ].\r\tkey = 31 "down blue"\r\t\tifTrue: [ parent model blueDirection: #south. parent messageArea contents: \'s\' ].\r\tkey = 29 "right blue"\r\t\tifTrue: [ parent model blueDirection: #east. parent messageArea contents: \'e\' ].\r\tkey = 28 "left blue"\r\t\tifTrue: [ parent model blueDirection: #west. parent messageArea contents: \'w\' ].\r\tkey = 119 "red up (w)"\r\t\tifTrue: [ parent model redDirection: #north ].\r\tkey = 115 "red down (s)"\r\t\tifTrue: [ parent model redDirection: #south ].\r\tkey = 100 "red right (d)"\r\t\tifTrue: [ parent model redDirection: #east ].\r\tkey = 97 "red left (a)"\r\t\tifTrue: [ parent model redDirection: #west ].',			#stamp : 'Patrick 6/22/2017 18:16',			#package : #snake_game		}	}}OmEntry {	#tags : {		#author : 'Patrick',		#time : DateAndTime [ '2017-06-22T18:19:10.322248+02:00' ],		#prior : OmReference [ '121' ],		#self : OmReference [ '122' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #SnakeGame,				#isMetaSide : false			},			#name : #start,			#protocol : #starting,			#sourceCode : 'start\r\t| redCell blueCell winner |\r\t"0/0 is right bottom corner, 25/25 left top corner"\r\tredCell := (rows at: 6) at: 6.\r\tblueCell := (rows at: 20) at: 20.\r\tredCell color: Color red.\r\tblueCell color: Color blue.\r\t\r\tmodel blueCells addFirst: blueCell.\r\tmodel redCells addFirst: redCell.\r\t\r\tkeyListener takeKeyboardFocus.\r\t\r\twinner := nil.\r\t\r\t"the game loop code ought to give us a winner at some point"\r\t[winner isNil ] whileTrue: [ \r\t\t| delay |\r\t\tdelay := (Delay forMilliseconds: 250).\r\t\tdelay wait.\r\t\tmodel executeStep.\r\t\twinner := model checkWinner.\r\t].',			#stamp : 'Patrick 6/22/2017 18:12',			#package : #snake_game		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #SnakeGame,				#isMetaSide : false			},			#name : #start,			#protocol : #starting,			#sourceCode : 'start\r\t| redCell blueCell winner |\r\t"0/0 is right bottom corner, 25/25 left top corner"\r\tredCell := (rows at: 6) at: 6.\r\tblueCell := (rows at: 20) at: 20.\r\tredCell color: Color red.\r\tblueCell color: Color blue.\r\t\r\tmodel blueCells addFirst: blueCell.\r\tmodel redCells addFirst: redCell.\r\t\r\tkeyListener takeKeyboardFocus.\r\t\r\twinner := nil.\r\t\r\t"the game loop code ought to give us a winner at some point"\r\t[[winner isNil ] whileTrue: [ \r\t\t| delay |\r\t\tdelay := (Delay forMilliseconds: 250).\r\t\tdelay wait.\r\t\tmodel executeStep.\r\t\twinner := model checkWinner.\r\t]] fork.',			#stamp : 'Patrick 6/22/2017 18:19',			#package : #snake_game		}	}}OmEntry {	#tags : {		#author : 'Patrick',		#time : DateAndTime [ '2017-06-22T18:19:43.961248+02:00' ],		#prior : OmReference [ '122' ],		#self : OmReference [ '123' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #SnakeGame,				#isMetaSide : false			},			#name : #start,			#protocol : #starting,			#sourceCode : 'start\r\t| redCell blueCell winner |\r\t"0/0 is right bottom corner, 25/25 left top corner"\r\tredCell := (rows at: 6) at: 6.\r\tblueCell := (rows at: 20) at: 20.\r\tredCell color: Color red.\r\tblueCell color: Color blue.\r\t\r\tmodel blueCells addFirst: blueCell.\r\tmodel redCells addFirst: redCell.\r\t\r\tkeyListener takeKeyboardFocus.\r\t\r\twinner := nil.\r\t\r\t"the game loop code ought to give us a winner at some point"\r\t[[winner isNil ] whileTrue: [ \r\t\t| delay |\r\t\tdelay := (Delay forMilliseconds: 250).\r\t\tdelay wait.\r\t\tmodel executeStep.\r\t\twinner := model checkWinner.\r\t]] fork.',			#stamp : 'Patrick 6/22/2017 18:19',			#package : #snake_game		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #SnakeGame,				#isMetaSide : false			},			#name : #start,			#protocol : #starting,			#sourceCode : 'start\r\t| redCell blueCell winner |\r\t"0/0 is right bottom corner, 25/25 left top corner"\r\tredCell := (rows at: 6) at: 6.\r\tblueCell := (rows at: 20) at: 20.\r\tredCell color: Color red.\r\tblueCell color: Color blue.\r\t\r\tmodel blueCells addFirst: blueCell.\r\tmodel redCells addFirst: redCell.\r\t\r\tkeyListener takeKeyboardFocus.\r\t\r\twinner := nil.\r\t\r\t"the game loop code ought to give us a winner at some point"\r\t[[winner isNil ] whileTrue: [ \r\t\t| delay |\r\t\tdelay := (Delay forMilliseconds: 200).\r\t\tdelay wait.\r\t\tmodel executeStep.\r\t\twinner := model checkWinner.\r\t]] fork.',			#stamp : 'Patrick 6/22/2017 18:19',			#package : #snake_game		}	}}OmEntry {	#tags : {		#author : 'Patrick',		#time : DateAndTime [ '2017-06-22T18:20:28.038248+02:00' ],		#prior : OmReference [ '123' ],		#self : OmReference [ '124' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #SnakeModel,				#isMetaSide : false			},			#name : #'moveEast:',			#protocol : #execution,			#sourceCode : 'moveEast: ordered\r\t| firstCell newCell lastCell playerColor |\r\tfirstCell := ordered first.\r\t(firstCell column = 25)\r\t\tifTrue: [ "TODO catch collision with border" ]\r\t\tifFalse: [ newCell := board rows: (firstCell row) at: (firstCell column)+1].\r\tlastCell := ordered last.\r\t\r\tplayerColor := firstCell color.\r\t\r\tnewCell color: playerColor.\r\tlastCell color: Color lightGray.\r\t\r\tordered addFirst: newCell.\r\tordered removeLast.',			#stamp : 'Patrick 6/22/2017 18:01',			#package : #snake_game		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #SnakeModel,				#isMetaSide : false			},			#name : #'moveEast:',			#protocol : #execution,			#sourceCode : 'moveEast: ordered\r\t| firstCell newCell lastCell playerColor |\r\tfirstCell := ordered first.\r\t(firstCell column = 0)\r\t\tifTrue: [ "TODO catch collision with border" ]\r\t\tifFalse: [ newCell := board rows: (firstCell row) at: (firstCell column)-1].\r\tlastCell := ordered last.\r\t\r\tplayerColor := firstCell color.\r\t\r\tnewCell color: playerColor.\r\tlastCell color: Color lightGray.\r\t\r\tordered addFirst: newCell.\r\tordered removeLast.',			#stamp : 'Patrick 6/22/2017 18:20',			#package : #snake_game		}	}}OmEntry {	#tags : {		#author : 'Patrick',		#time : DateAndTime [ '2017-06-22T18:20:40.542248+02:00' ],		#prior : OmReference [ '124' ],		#self : OmReference [ '125' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #SnakeModel,				#isMetaSide : false			},			#name : #'moveWest:',			#protocol : #execution,			#sourceCode : 'moveWest: ordered\r\t| firstCell newCell lastCell playerColor |\r\tfirstCell := ordered first.\r\t(firstCell column = 1)\r\t\tifTrue: [ "TODO catch collision with border" ]\r\t\tifFalse: [ newCell := board rows: (firstCell row) at: (firstCell column)-1].\r\tlastCell := ordered last.\r\t\r\tplayerColor := firstCell color.\r\t\r\tnewCell color: playerColor.\r\tlastCell color: Color lightGray.\r\t\r\tordered addFirst: newCell.\r\tordered removeLast.',			#stamp : 'Patrick 6/22/2017 18:01',			#package : #snake_game		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #SnakeModel,				#isMetaSide : false			},			#name : #'moveWest:',			#protocol : #execution,			#sourceCode : 'moveWest: ordered\r\t| firstCell newCell lastCell playerColor |\r\tfirstCell := ordered first.\r\t(firstCell column = 25)\r\t\tifTrue: [ "TODO catch collision with border" ]\r\t\tifFalse: [ newCell := board rows: (firstCell row) at: (firstCell column)+1].\r\tlastCell := ordered last.\r\t\r\tplayerColor := firstCell color.\r\t\r\tnewCell color: playerColor.\r\tlastCell color: Color lightGray.\r\t\r\tordered addFirst: newCell.\r\tordered removeLast.',			#stamp : 'Patrick 6/22/2017 18:20',			#package : #snake_game		}	}}OmEntry {	#tags : {		#author : 'Patrick',		#time : DateAndTime [ '2017-06-22T18:21:25.462248+02:00' ],		#prior : OmReference [ '125' ],		#self : OmReference [ '126' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #SnakeModel,				#isMetaSide : false			},			#name : #'moveWest:',			#protocol : #execution,			#sourceCode : 'moveWest: ordered\r\t| firstCell newCell lastCell playerColor |\r\tfirstCell := ordered first.\r\t(firstCell column = 25)\r\t\tifTrue: [ "TODO catch collision with border" ]\r\t\tifFalse: [ newCell := board rows: (firstCell row) at: (firstCell column)+1].\r\tlastCell := ordered last.\r\t\r\tplayerColor := firstCell color.\r\t\r\tnewCell color: playerColor.\r\tlastCell color: Color lightGray.\r\t\r\tordered addFirst: newCell.\r\tordered removeLast.',			#stamp : 'Patrick 6/22/2017 18:20',			#package : #snake_game		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #SnakeModel,				#isMetaSide : false			},			#name : #'moveWest:',			#protocol : #execution,			#sourceCode : 'moveWest: ordered\r\t| firstCell newCell lastCell playerColor |\r\tfirstCell := ordered first.\r\t(firstCell column = 25)\r\t\tifTrue: [ "TODO catch collision with border" ]\r\t\tifFalse: [\r\t\t\tnewCell := board rows: (firstCell row) at: (firstCell column)+1.\r\t\t\tlastCell := ordered last.\r\t\r\t\t\tplayerColor := firstCell color.\r\t\r\t\t\tnewCell color: playerColor.\r\t\t\tlastCell color: Color lightGray.\r\t\r\t\t\tordered addFirst: newCell.\r\t\t\tordered removeLast.\r\t\t\t].',			#stamp : 'Patrick 6/22/2017 18:21',			#package : #snake_game		}	}}OmEntry {	#tags : {		#author : 'Patrick',		#time : DateAndTime [ '2017-06-22T18:21:52.832248+02:00' ],		#prior : OmReference [ '126' ],		#self : OmReference [ '127' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #SnakeModel,				#isMetaSide : false			},			#name : #'moveSouth:',			#protocol : #execution,			#sourceCode : 'moveSouth: ordered\r\t| firstCell newCell lastCell playerColor |\r\tfirstCell := ordered first.\r\t(firstCell row = 1)\r\t\tifTrue: [ "TODO catch collision with border" ]\r\t\tifFalse: [ newCell := board rows: (firstCell row)-1 at: (firstCell column)].\r\tlastCell := ordered last.\r\t\r\tplayerColor := firstCell color.\r\t\r\tnewCell color: playerColor.\r\tlastCell color: Color lightGray.\r\t\r\tordered addFirst: newCell.\r\tordered removeLast.',			#stamp : 'Patrick 6/22/2017 18:01',			#package : #snake_game		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #SnakeModel,				#isMetaSide : false			},			#name : #'moveSouth:',			#protocol : #execution,			#sourceCode : 'moveSouth: ordered\r\t| firstCell newCell lastCell playerColor |\r\tfirstCell := ordered first.\r\t(firstCell row = 1)\r\t\tifTrue: [ "TODO catch collision with border" ]\r\t\tifFalse: [\r\t\t\tnewCell := board rows: (firstCell row)-1 at: (firstCell column).\r\t\t\tlastCell := ordered last.\r\t\r\t\t\tplayerColor := firstCell color.\r\t\r\t\t\tnewCell color: playerColor.\r\t\t\tlastCell color: Color lightGray.\r\t\r\t\t\tordered addFirst: newCell.\r\t\t\tordered removeLast.\r\t\t].',			#stamp : 'Patrick 6/22/2017 18:21',			#package : #snake_game		}	}}OmEntry {	#tags : {		#author : 'Patrick',		#time : DateAndTime [ '2017-06-22T18:22:16.144248+02:00' ],		#prior : OmReference [ '127' ],		#self : OmReference [ '128' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #SnakeModel,				#isMetaSide : false			},			#name : #'moveWest:',			#protocol : #execution,			#sourceCode : 'moveWest: ordered\r\t| firstCell newCell lastCell playerColor |\r\tfirstCell := ordered first.\r\t(firstCell column = 25)\r\t\tifTrue: [ "TODO catch collision with border" ]\r\t\tifFalse: [\r\t\t\tnewCell := board rows: (firstCell row) at: (firstCell column)+1.\r\t\t\tlastCell := ordered last.\r\t\r\t\t\tplayerColor := firstCell color.\r\t\r\t\t\tnewCell color: playerColor.\r\t\t\tlastCell color: Color lightGray.\r\t\r\t\t\tordered addFirst: newCell.\r\t\t\tordered removeLast.\r\t\t\t].',			#stamp : 'Patrick 6/22/2017 18:21',			#package : #snake_game		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #SnakeModel,				#isMetaSide : false			},			#name : #'moveWest:',			#protocol : #execution,			#sourceCode : 'moveWest: ordered\r\t| firstCell newCell lastCell playerColor |\r\tfirstCell := ordered first.\r\t(firstCell column = 25)\r\t\tifTrue: [ "TODO catch collision with border" ]\r\t\tifFalse: [\r\t\t\tnewCell := board rows: (firstCell row) at: (firstCell column)+1.\r\t\t\tlastCell := ordered last.\r\t\r\t\t\tplayerColor := firstCell color.\r\t\r\t\t\tnewCell color: playerColor.\r\t\t\tlastCell color: Color lightGray.\r\t\r\t\t\tordered addFirst: newCell.\r\t\t\tordered removeLast.\r\t\t].',			#stamp : 'Patrick 6/22/2017 18:22',			#package : #snake_game		}	}}OmEntry {	#tags : {		#author : 'Patrick',		#time : DateAndTime [ '2017-06-22T18:22:49.498248+02:00' ],		#prior : OmReference [ '128' ],		#self : OmReference [ '129' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #SnakeModel,				#isMetaSide : false			},			#name : #'moveNorth:',			#protocol : #execution,			#sourceCode : 'moveNorth: ordered\r\t| firstCell newCell lastCell playerColor |\r\tfirstCell := ordered first.\r\t(firstCell row = 25)\r\t\tifTrue: [ "TODO catch collision with border" ]\r\t\tifFalse: [ newCell := board rows: (firstCell row)+1 at: (firstCell column)].\r\tlastCell := ordered last.\r\t\r\tplayerColor := firstCell color.\r\t\r\tnewCell color: playerColor.\r\tlastCell color: Color lightGray.\r\t\r\tordered addFirst: newCell.\r\tordered removeLast.\r\t',			#stamp : 'Patrick 6/22/2017 18:01',			#package : #snake_game		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #SnakeModel,				#isMetaSide : false			},			#name : #'moveNorth:',			#protocol : #execution,			#sourceCode : 'moveNorth: ordered\r\t| firstCell newCell lastCell playerColor |\r\tfirstCell := ordered first.\r\t(firstCell row = 25)\r\t\tifTrue: [ "TODO catch collision with border" ]\r\t\tifFalse: [\r\t\t\tnewCell := board rows: (firstCell row)+1 at: (firstCell column).\r\t\t\tlastCell := ordered last.\r\t\r\t\t\tplayerColor := firstCell color.\r\t\r\t\t\tnewCell color: playerColor.\r\t\t\tlastCell color: Color lightGray.\r\t\r\t\t\tordered addFirst: newCell.\r\t\t\tordered removeLast.\r\t\t].',			#stamp : 'Patrick 6/22/2017 18:22',			#package : #snake_game		}	}}OmEntry {	#tags : {		#author : 'Patrick',		#time : DateAndTime [ '2017-06-22T18:23:10.635248+02:00' ],		#prior : OmReference [ '129' ],		#self : OmReference [ '130' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #SnakeModel,				#isMetaSide : false			},			#name : #'moveEast:',			#protocol : #execution,			#sourceCode : 'moveEast: ordered\r\t| firstCell newCell lastCell playerColor |\r\tfirstCell := ordered first.\r\t(firstCell column = 0)\r\t\tifTrue: [ "TODO catch collision with border" ]\r\t\tifFalse: [ newCell := board rows: (firstCell row) at: (firstCell column)-1].\r\tlastCell := ordered last.\r\t\r\tplayerColor := firstCell color.\r\t\r\tnewCell color: playerColor.\r\tlastCell color: Color lightGray.\r\t\r\tordered addFirst: newCell.\r\tordered removeLast.',			#stamp : 'Patrick 6/22/2017 18:20',			#package : #snake_game		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #SnakeModel,				#isMetaSide : false			},			#name : #'moveEast:',			#protocol : #execution,			#sourceCode : 'moveEast: ordered\r\t| firstCell newCell lastCell playerColor |\r\tfirstCell := ordered first.\r\t(firstCell column = 0)\r\t\tifTrue: [ "TODO catch collision with border" ]\r\t\tifFalse: [ newCell := board rows: (firstCell row) at: (firstCell column)-1.\r\t\t\tlastCell := ordered last.\r\t\r\t\t\tplayerColor := firstCell color.\r\t\r\t\t\tnewCell color: playerColor.\r\t\t\tlastCell color: Color lightGray.\r\t\r\t\t\tordered addFirst: newCell.\r\t\t\tordered removeLast.\r\t].',			#stamp : 'Patrick 6/22/2017 18:23',			#package : #snake_game		}	}}OmEntry {	#tags : {		#author : 'Patrick',		#time : DateAndTime [ '2017-06-22T18:24:52.887248+02:00' ],		#prior : OmReference [ '130' ],		#self : OmReference [ '131' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #SnakeModel,				#isMetaSide : false			},			#name : #'moveEast:',			#protocol : #execution,			#sourceCode : 'moveEast: ordered\r\t| firstCell newCell lastCell playerColor |\r\tfirstCell := ordered first.\r\t(firstCell column = 0)\r\t\tifTrue: [ "TODO catch collision with border" ]\r\t\tifFalse: [ newCell := board rows: (firstCell row) at: (firstCell column)-1.\r\t\t\tlastCell := ordered last.\r\t\r\t\t\tplayerColor := firstCell color.\r\t\r\t\t\tnewCell color: playerColor.\r\t\t\tlastCell color: Color lightGray.\r\t\r\t\t\tordered addFirst: newCell.\r\t\t\tordered removeLast.\r\t].',			#stamp : 'Patrick 6/22/2017 18:23',			#package : #snake_game		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #SnakeModel,				#isMetaSide : false			},			#name : #'moveEast:',			#protocol : #execution,			#sourceCode : 'moveEast: ordered\r\t| firstCell newCell lastCell playerColor |\r\tfirstCell := ordered first.\r\t(firstCell column = 0)\r\t\tifTrue: [ "TODO catch collision with border" ]\r\t\tifFalse: [\r\t\t\tnewCell := board rows: (firstCell row) at: (firstCell column)-1.\r\t\t\tlastCell := ordered last.\r\t\r\t\t\tplayerColor := firstCell color.\r\t\r\t\t\tnewCell color: playerColor.\r\t\t\tlastCell color: Color lightGray.\r\t\r\t\t\tordered addFirst: newCell.\r\t\t\tordered removeLast.\r\t].',			#stamp : 'Patrick 6/22/2017 18:24',			#package : #snake_game		}	}}OmEntry {	#tags : {		#author : 'Patrick',		#time : DateAndTime [ '2017-06-22T18:25:10.683248+02:00' ],		#prior : OmReference [ '131' ],		#self : OmReference [ '132' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #SnakeModel,				#isMetaSide : false			},			#name : #'moveEast:',			#protocol : #execution,			#sourceCode : 'moveEast: ordered\r\t| firstCell newCell lastCell playerColor |\r\tfirstCell := ordered first.\r\t(firstCell column = 0)\r\t\tifTrue: [ "TODO catch collision with border" ]\r\t\tifFalse: [\r\t\t\tnewCell := board rows: (firstCell row) at: (firstCell column)-1.\r\t\t\tlastCell := ordered last.\r\t\r\t\t\tplayerColor := firstCell color.\r\t\r\t\t\tnewCell color: playerColor.\r\t\t\tlastCell color: Color lightGray.\r\t\r\t\t\tordered addFirst: newCell.\r\t\t\tordered removeLast.\r\t].',			#stamp : 'Patrick 6/22/2017 18:24',			#package : #snake_game		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #SnakeModel,				#isMetaSide : false			},			#name : #'moveEast:',			#protocol : #execution,			#sourceCode : 'moveEast: ordered\r\t| firstCell newCell lastCell playerColor |\r\tfirstCell := ordered first.\r\t(firstCell column = 1)\r\t\tifTrue: [ "TODO catch collision with border" ]\r\t\tifFalse: [\r\t\t\tnewCell := board rows: (firstCell row) at: (firstCell column)-1.\r\t\t\tlastCell := ordered last.\r\t\r\t\t\tplayerColor := firstCell color.\r\t\r\t\t\tnewCell color: playerColor.\r\t\t\tlastCell color: Color lightGray.\r\t\r\t\t\tordered addFirst: newCell.\r\t\t\tordered removeLast.\r\t].',			#stamp : 'Patrick 6/22/2017 18:25',			#package : #snake_game		}	}}OmEntry {	#tags : {		#author : 'Patrick',		#time : DateAndTime [ '2017-06-22T18:26:28.417248+02:00' ],		#prior : OmReference [ '132' ],		#self : OmReference [ '133' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #KeyListener,				#isMetaSide : false			},			#name : #'handleKeystroke:',			#protocol : #'keyboard control',			#sourceCode : 'handleKeystroke: event "no clue how to actually use this"\r\t| key |\r\tkey := event keyValue.\r\tkey = 30 "up blue"\r\t\tifTrue: [ parent model blueDirection: #north. parent messageArea contents: \'n\' ].\r\tkey = 31 "down blue"\r\t\tifTrue: [ parent model blueDirection: #south. parent messageArea contents: \'s\' ].\r\tkey = 29 "right blue"\r\t\tifTrue: [ parent model blueDirection: #east. parent messageArea contents: \'e\' ].\r\tkey = 28 "left blue"\r\t\tifTrue: [ parent model blueDirection: #west. parent messageArea contents: \'w\' ].\r\tkey = 119 "red up (w)"\r\t\tifTrue: [ parent model redDirection: #north ].\r\tkey = 115 "red down (s)"\r\t\tifTrue: [ parent model redDirection: #south ].\r\tkey = 100 "red right (d)"\r\t\tifTrue: [ parent model redDirection: #east ].\r\tkey = 97 "red left (a)"\r\t\tifTrue: [ parent model redDirection: #west ].',			#stamp : 'Patrick 6/22/2017 18:16',			#package : #snake_game		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #KeyListener,				#isMetaSide : false			},			#name : #'handleKeystroke:',			#protocol : #'keyboard control',			#sourceCode : 'handleKeystroke: event "no clue how to actually use this"\r\t| key |\r\tkey := event keyValue.\r\tkey = 30 "up blue"\r\t\tifTrue: [ parent model blueDirection: #north. parent messageArea contents: \'up\' ].\r\tkey = 31 "down blue"\r\t\tifTrue: [ parent model blueDirection: #south. parent messageArea contents: \'down\' ].\r\tkey = 29 "right blue"\r\t\tifTrue: [ parent model blueDirection: #east. parent messageArea contents: \'right\' ].\r\tkey = 28 "left blue"\r\t\tifTrue: [ parent model blueDirection: #west. parent messageArea contents: \'left\' ].\r\tkey = 119 "red up (w)"\r\t\tifTrue: [ parent model redDirection: #north. parent messageArea contents: \'w\' ].\r\tkey = 115 "red down (s)"\r\t\tifTrue: [ parent model redDirection: #south. parent messageArea contents: \'s\' ].\r\tkey = 100 "red right (d)"\r\t\tifTrue: [ parent model redDirection: #east. parent messageArea contents: \'d\' ].\r\tkey = 97 "red left (a)"\r\t\tifTrue: [ parent model redDirection: #west. parent messageArea contents: \'a\' ].',			#stamp : 'Patrick 6/22/2017 18:26',			#package : #snake_game		}	}}OmEntry {	#tags : {		#author : 'Patrick',		#time : DateAndTime [ '2017-06-22T18:26:43.216248+02:00' ],		#prior : OmReference [ '133' ],		#self : OmReference [ '134' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #SnakeModel,				#isMetaSide : false			},			#name : #executeStep,			#protocol : #execution,			#sourceCode : 'executeStep\r\t"TODO start with blue only"\r\t"TODO this is supposed to compute snake movement"\r\tblueDirection = #north\r\t\tifTrue: [ self moveNorth: blueCells ].\r\tblueDirection = #south\r\t\tifTrue: [ self moveSouth: blueCells ].\r\tblueDirection = #east\r\t\tifTrue: [ self moveEast: blueCells ].\r\tblueDirection = #west\r\t\tifTrue: [ self moveWest: blueCells ].\r\t"TODO here we want to do collision checks after movement"',			#stamp : 'Patrick 6/22/2017 17:34',			#package : #snake_game		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #SnakeModel,				#isMetaSide : false			},			#name : #executeStep,			#protocol : #execution,			#sourceCode : 'executeStep\r\t"TODO start with blue only"\r\tblueDirection = #north\r\t\tifTrue: [ self moveNorth: blueCells ].\r\tblueDirection = #south\r\t\tifTrue: [ self moveSouth: blueCells ].\r\tblueDirection = #east\r\t\tifTrue: [ self moveEast: blueCells ].\r\tblueDirection = #west\r\t\tifTrue: [ self moveWest: blueCells ].\r\t"TODO here we want to do collision checks after movement"',			#stamp : 'Patrick 6/22/2017 18:26',			#package : #snake_game		}	}}OmEntry {	#tags : {		#author : 'Patrick',		#time : DateAndTime [ '2017-06-22T18:26:57.917248+02:00' ],		#prior : OmReference [ '134' ],		#self : OmReference [ '135' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #SnakeModel,				#isMetaSide : false			},			#name : #executeStep,			#protocol : #execution,			#sourceCode : 'executeStep\r\t"TODO start with blue only"\r\tblueDirection = #north\r\t\tifTrue: [ self moveNorth: blueCells ].\r\tblueDirection = #south\r\t\tifTrue: [ self moveSouth: blueCells ].\r\tblueDirection = #east\r\t\tifTrue: [ self moveEast: blueCells ].\r\tblueDirection = #west\r\t\tifTrue: [ self moveWest: blueCells ].\r\t"TODO here we want to do collision checks after movement"',			#stamp : 'Patrick 6/22/2017 18:26',			#package : #snake_game		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #SnakeModel,				#isMetaSide : false			},			#name : #executeStep,			#protocol : #execution,			#sourceCode : 'executeStep\r\t"TODO start with blue only"\r\t"TODO currently runs into wall and then, keeps running into wall"\r\tblueDirection = #north\r\t\tifTrue: [ self moveNorth: blueCells ].\r\tblueDirection = #south\r\t\tifTrue: [ self moveSouth: blueCells ].\r\tblueDirection = #east\r\t\tifTrue: [ self moveEast: blueCells ].\r\tblueDirection = #west\r\t\tifTrue: [ self moveWest: blueCells ].\r\t"TODO here we want to do collision checks after movement"',			#stamp : 'Patrick 6/22/2017 18:26',			#package : #snake_game		}	}}OmEntry {	#tags : {		#author : 'Patrick',		#time : DateAndTime [ '2017-06-22T18:27:39.397248+02:00' ],		#prior : OmReference [ '135' ],		#self : OmReference [ '136' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #SnakeModel,				#isMetaSide : false			},			#name : #executeStep,			#protocol : #execution,			#sourceCode : 'executeStep\r\t"TODO start with blue only"\r\t"TODO currently runs into wall and then, keeps running into wall"\r\tblueDirection = #north\r\t\tifTrue: [ self moveNorth: blueCells ].\r\tblueDirection = #south\r\t\tifTrue: [ self moveSouth: blueCells ].\r\tblueDirection = #east\r\t\tifTrue: [ self moveEast: blueCells ].\r\tblueDirection = #west\r\t\tifTrue: [ self moveWest: blueCells ].\r\t"TODO here we want to do collision checks after movement"',			#stamp : 'Patrick 6/22/2017 18:26',			#package : #snake_game		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #SnakeModel,				#isMetaSide : false			},			#name : #executeStep,			#protocol : #execution,			#sourceCode : 'executeStep\r\t"TODO currently runs into wall and then, keeps running into wall"\r\tblueDirection = #north\r\t\tifTrue: [ self moveNorth: blueCells ].\r\tblueDirection = #south\r\t\tifTrue: [ self moveSouth: blueCells ].\r\tblueDirection = #east\r\t\tifTrue: [ self moveEast: blueCells ].\r\tblueDirection = #west\r\t\tifTrue: [ self moveWest: blueCells ].\r\t\t\r\tredDirection = #north\r\t\tifTrue: [ self moveNorth: redCells ].\r\tredDirection = #south\r\t\tifTrue: [ self moveSouth: redCells ].\r\tredDirection = #east\r\t\tifTrue: [ self moveEast: redCells ].\r\tredDirection = #west\r\t\tifTrue: [ self moveWest: redCells ].\r\t"TODO here we want to do collision checks after movement"',			#stamp : 'Patrick 6/22/2017 18:27',			#package : #snake_game		}	}}OmEntry {	#tags : {		#author : 'Patrick',		#time : DateAndTime [ '2017-06-22T18:30:31.664248+02:00' ],		#prior : OmReference [ '136' ],		#self : OmReference [ '137' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #SnakeGame,				#isMetaSide : false			},			#name : #start,			#protocol : #starting,			#sourceCode : 'start\r\t| redCell blueCell winner |\r\t"0/0 is right bottom corner, 25/25 left top corner"\r\tredCell := (rows at: 6) at: 6.\r\tblueCell := (rows at: 20) at: 20.\r\tredCell color: Color red.\r\tblueCell color: Color blue.\r\t\r\tmodel blueCells addFirst: blueCell.\r\tmodel redCells addFirst: redCell.\r\t\r\tkeyListener takeKeyboardFocus.\r\t\r\twinner := nil.\r\t\r\t"the game loop code ought to give us a winner at some point"\r\t[[winner isNil ] whileTrue: [ \r\t\t| delay |\r\t\tdelay := (Delay forMilliseconds: 200).\r\t\tdelay wait.\r\t\tmodel executeStep.\r\t\twinner := model checkWinner.\r\t]] fork.',			#stamp : 'Patrick 6/22/2017 18:30',			#package : #snake_game		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #SnakeGame,				#isMetaSide : false			},			#name : #start,			#protocol : #starting,			#sourceCode : 'start\r\t| redCell blueCell winner |\r\t"0/0 is right bottom corner, 25/25 left top corner"\r\tredCell := (rows at: 6) at: 6.\r\tblueCell := (rows at: 20) at: 20.\r\tredCell color: Color red.\r\tblueCell color: Color blue.\r\t\r\tmodel blueCells addFirst: blueCell.\r\tmodel redCells addFirst: redCell.\r\t\r\t1 to: 3 do: [ :tailCell |\r\t\t\r\t].\r\t\r\tkeyListener takeKeyboardFocus.\r\t\r\twinner := nil.\r\t\r\t"the game loop code ought to give us a winner at some point"\r\t[[winner isNil ] whileTrue: [ \r\t\t| delay |\r\t\tdelay := (Delay forMilliseconds: 200).\r\t\tdelay wait.\r\t\tmodel executeStep.\r\t\twinner := model checkWinner.\r\t]] fork.',			#stamp : 'Patrick 6/22/2017 18:30',			#package : #snake_game		}	}}OmEntry {	#tags : {		#author : 'Patrick',		#time : DateAndTime [ '2017-06-22T18:32:06.913248+02:00' ],		#prior : OmReference [ '137' ],		#self : OmReference [ '138' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #SnakeGame,				#isMetaSide : false			},			#name : #start,			#protocol : #starting,			#sourceCode : 'start\r\t| redCell blueCell winner |\r\t"0/0 is right bottom corner, 25/25 left top corner"\r\tredCell := (rows at: 6) at: 6.\r\tblueCell := (rows at: 20) at: 20.\r\tredCell color: Color red.\r\tblueCell color: Color blue.\r\t\r\tmodel blueCells addFirst: blueCell.\r\tmodel redCells addFirst: redCell.\r\t\r\t1 to: 3 do: [ :tailCell |\r\t\t\r\t].\r\t\r\tkeyListener takeKeyboardFocus.\r\t\r\twinner := nil.\r\t\r\t"the game loop code ought to give us a winner at some point"\r\t[[winner isNil ] whileTrue: [ \r\t\t| delay |\r\t\tdelay := (Delay forMilliseconds: 200).\r\t\tdelay wait.\r\t\tmodel executeStep.\r\t\twinner := model checkWinner.\r\t]] fork.',			#stamp : 'Patrick 6/22/2017 18:30',			#package : #snake_game		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #SnakeGame,				#isMetaSide : false			},			#name : #start,			#protocol : #starting,			#sourceCode : 'start\r\t| redCell blueCell winner |\r\t"0/0 is right bottom corner, 25/25 left top corner"\r\tredCell := (rows at: 6) at: 6.\r\tblueCell := (rows at: 20) at: 20.\r\tredCell color: Color red.\r\tblueCell color: Color blue.\r\t\r\tmodel blueCells addFirst: blueCell.\r\tmodel redCells addFirst: redCell.\r\t\r\t1 to: 3 do: [ :tailCell |\r\t\t| newCell |\r\t\tnewCell := rows at: (blueCell rows)\r\t].\r\t\r\tkeyListener takeKeyboardFocus.\r\t\r\twinner := nil.\r\t\r\t"the game loop code ought to give us a winner at some point"\r\t[[winner isNil ] whileTrue: [ \r\t\t| delay |\r\t\tdelay := (Delay forMilliseconds: 200).\r\t\tdelay wait.\r\t\tmodel executeStep.\r\t\twinner := model checkWinner.\r\t]] fork.',			#stamp : 'Patrick 6/22/2017 18:32',			#package : #snake_game		}	}}OmEntry {	#tags : {		#author : 'Patrick',		#time : DateAndTime [ '2017-06-22T18:34:01.693248+02:00' ],		#prior : OmReference [ '138' ],		#self : OmReference [ '139' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #SnakeGame,				#isMetaSide : false			},			#name : #start,			#protocol : #starting,			#sourceCode : 'start\r\t| redCell blueCell winner |\r\t"0/0 is right bottom corner, 25/25 left top corner"\r\tredCell := (rows at: 6) at: 6.\r\tblueCell := (rows at: 20) at: 20.\r\tredCell color: Color red.\r\tblueCell color: Color blue.\r\t\r\tmodel blueCells addFirst: blueCell.\r\tmodel redCells addFirst: redCell.\r\t\r\t1 to: 3 do: [ :tailCell |\r\t\t| newCell |\r\t\tnewCell := rows at: (blueCell rows)\r\t].\r\t\r\tkeyListener takeKeyboardFocus.\r\t\r\twinner := nil.\r\t\r\t"the game loop code ought to give us a winner at some point"\r\t[[winner isNil ] whileTrue: [ \r\t\t| delay |\r\t\tdelay := (Delay forMilliseconds: 200).\r\t\tdelay wait.\r\t\tmodel executeStep.\r\t\twinner := model checkWinner.\r\t]] fork.',			#stamp : 'Patrick 6/22/2017 18:32',			#package : #snake_game		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #SnakeGame,				#isMetaSide : false			},			#name : #start,			#protocol : #starting,			#sourceCode : 'start\r\t| redCell blueCell winner |\r\t"0/0 is right bottom corner, 25/25 left top corner"\r\tredCell := (rows at: 6) at: 6.\r\tblueCell := (rows at: 20) at: 20.\r\tredCell color: Color red.\r\tblueCell color: Color blue.\r\t\r\tmodel blueCells addFirst: blueCell.\r\tmodel redCells addFirst: redCell.\r\t\r\t1 to: 3 do: [ :offset |\r\t\t| newCell |\r\t\tnewCell := rows at: (blueCell row)+offset at: (blueCell column).\r\t\tmodel blueCells addLast: newCell.\r\t\tnewCell := rows at: (redCell row)-offset at: (redCell column).\r\t\tmodel redCells addLast: newCell.\r\t].\r\t\r\tkeyListener takeKeyboardFocus.\r\t\r\twinner := nil.\r\t\r\t"the game loop code ought to give us a winner at some point"\r\t[[winner isNil ] whileTrue: [ \r\t\t| delay |\r\t\tdelay := (Delay forMilliseconds: 200).\r\t\tdelay wait.\r\t\tmodel executeStep.\r\t\twinner := model checkWinner.\r\t]] fork.',			#stamp : 'Patrick 6/22/2017 18:34',			#package : #snake_game		}	}}OmEntry {	#tags : {		#author : 'Patrick',		#time : DateAndTime [ '2017-06-22T18:34:05.753248+02:00' ],		#prior : OmReference [ '139' ],		#self : OmReference [ '140' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'Manifestsnakegame class',				#isMetaSide : true			},			#name : #ruleRBLongMethodsRuleV1FalsePositive,			#protocol : #code-critics,			#sourceCode : 'ruleRBLongMethodsRuleV1FalsePositive\r\t^ #()',			#stamp : 'Patrick 6/22/2017 18:34',			#package : #snake_game		}	}}OmEntry {	#tags : {		#author : 'Patrick',		#time : DateAndTime [ '2017-06-22T18:34:05.762248+02:00' ],		#prior : OmReference [ '140' ],		#self : OmReference [ '141' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'Manifestsnakegame class',				#isMetaSide : true			},			#name : #ruleRBLongMethodsRuleV1FalsePositive,			#protocol : #code-critics,			#sourceCode : 'ruleRBLongMethodsRuleV1FalsePositive\r\t^ #()',			#stamp : 'Patrick 6/22/2017 18:34',			#package : #snake_game		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'Manifestsnakegame class',				#isMetaSide : true			},			#name : #ruleRBLongMethodsRuleV1FalsePositive,			#protocol : #code-critics,			#sourceCode : 'ruleRBLongMethodsRuleV1FalsePositive\r\t^ #(#(#(#RGClassDefinition #(#SnakeGame)) #\'2017-06-22T18:34:05.757248+02:00\') )',			#stamp : 'Patrick 6/22/2017 18:34',			#package : #snake_game		}	}}OmEntry {	#tags : {		#author : 'Patrick',		#time : DateAndTime [ '2017-06-22T18:34:46.130248+02:00' ],		#prior : OmReference [ '141' ],		#self : OmReference [ '142' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #SnakeGame,				#isMetaSide : false			},			#name : #start,			#protocol : #starting,			#sourceCode : 'start\r\t| redCell blueCell winner |\r\t"0/0 is right bottom corner, 25/25 left top corner"\r\tredCell := (rows at: 6) at: 6.\r\tblueCell := (rows at: 20) at: 20.\r\tredCell color: Color red.\r\tblueCell color: Color blue.\r\t\r\tmodel blueCells addFirst: blueCell.\r\tmodel redCells addFirst: redCell.\r\t\r\t1 to: 3 do: [ :offset |\r\t\t| newCell |\r\t\tnewCell := rows at: (blueCell row)+offset at: (blueCell column).\r\t\tmodel blueCells addLast: newCell.\r\t\tnewCell := rows at: (redCell row)-offset at: (redCell column).\r\t\tmodel redCells addLast: newCell.\r\t].\r\t\r\tkeyListener takeKeyboardFocus.\r\t\r\twinner := nil.\r\t\r\t"the game loop code ought to give us a winner at some point"\r\t[[winner isNil ] whileTrue: [ \r\t\t| delay |\r\t\tdelay := (Delay forMilliseconds: 200).\r\t\tdelay wait.\r\t\tmodel executeStep.\r\t\twinner := model checkWinner.\r\t]] fork.',			#stamp : 'Patrick 6/22/2017 18:34',			#package : #snake_game		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #SnakeGame,				#isMetaSide : false			},			#name : #start,			#protocol : #starting,			#sourceCode : 'start\r\t| redCell blueCell winner |\r\t"0/0 is right bottom corner, 25/25 left top corner"\r\tredCell := (rows at: 6) at: 6.\r\tblueCell := (rows at: 20) at: 20.\r\tredCell color: Color red.\r\tblueCell color: Color blue.\r\t\r\tmodel blueCells addFirst: blueCell.\r\tmodel redCells addFirst: redCell.\r\t\r\t1 to: 3 do: [ :offset |\r\t\t| newCell |\r\t\tnewCell := (rows at: (blueCell row)+offset) at: (blueCell column).\r\t\tmodel blueCells addLast: newCell.\r\t\tnewCell := (rows at: (redCell row)-offset) at: (redCell column).\r\t\tmodel redCells addLast: newCell.\r\t].\r\t\r\tkeyListener takeKeyboardFocus.\r\t\r\twinner := nil.\r\t\r\t"the game loop code ought to give us a winner at some point"\r\t[[winner isNil ] whileTrue: [ \r\t\t| delay |\r\t\tdelay := (Delay forMilliseconds: 200).\r\t\tdelay wait.\r\t\tmodel executeStep.\r\t\twinner := model checkWinner.\r\t]] fork.',			#stamp : 'Patrick 6/22/2017 18:34',			#package : #snake_game		}	}}