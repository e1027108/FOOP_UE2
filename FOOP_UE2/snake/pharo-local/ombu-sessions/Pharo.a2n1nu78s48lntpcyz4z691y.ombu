OmEntry {	#tags : {		#author : 'p',		#time : DateAndTime [ '2017-06-25T12:52:28.696286+02:00' ],		#prior : OmReference [ 'Pharo.43qkam9zw9o32r3qui6ggegti', '33' ],		#self : OmReference [ '1' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #SnakeModel,				#isMetaSide : false			},			#name : #handleArtifacts,			#protocol : #'artifact handling',			#sourceCode : 'handleArtifacts\r\t',			#stamp : 'p 6/25/2017 12:52',			#package : #snake_game		}	}}OmEntry {	#tags : {		#author : 'p',		#time : DateAndTime [ '2017-06-25T12:53:18.588286+02:00' ],		#prior : OmReference [ '1' ],		#self : OmReference [ '2' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #SnakeModel,				#isMetaSide : false			},			#name : #handleArtifacts,			#protocol : #'artifact handling',			#sourceCode : 'handleArtifacts\r\t',			#stamp : 'p 6/25/2017 12:52',			#package : #snake_game		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #SnakeModel,				#isMetaSide : false			},			#name : #handleArtifacts,			#protocol : #'artifact handling',			#sourceCode : 'handleArtifacts\r\t\t| prob |\r\t\tprob := self generateRandomNumber: 100.\r\t\t\r\t\t(prob < 5)\r\t\t\tifTrue: [ \r\t\t\t\t\r\t\t\t\t]',			#stamp : 'p 6/25/2017 12:53',			#package : #snake_game		}	}}OmEntry {	#tags : {		#author : 'p',		#time : DateAndTime [ '2017-06-25T12:53:54.002286+02:00' ],		#prior : OmReference [ '2' ],		#self : OmReference [ '3' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #SnakeModel,				#isMetaSide : false			},			#name : #spawnArtifacts,			#protocol : #'artifact handling',			#sourceCode : 'spawnArtifacts\r\t| prob |\r\tprob := self generateRandomNumber: 100.\r\t\r\t(prob <= 5)\r\t\tifTrue: [ \r\t\t\t| x y |\r\t\t\tx := self generateRandomNumber: 25.\r\t\t\ty := self generateRandomNumber: 25.\r\t\t\t\r\t\t\t(self checkPosition: x@y)\r\t\t\t\tifTrue: [\r\t\t\t\t\t| type artifact newCell |\r\t\t\t\t\ttype := self generateRandomNumber: 4.\r\t\t\t\t\tartifact := Artifact getNew: type.\r\t\t\t\t\tnewCell := ((board rows at: x) at: y).\r\t\t\t\t\tnewCell artifact: artifact.\r\t\t\t\t\tartifactCells add: newCell.\r\t\t\t\t].\r\t\t].\r\t',			#stamp : 'p 6/25/2017 00:54',			#package : #snake_game		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #SnakeModel,				#isMetaSide : false			},			#name : #spawnArtifacts,			#protocol : #'artifact handling',			#sourceCode : 'spawnArtifacts\r\t| x y |\r\tx := self generateRandomNumber: 25.\r\ty := self generateRandomNumber: 25.\r\t\r\t(self checkPosition: x@y)\r\t\tifTrue: [\r\t\t\t| type artifact newCell |\r\t\t\ttype := self generateRandomNumber: 4.\r\t\t\tartifact := Artifact getNew: type.\r\t\t\tnewCell := ((board rows at: x) at: y).\r\t\t\tnewCell artifact: artifact.\r\t\t\tartifactCells add: newCell.\r\t\t].\r\t',			#stamp : 'p 6/25/2017 12:53',			#package : #snake_game		}	}}OmEntry {	#tags : {		#author : 'p',		#time : DateAndTime [ '2017-06-25T12:54:07.344286+02:00' ],		#prior : OmReference [ '3' ],		#self : OmReference [ '4' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #SnakeModel,				#isMetaSide : false			},			#name : #handleArtifacts,			#protocol : #'artifact handling',			#sourceCode : 'handleArtifacts\r\t\t| prob |\r\t\tprob := self generateRandomNumber: 100.\r\t\t\r\t\t(prob < 5)\r\t\t\tifTrue: [ \r\t\t\t\t\r\t\t\t\t]',			#stamp : 'p 6/25/2017 12:53',			#package : #snake_game		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #SnakeModel,				#isMetaSide : false			},			#name : #handleArtifacts,			#protocol : #'artifact handling',			#sourceCode : 'handleArtifacts\r\t\t| prob |\r\t\tprob := self generateRandomNumber: 100.\r\t\t\r\t\t(prob < 5)\r\t\t\tifTrue: [ \r\t\t\t\tself spawnArtifacts.\t\r\t\t\t]',			#stamp : 'p 6/25/2017 12:54',			#package : #snake_game		}	}}OmEntry {	#tags : {		#author : 'p',		#time : DateAndTime [ '2017-06-25T12:55:06.244286+02:00' ],		#prior : OmReference [ '4' ],		#self : OmReference [ '5' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #SnakeModel,				#isMetaSide : false			},			#name : #handleArtifacts,			#protocol : #'artifact handling',			#sourceCode : 'handleArtifacts\r\t\t| prob |\r\t\tprob := self generateRandomNumber: 100.\r\t\t\r\t\t(prob < 5)\r\t\t\tifTrue: [ \r\t\t\t\tself spawnArtifacts.\t\r\t\t\t]',			#stamp : 'p 6/25/2017 12:54',			#package : #snake_game		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #SnakeModel,				#isMetaSide : false			},			#name : #handleArtifacts,			#protocol : #'artifact handling',			#sourceCode : 'handleArtifacts\r\t\t| prob |\r\t\tprob := self generateRandomNumber: 100.\r\t\t\r\t\t(prob < 5)\r\t\t\tifTrue: [ \r\t\t\t\tself spawnArtifacts.\t\r\t\t\t]\r\t\t\tifFalse: [ \r\t\t\t\t(prob > 96)\r\t\t\t\t\tifTrue: [ \r\t\t\t\t\t\tself despawnArtifacts.\r\t\t\t\t\t].\r\t\t\t].',			#stamp : 'p 6/25/2017 12:55',			#package : #snake_game		}	}}OmEntry {	#tags : {		#author : 'p',		#time : DateAndTime [ '2017-06-25T12:55:42.152286+02:00' ],		#prior : OmReference [ '5' ],		#self : OmReference [ '6' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #SnakeModel,				#isMetaSide : false			},			#name : #despawnArtifacts,			#protocol : #'artifact handling',			#sourceCode : 'despawnArtifacts\r\t| prob |\r\tprob := self generateRandomNumber: 100.\r\t\r\t(prob <= 3)\r\t\tifTrue: [ \r\t\t\tartifactCells notEmpty\r\t\t\t\tifTrue: [\r\t\t\t\t\t| a |\r\t\t\t\t\ta := self generateRandomNumber: (artifactCells size).\r\t\t\t\r\t\t\t\t\tself despawnSingleArtifact: a.\r\t\t\t\t].\r\t\t].\r\t',			#stamp : 'p 6/25/2017 00:58',			#package : #snake_game		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #SnakeModel,				#isMetaSide : false			},			#name : #despawnArtifacts,			#protocol : #'artifact handling',			#sourceCode : 'despawnArtifacts\r\tartifactCells notEmpty\r\tifTrue: [\r\t\t| a |\r\t\ta := self generateRandomNumber: (artifactCells size).\r\t\t\t\r\t\tself despawnSingleArtifact: a.\r\t].\r\t',			#stamp : 'p 6/25/2017 12:55',			#package : #snake_game		}	}}OmEntry {	#tags : {		#author : 'p',		#time : DateAndTime [ '2017-06-25T12:55:58.040286+02:00' ],		#prior : OmReference [ '6' ],		#self : OmReference [ '7' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #SnakeModel,				#isMetaSide : false			},			#name : #despawnArtifacts,			#protocol : #'artifact handling',			#sourceCode : 'despawnArtifacts\r\tartifactCells notEmpty\r\tifTrue: [\r\t\t| a |\r\t\ta := self generateRandomNumber: (artifactCells size).\r\t\t\t\r\t\tself despawnSingleArtifact: a.\r\t].\r\t',			#stamp : 'p 6/25/2017 12:55',			#package : #snake_game		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #SnakeModel,				#isMetaSide : false			},			#name : #despawnArtifacts,			#protocol : #'artifact handling',			#sourceCode : 'despawnArtifacts\r\tartifactCells notEmpty\r\t\tifTrue: [\r\t\t\t| a |\r\t\t\ta := self generateRandomNumber: (artifactCells size).\r\t\t\t\r\t\t\tself despawnSingleArtifact: a.\r\t\t].\r\t',			#stamp : 'p 6/25/2017 12:55',			#package : #snake_game		}	}}OmEntry {	#tags : {		#author : 'p',		#time : DateAndTime [ '2017-06-25T12:56:05.482286+02:00' ],		#prior : OmReference [ '7' ],		#self : OmReference [ '8' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #SnakeModel,				#isMetaSide : false			},			#name : #despawnArtifacts,			#protocol : #'artifact handling',			#sourceCode : 'despawnArtifacts\r\tartifactCells notEmpty\r\t\tifTrue: [\r\t\t\t| a |\r\t\t\ta := self generateRandomNumber: (artifactCells size).\r\t\t\t\r\t\t\tself despawnSingleArtifact: a.\r\t\t].\r\t',			#stamp : 'p 6/25/2017 12:55',			#package : #snake_game		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #SnakeModel,				#isMetaSide : false			},			#name : #despawnArtifacts,			#protocol : #'artifact handling',			#sourceCode : 'despawnArtifacts\r\t(artifactCells notEmpty)\r\t\tifTrue: [\r\t\t\t| a |\r\t\t\ta := self generateRandomNumber: (artifactCells size).\r\t\t\t\r\t\t\tself despawnSingleArtifact: a.\r\t\t].\r\t',			#stamp : 'p 6/25/2017 12:56',			#package : #snake_game		}	}}OmEntry {	#tags : {		#author : 'p',		#time : DateAndTime [ '2017-06-25T12:56:39.576286+02:00' ],		#prior : OmReference [ '8' ],		#self : OmReference [ '9' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #SnakeModel,				#isMetaSide : false			},			#name : #executeStep,			#protocol : #execution,			#sourceCode : 'executeStep\r\tself moveSnakes.\r\tself spawnArtifacts.\r\tself despawnArtifacts.\r\tself updateTime.\r',			#stamp : 'p 6/25/2017 00:57',			#package : #snake_game		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #SnakeModel,				#isMetaSide : false			},			#name : #executeStep,			#protocol : #execution,			#sourceCode : 'executeStep\r\tself moveSnakes.\r\tself handleArtifacts.\r\tself updateTime.\r',			#stamp : 'p 6/25/2017 12:56',			#package : #snake_game		}	}}OmEntry {	#tags : {		#author : 'p',		#time : DateAndTime [ '2017-06-25T12:57:56.583286+02:00' ],		#prior : OmReference [ '9' ],		#self : OmReference [ '10' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #SnakeModel,				#isMetaSide : false			},			#name : #handleArtifacts,			#protocol : #'artifact handling',			#sourceCode : 'handleArtifacts\r\t\t| prob |\r\t\tprob := self generateRandomNumber: 100.\r\t\t\r\t\t(prob < 5)\r\t\t\tifTrue: [ \r\t\t\t\tself spawnArtifacts.\t\r\t\t\t]\r\t\t\tifFalse: [ \r\t\t\t\t(prob > 96)\r\t\t\t\t\tifTrue: [ \r\t\t\t\t\t\tself despawnArtifacts.\r\t\t\t\t\t].\r\t\t\t].',			#stamp : 'p 6/25/2017 12:55',			#package : #snake_game		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #SnakeModel,				#isMetaSide : false			},			#name : #handleArtifacts,			#protocol : #'artifact handling',			#sourceCode : 'handleArtifacts\r\t\t| prob |\r\t\tprob := self generateRandomNumber: 100.\r\t\t\r\t\t(prob < 5)\r\t\t\tifTrue: [ \r\t\t\t\tself spawnArtifacts.\t\r\t\t\t]\r\t\t\tifFalse: [ \r\t\t\t\t"lower probability to despawn, so people get the chance to catch them"\r\t\t\t\t(prob > 97)\r\t\t\t\t\tifTrue: [ \r\t\t\t\t\t\tself despawnArtifacts.\r\t\t\t\t\t].\r\t\t\t].',			#stamp : 'p 6/25/2017 12:57',			#package : #snake_game		}	}}OmEntry {	#tags : {		#author : 'p',		#time : DateAndTime [ '2017-06-25T12:58:01.670286+02:00' ],		#prior : OmReference [ '10' ],		#self : OmReference [ '11' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #SnakeModel,				#isMetaSide : false			},			#name : #handleArtifacts,			#protocol : #'artifact handling',			#sourceCode : 'handleArtifacts\r\t\t| prob |\r\t\tprob := self generateRandomNumber: 100.\r\t\t\r\t\t(prob < 5)\r\t\t\tifTrue: [ \r\t\t\t\tself spawnArtifacts.\t\r\t\t\t]\r\t\t\tifFalse: [ \r\t\t\t\t"lower probability to despawn, so people get the chance to catch them"\r\t\t\t\t(prob > 97)\r\t\t\t\t\tifTrue: [ \r\t\t\t\t\t\tself despawnArtifacts.\r\t\t\t\t\t].\r\t\t\t].',			#stamp : 'p 6/25/2017 12:57',			#package : #snake_game		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #SnakeModel,				#isMetaSide : false			},			#name : #handleArtifacts,			#protocol : #'artifact handling',			#sourceCode : 'handleArtifacts\r\t\t| prob |\r\t\tprob := self generateRandomNumber: 100.\r\t\t\r\t\t(prob < 5)\r\t\t\tifTrue: [ \r\t\t\t\tself spawnArtifacts.\t\r\t\t\t]\r\t\t\tifFalse: [ \r\t\t\t\t"lower probability to despawn,\r\t\t\t\tso people get the chance to catch them"\r\t\t\t\t(prob > 97)\r\t\t\t\t\tifTrue: [ \r\t\t\t\t\t\tself despawnArtifacts.\r\t\t\t\t\t].\r\t\t\t].',			#stamp : 'p 6/25/2017 12:58',			#package : #snake_game		}	}}OmEntry {	#tags : {		#author : 'p',		#time : DateAndTime [ '2017-06-25T12:58:37.209286+02:00' ],		#prior : OmReference [ '11' ],		#self : OmReference [ '12' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #SnakeModel,				#isMetaSide : false			},			#name : #handleArtifacts,			#protocol : #'artifact handling',			#sourceCode : 'handleArtifacts\r\t\t| prob |\r\t\tprob := self generateRandomNumber: 100.\r\t\t\r\t\t(prob < 5)\r\t\t\tifTrue: [ \r\t\t\t\tself spawnArtifacts.\t\r\t\t\t]\r\t\t\tifFalse: [ \r\t\t\t\t"lower probability to despawn,\r\t\t\t\tso people get the chance to catch them"\r\t\t\t\t(prob > 97)\r\t\t\t\t\tifTrue: [ \r\t\t\t\t\t\tself despawnArtifacts.\r\t\t\t\t\t].\r\t\t\t].',			#stamp : 'p 6/25/2017 12:58',			#package : #snake_game		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #SnakeModel,				#isMetaSide : false			},			#name : #handleArtifacts,			#protocol : #'artifact handling',			#sourceCode : 'handleArtifacts\r\t\t| prob |\r\t\tprob := self generateRandomNumber: 100.\r\t\t\r\t\t(prob <= 5)\r\t\t\tifTrue: [ \r\t\t\t\tself spawnArtifacts.\t\r\t\t\t]\r\t\t\tifFalse: [ \r\t\t\t\t"lower probability to despawn,\r\t\t\t\tso people get the chance to catch them"\r\t\t\t\t(prob > 97)\r\t\t\t\t\tifTrue: [ \r\t\t\t\t\t\tself despawnArtifacts.\r\t\t\t\t\t].\r\t\t\t].',			#stamp : 'p 6/25/2017 12:58',			#package : #snake_game		}	}}OmEntry {	#tags : {		#author : 'p',		#time : DateAndTime [ '2017-06-25T12:59:30.980286+02:00' ],		#prior : OmReference [ '12' ],		#self : OmReference [ '13' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #SnakeModel,				#isMetaSide : false			},			#name : #handleArtifacts,			#protocol : #'artifact handling',			#sourceCode : 'handleArtifacts\r\t\t| prob |\r\t\tprob := self generateRandomNumber: 100.\r\t\t\r\t\t(prob <= 5)\r\t\t\tifTrue: [ \r\t\t\t\tself spawnArtifacts.\t\r\t\t\t]\r\t\t\tifFalse: [ \r\t\t\t\t"lower probability to despawn,\r\t\t\t\tso people get the chance to catch them"\r\t\t\t\t(prob > 97)\r\t\t\t\t\tifTrue: [ \r\t\t\t\t\t\tself despawnArtifacts.\r\t\t\t\t\t].\r\t\t\t].',			#stamp : 'p 6/25/2017 12:58',			#package : #snake_game		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #SnakeModel,				#isMetaSide : false			},			#name : #handleArtifacts,			#protocol : #'artifact handling',			#sourceCode : 'handleArtifacts\r\t\t| prob |\r\t\tprob := self generateRandomNumber: 100.\r\t\t\r\t\t(prob <= 5)\r\t\t\tifTrue: [\r\t\t\t\tself spawnArtifacts.\t\r\t\t\t]\r\t\t\tifFalse: [ \r\t\t\t\t"lower probability to despawn,\r\t\t\t\tso people get the chance to catch them"\r\t\t\t\t(prob > 97)\r\t\t\t\t\tifTrue: [ \r\t\t\t\t\t\tself despawnArtifacts.\r\t\t\t\t\t].\r\t\t\t].',			#stamp : 'p 6/25/2017 12:59',			#package : #snake_game		}	}}OmEntry {	#tags : {		#author : 'p',		#time : DateAndTime [ '2017-06-25T13:00:58.127286+02:00' ],		#prior : OmReference [ '13' ],		#self : OmReference [ '14' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #SnakeModel,				#isMetaSide : false			},			#name : #spawnArtifacts,			#protocol : #'artifact handling',			#sourceCode : 'spawnArtifacts\r\t| x y |\r\tx := self generateRandomNumber: 25.\r\ty := self generateRandomNumber: 25.\r\t\r\t(self checkPosition: x@y)\r\t\tifTrue: [\r\t\t\t| type artifact newCell |\r\t\t\ttype := self generateRandomNumber: 4.\r\t\t\tartifact := Artifact getNew: type.\r\t\t\tnewCell := ((board rows at: x) at: y).\r\t\t\tnewCell artifact: artifact.\r\t\t\tartifactCells add: newCell.\r\t\t].\r\t',			#stamp : 'p 6/25/2017 12:53',			#package : #snake_game		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #SnakeModel,				#isMetaSide : false			},			#name : #spawnArtifacts,			#protocol : #'artifact handling',			#sourceCode : 'spawnArtifacts\r\t| x y |\r\tx := self generateRandomNumber: 25.\r\ty := self generateRandomNumber: 25.\r\t\r\t"there can\'t be a snake or other artifact there, we don\'t want too many artifacts"\r\t((artifactCells size <= 15) and: (self checkPosition: x@y))\r\t\tifTrue: [\r\t\t\t| type artifact newCell |\r\t\t\ttype := self generateRandomNumber: 4.\r\t\t\tartifact := Artifact getNew: type.\r\t\t\tnewCell := ((board rows at: x) at: y).\r\t\t\tnewCell artifact: artifact.\r\t\t\tartifactCells add: newCell.\r\t\t].\r\t',			#stamp : 'p 6/25/2017 13:00',			#package : #snake_game		}	}}OmEntry {	#tags : {		#author : 'p',		#time : DateAndTime [ '2017-06-25T13:01:41.126286+02:00' ],		#prior : OmReference [ '14' ],		#self : OmReference [ '15' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Snake,				#isMetaSide : false			},			#name : #size,			#protocol : #accessing,			#sourceCode : 'size\r\t^ size',			#stamp : 'p 6/25/2017 13:01',			#package : #snake_game		}	}}OmEntry {	#tags : {		#author : 'p',		#time : DateAndTime [ '2017-06-25T13:01:50.949286+02:00' ],		#prior : OmReference [ '15' ],		#self : OmReference [ '16' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Snake,				#isMetaSide : false			},			#name : #size,			#protocol : #accessing,			#sourceCode : 'size\r\t^ size',			#stamp : 'p 6/25/2017 13:01',			#package : #snake_game		}	}}OmEntry {	#tags : {		#author : 'p',		#time : DateAndTime [ '2017-06-25T13:01:59.439286+02:00' ],		#prior : OmReference [ '16' ],		#self : OmReference [ '17' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Snake,				#isMetaSide : false			},			#name : #size1,			#protocol : #accessing,			#sourceCode : 'size1\r\t^ size',			#stamp : 'p 6/24/2017 18:42',			#package : #snake_game		}	}}OmEntry {	#tags : {		#author : 'p',		#time : DateAndTime [ '2017-06-25T13:02:14.573286+02:00' ],		#prior : OmReference [ '17' ],		#self : OmReference [ '18' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Snake,				#isMetaSide : false			},			#name : #'size:',			#protocol : #accessing,			#sourceCode : 'size: anObject\r\tsize := anObject',			#stamp : 'p 6/24/2017 18:42',			#package : #snake_game		}	}}OmEntry {	#tags : {		#author : 'p',		#time : DateAndTime [ '2017-06-25T13:02:36.416286+02:00' ],		#prior : OmReference [ '18' ],		#self : OmReference [ '19' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #SnakeModel,				#isMetaSide : false			},			#name : #initialize,			#protocol : #initialize,			#sourceCode : 'initialize\r\tsuper initialize.\r\tblueDirection := #south.\r\tredDirection := #north.\r\t"blueCells := OrderedCollection new.\r\tredCells := OrderedCollection new."\r\tblueSnake := Snake new.\r\tredSnake := Snake new.\r\t\r\tblueSnake size: 4.\r\tblueSnake cells: OrderedCollection new.\r\tblueSnake color: Color blue.\r\tblueSnake health: 10.\r\t\r\tredSnake size: 4.\r\tredSnake cells: OrderedCollection new.\r\tredSnake color: Color red.\r\tredSnake health: 10.\r\t\t\r\ttimer := 600.\r\trandom := Random new.\r\tartifactCells := OrderedCollection new.',			#stamp : 'p 6/25/2017 01:03',			#package : #snake_game		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #SnakeModel,				#isMetaSide : false			},			#name : #initialize,			#protocol : #initialize,			#sourceCode : 'initialize\r\tsuper initialize.\r\tblueDirection := #south.\r\tredDirection := #north.\r\t"blueCells := OrderedCollection new.\r\tredCells := OrderedCollection new."\r\tblueSnake := Snake new.\r\tredSnake := Snake new.\r\t\r\tblueSnake snakeSize: 4.\r\tblueSnake cells: OrderedCollection new.\r\tblueSnake color: Color blue.\r\tblueSnake health: 10.\r\t\r\tredSnake size: 4.\r\tredSnake cells: OrderedCollection new.\r\tredSnake color: Color red.\r\tredSnake health: 10.\r\t\t\r\ttimer := 600.\r\trandom := Random new.\r\tartifactCells := OrderedCollection new.',			#stamp : 'p 6/25/2017 13:02',			#package : #snake_game		}	}}OmEntry {	#tags : {		#author : 'p',		#time : DateAndTime [ '2017-06-25T13:02:43.341286+02:00' ],		#prior : OmReference [ '19' ],		#self : OmReference [ '20' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #SnakeModel,				#isMetaSide : false			},			#name : #initialize,			#protocol : #initialize,			#sourceCode : 'initialize\r\tsuper initialize.\r\tblueDirection := #south.\r\tredDirection := #north.\r\t"blueCells := OrderedCollection new.\r\tredCells := OrderedCollection new."\r\tblueSnake := Snake new.\r\tredSnake := Snake new.\r\t\r\tblueSnake snakeSize: 4.\r\tblueSnake cells: OrderedCollection new.\r\tblueSnake color: Color blue.\r\tblueSnake health: 10.\r\t\r\tredSnake size: 4.\r\tredSnake cells: OrderedCollection new.\r\tredSnake color: Color red.\r\tredSnake health: 10.\r\t\t\r\ttimer := 600.\r\trandom := Random new.\r\tartifactCells := OrderedCollection new.',			#stamp : 'p 6/25/2017 13:02',			#package : #snake_game		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #SnakeModel,				#isMetaSide : false			},			#name : #initialize,			#protocol : #initialize,			#sourceCode : 'initialize\r\tsuper initialize.\r\tblueDirection := #south.\r\tredDirection := #north.\r\t"blueCells := OrderedCollection new.\r\tredCells := OrderedCollection new."\r\tblueSnake := Snake new.\r\tredSnake := Snake new.\r\t\r\tblueSnake snakeSize: 4.\r\tblueSnake cells: OrderedCollection new.\r\tblueSnake color: Color blue.\r\tblueSnake health: 10.\r\t\r\tredSnake snakeSize: 4.\r\tredSnake cells: OrderedCollection new.\r\tredSnake color: Color red.\r\tredSnake health: 10.\r\t\t\r\ttimer := 600.\r\trandom := Random new.\r\tartifactCells := OrderedCollection new.',			#stamp : 'p 6/25/2017 13:02',			#package : #snake_game		}	}}OmEntry {	#tags : {		#author : 'p',		#time : DateAndTime [ '2017-06-25T13:02:52.625286+02:00' ],		#prior : OmReference [ '20' ],		#self : OmReference [ '21' ]	},	#content : EpClassModification {		#oldClass : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Object',				#traitCompositionSource : '{}',				#definitionSource : 'Object subclass: #Snake\r\tinstanceVariableNames: \'cells color size health\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'snake_game\''			},			#name : #Snake,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Snake,						#isMetaSide : false					},					#name : #cells,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Snake,						#isMetaSide : false					},					#name : #color,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Snake,						#isMetaSide : false					},					#name : #size,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Snake,						#isMetaSide : false					},					#name : #health,					#parent : @7				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'Snake class\r\tinstanceVariableNames: \'\''				},				#name : #'Snake class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #Snake,					#isMetaSide : false				},				#parent : @7,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #snake_game,			#package : #snake_game,			#sharedPools : OrderedCollection [ ]		},		#newClass : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Object',				#traitCompositionSource : '{}',				#definitionSource : 'Object subclass: #Snake\r\tinstanceVariableNames: \'cells color snakeSize health\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'snake_game\''			},			#name : #Snake,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Snake,						#isMetaSide : false					},					#name : #cells,					#parent : @29				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Snake,						#isMetaSide : false					},					#name : #color,					#parent : @29				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Snake,						#isMetaSide : false					},					#name : #snakeSize,					#parent : @29				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Snake,						#isMetaSide : false					},					#name : #health,					#parent : @29				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'Snake class\r\tinstanceVariableNames: \'\''				},				#name : #'Snake class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @29			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #Snake,					#isMetaSide : false				},				#parent : @29,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #snake_game,			#package : #snake_game,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'p',		#time : DateAndTime [ '2017-06-25T13:03:01.345286+02:00' ],		#prior : OmReference [ '21' ],		#self : OmReference [ '22' ]	},	#content : EpGenericRefactoring {		#storeString : '(RBCreateAccessorsForVariableRefactoring variable: #snakeSize class: Snake classVariable: false)'	}}OmEntry {	#tags : {		#author : 'p',		#prior : OmReference [ '22' ],		#self : OmReference [ '23' ],		#time : DateAndTime [ '2017-06-25T13:03:01.363286+02:00' ],		#trigger : @3	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Snake,				#isMetaSide : false			},			#name : #snakeSize,			#protocol : #accessing,			#sourceCode : 'snakeSize\r\t^ snakeSize',			#stamp : 'p 6/25/2017 13:03',			#package : #snake_game		}	}}OmEntry {	#tags : {		#author : 'p',		#prior : OmReference [ '23' ],		#self : OmReference [ '24' ],		#time : DateAndTime [ '2017-06-25T13:03:01.372286+02:00' ],		#trigger : OmReference [ '22' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Snake,				#isMetaSide : false			},			#name : #'snakeSize:',			#protocol : #accessing,			#sourceCode : 'snakeSize: anObject\r\tsnakeSize := anObject',			#stamp : 'p 6/25/2017 13:03',			#package : #snake_game		}	}}OmEntry {	#tags : {		#author : 'p',		#time : DateAndTime [ '2017-06-25T13:04:33.804286+02:00' ],		#prior : OmReference [ '24' ],		#self : OmReference [ '25' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #SnakeModel,				#isMetaSide : false			},			#name : #initialize,			#protocol : #initialize,			#sourceCode : 'initialize\r\tsuper initialize.\r\tblueDirection := #south.\r\tredDirection := #north.\r\t"blueCells := OrderedCollection new.\r\tredCells := OrderedCollection new."\r\tblueSnake := Snake new.\r\tredSnake := Snake new.\r\t\r\tblueSnake snakeSize: 4.\r\tblueSnake cells: OrderedCollection new.\r\tblueSnake color: Color blue.\r\tblueSnake health: 10.\r\t\r\tredSnake snakeSize: 4.\r\tredSnake cells: OrderedCollection new.\r\tredSnake color: Color red.\r\tredSnake health: 10.\r\t\t\r\ttimer := 600.\r\trandom := Random new.\r\tartifactCells := OrderedCollection new.',			#stamp : 'p 6/25/2017 13:02',			#package : #snake_game		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #SnakeModel,				#isMetaSide : false			},			#name : #initialize,			#protocol : #initialize,			#sourceCode : 'initialize\r\tsuper initialize.\r\tblueDirection := #south.\r\tredDirection := #north.\r\t"blueCells := OrderedCollection new.\r\tredCells := OrderedCollection new."\r\tblueSnake := Snake new.\r\tredSnake := Snake new.\r\t\r\tblueSnake snakeSize: 4.\r\tblueSnake cells: OrderedCollection new.\r\tblueSnake color: Color blue.\r\tblueSnake health: 10.\r\t\r\tredSnake snakeSize: 4.\r\tredSnake cells: OrderedCollection new.\r\tredSnake color: Color red.\r\tredSnake health: 10.\r\t\t\r\ttimer := 30.\r\trandom := Random new.\r\tartifactCells := OrderedCollection new.',			#stamp : 'p 6/25/2017 13:04',			#package : #snake_game		}	}}OmEntry {	#tags : {		#author : 'p',		#time : DateAndTime [ '2017-06-25T13:04:51.726286+02:00' ],		#prior : OmReference [ '25' ],		#self : OmReference [ '26' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #SnakeModel,				#isMetaSide : false			},			#name : #initialize,			#protocol : #initialize,			#sourceCode : 'initialize\r\tsuper initialize.\r\tblueDirection := #south.\r\tredDirection := #north.\r\t"blueCells := OrderedCollection new.\r\tredCells := OrderedCollection new."\r\tblueSnake := Snake new.\r\tredSnake := Snake new.\r\t\r\tblueSnake snakeSize: 4.\r\tblueSnake cells: OrderedCollection new.\r\tblueSnake color: Color blue.\r\tblueSnake health: 10.\r\t\r\tredSnake snakeSize: 4.\r\tredSnake cells: OrderedCollection new.\r\tredSnake color: Color red.\r\tredSnake health: 10.\r\t\t\r\ttimer := 30.\r\trandom := Random new.\r\tartifactCells := OrderedCollection new.',			#stamp : 'p 6/25/2017 13:04',			#package : #snake_game		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #SnakeModel,				#isMetaSide : false			},			#name : #initialize,			#protocol : #initialize,			#sourceCode : 'initialize\r\tsuper initialize.\r\tblueDirection := #south.\r\tredDirection := #north.\r\t"blueCells := OrderedCollection new.\r\tredCells := OrderedCollection new."\r\tblueSnake := Snake new.\r\tredSnake := Snake new.\r\t\r\tblueSnake snakeSize: 4.\r\tblueSnake cells: OrderedCollection new.\r\tblueSnake color: Color blue.\r\tblueSnake health: 10.\r\t\r\tredSnake snakeSize: 4.\r\tredSnake cells: OrderedCollection new.\r\tredSnake color: Color red.\r\tredSnake health: 10.\r\t\t\r\ttimer := 600.\r\trandom := Random new.\r\tartifactCells := OrderedCollection new.',			#stamp : 'p 6/25/2017 13:04',			#package : #snake_game		}	}}OmEntry {	#tags : {		#author : 'p',		#time : DateAndTime [ '2017-06-25T13:08:59.196286+02:00' ],		#prior : OmReference [ '26' ],		#self : OmReference [ '27' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #SnakeCell,				#isMetaSide : false			},			#name : #'setLabel:',			#protocol : #accessing,			#sourceCode : 'setLabel: symbol\r\tself label: symbol.\r\tself extent: 20@20. "setting label changes extent --> reset extent"',			#stamp : 'p 6/24/2017 20:32',			#package : #snake_game		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #SnakeCell,				#isMetaSide : false			},			#name : #'setLabel:',			#protocol : #accessing,			#sourceCode : 'setLabel: symbol\r\t"(symbol = \'h\' | symbol = \'s\')\r\t\tifTrue: [ se ]."\r\tself label: symbol.\r\tself extent: 20@20. "setting label changes extent --> reset extent"',			#stamp : 'p 6/25/2017 13:08',			#package : #snake_game		}	}}OmEntry {	#tags : {		#author : 'p',		#time : DateAndTime [ '2017-06-25T13:09:08.518286+02:00' ],		#prior : OmReference [ '27' ],		#self : OmReference [ '28' ]	},	#content : EpClassModification {		#oldClass : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'SimpleButtonMorph',				#traitCompositionSource : '{}',				#definitionSource : 'SimpleButtonMorph subclass: #SnakeCell\r\tinstanceVariableNames: \'parent row column artifact\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'snake_game\''			},			#name : #SnakeCell,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #SnakeCell,						#isMetaSide : false					},					#name : #parent,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #SnakeCell,						#isMetaSide : false					},					#name : #row,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #SnakeCell,						#isMetaSide : false					},					#name : #column,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #SnakeCell,						#isMetaSide : false					},					#name : #artifact,					#parent : @7				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'SnakeCell class\r\tinstanceVariableNames: \'\''				},				#name : #'SnakeCell class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #SnakeCell,					#isMetaSide : false				},				#parent : @7,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #snake_game,			#package : #snake_game,			#sharedPools : OrderedCollection [ ]		},		#newClass : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'SimpleButtonMorph',				#traitCompositionSource : '{}',				#definitionSource : 'SimpleButtonMorph subclass: #SnakeCell\r\tinstanceVariableNames: \'parent row column artifact\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'snake_game\''			},			#name : #SnakeCell,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #SnakeCell,						#isMetaSide : false					},					#name : #parent,					#parent : @29				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #SnakeCell,						#isMetaSide : false					},					#name : #row,					#parent : @29				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #SnakeCell,						#isMetaSide : false					},					#name : #column,					#parent : @29				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #SnakeCell,						#isMetaSide : false					},					#name : #artifact,					#parent : @29				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'SnakeCell class\r\tinstanceVariableNames: \'\''				},				#name : #'SnakeCell class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @29			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #SnakeCell,					#isMetaSide : false				},				#parent : @29,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #snake_game,			#package : #snake_game,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'p',		#time : DateAndTime [ '2017-06-25T13:09:08.697286+02:00' ],		#prior : OmReference [ '28' ],		#self : OmReference [ '29' ]	},	#content : EpClassModification {		#oldClass : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'SimpleButtonMorph',				#traitCompositionSource : '{}',				#definitionSource : 'SimpleButtonMorph subclass: #SnakeCell\r\tinstanceVariableNames: \'parent row column artifact\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'snake_game\''			},			#name : #SnakeCell,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #SnakeCell,						#isMetaSide : false					},					#name : #parent,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #SnakeCell,						#isMetaSide : false					},					#name : #row,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #SnakeCell,						#isMetaSide : false					},					#name : #column,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #SnakeCell,						#isMetaSide : false					},					#name : #artifact,					#parent : @7				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'SnakeCell class\r\tinstanceVariableNames: \'\''				},				#name : #'SnakeCell class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #SnakeCell,					#isMetaSide : false				},				#parent : @7,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #snake_game,			#package : #snake_game,			#sharedPools : OrderedCollection [ ]		},		#newClass : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'TextMorph',				#traitCompositionSource : '{}',				#definitionSource : 'TextMorph subclass: #SnakeCell\r\tinstanceVariableNames: \'parent row column artifact\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'snake_game\''			},			#name : #SnakeCell,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #SnakeCell,						#isMetaSide : false					},					#name : #parent,					#parent : @29				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #SnakeCell,						#isMetaSide : false					},					#name : #row,					#parent : @29				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #SnakeCell,						#isMetaSide : false					},					#name : #column,					#parent : @29				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #SnakeCell,						#isMetaSide : false					},					#name : #artifact,					#parent : @29				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'SnakeCell class\r\tinstanceVariableNames: \'\''				},				#name : #'SnakeCell class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @29			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #SnakeCell,					#isMetaSide : false				},				#parent : @29,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #snake_game,			#package : #snake_game,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'p',		#time : DateAndTime [ '2017-06-25T13:09:41.009286+02:00' ],		#prior : OmReference [ '29' ],		#self : OmReference [ '30' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'Manifestsnakegame class',				#isMetaSide : true			},			#name : #ruleGRVariableAssignedLiteralRuleV1FalsePositive,			#protocol : #code-critics,			#sourceCode : 'ruleGRVariableAssignedLiteralRuleV1FalsePositive\r\t^ #()',			#stamp : 'p 6/25/2017 13:09',			#package : #snake_game		}	}}OmEntry {	#tags : {		#author : 'p',		#time : DateAndTime [ '2017-06-25T13:09:41.022286+02:00' ],		#prior : OmReference [ '30' ],		#self : OmReference [ '31' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'Manifestsnakegame class',				#isMetaSide : true			},			#name : #ruleGRVariableAssignedLiteralRuleV1FalsePositive,			#protocol : #code-critics,			#sourceCode : 'ruleGRVariableAssignedLiteralRuleV1FalsePositive\r\t^ #()',			#stamp : 'p 6/25/2017 13:09',			#package : #snake_game		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'Manifestsnakegame class',				#isMetaSide : true			},			#name : #ruleGRVariableAssignedLiteralRuleV1FalsePositive,			#protocol : #code-critics,			#sourceCode : 'ruleGRVariableAssignedLiteralRuleV1FalsePositive\r\t^ #(#(#(#RGPackage #(#snake_game)) #\'2017-06-25T13:09:41.015286+02:00\') )',			#stamp : 'p 6/25/2017 13:09',			#package : #snake_game		}	}}OmEntry {	#tags : {		#author : 'p',		#time : DateAndTime [ '2017-06-25T13:10:31.341286+02:00' ],		#prior : OmReference [ '31' ],		#self : OmReference [ '32' ]	},	#content : EpClassModification {		#oldClass : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'TextMorph',				#traitCompositionSource : '{}',				#definitionSource : 'TextMorph subclass: #SnakeCell\r\tinstanceVariableNames: \'parent row column artifact\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'snake_game\''			},			#name : #SnakeCell,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #SnakeCell,						#isMetaSide : false					},					#name : #parent,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #SnakeCell,						#isMetaSide : false					},					#name : #row,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #SnakeCell,						#isMetaSide : false					},					#name : #column,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #SnakeCell,						#isMetaSide : false					},					#name : #artifact,					#parent : @7				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'SnakeCell class\r\tinstanceVariableNames: \'\''				},				#name : #'SnakeCell class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #SnakeCell,					#isMetaSide : false				},				#parent : @7,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #snake_game,			#package : #snake_game,			#sharedPools : OrderedCollection [ ]		},		#newClass : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'TextMorph',				#traitCompositionSource : '{}',				#definitionSource : 'TextMorph subclass: #SnakeCell\r\tinstanceVariableNames: \'parent row column artifact\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'snake_game\''			},			#name : #SnakeCell,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #SnakeCell,						#isMetaSide : false					},					#name : #parent,					#parent : @29				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #SnakeCell,						#isMetaSide : false					},					#name : #row,					#parent : @29				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #SnakeCell,						#isMetaSide : false					},					#name : #column,					#parent : @29				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #SnakeCell,						#isMetaSide : false					},					#name : #artifact,					#parent : @29				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'SnakeCell class\r\tinstanceVariableNames: \'\''				},				#name : #'SnakeCell class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @29			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #SnakeCell,					#isMetaSide : false				},				#parent : @29,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #snake_game,			#package : #snake_game,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'p',		#time : DateAndTime [ '2017-06-25T13:10:31.520286+02:00' ],		#prior : OmReference [ '32' ],		#self : OmReference [ '33' ]	},	#content : EpClassModification {		#oldClass : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'TextMorph',				#traitCompositionSource : '{}',				#definitionSource : 'TextMorph subclass: #SnakeCell\r\tinstanceVariableNames: \'parent row column artifact\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'snake_game\''			},			#name : #SnakeCell,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #SnakeCell,						#isMetaSide : false					},					#name : #parent,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #SnakeCell,						#isMetaSide : false					},					#name : #row,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #SnakeCell,						#isMetaSide : false					},					#name : #column,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #SnakeCell,						#isMetaSide : false					},					#name : #artifact,					#parent : @7				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'SnakeCell class\r\tinstanceVariableNames: \'\''				},				#name : #'SnakeCell class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #SnakeCell,					#isMetaSide : false				},				#parent : @7,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #snake_game,			#package : #snake_game,			#sharedPools : OrderedCollection [ ]		},		#newClass : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Morph',				#traitCompositionSource : '{}',				#definitionSource : 'Morph subclass: #SnakeCell\r\tinstanceVariableNames: \'parent row column artifact\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'snake_game\''			},			#name : #SnakeCell,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #SnakeCell,						#isMetaSide : false					},					#name : #parent,					#parent : @29				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #SnakeCell,						#isMetaSide : false					},					#name : #row,					#parent : @29				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #SnakeCell,						#isMetaSide : false					},					#name : #column,					#parent : @29				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #SnakeCell,						#isMetaSide : false					},					#name : #artifact,					#parent : @29				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'SnakeCell class\r\tinstanceVariableNames: \'\''				},				#name : #'SnakeCell class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @29			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #SnakeCell,					#isMetaSide : false				},				#parent : @29,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #snake_game,			#package : #snake_game,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'p',		#time : DateAndTime [ '2017-06-25T13:10:46.600286+02:00' ],		#prior : OmReference [ '33' ],		#self : OmReference [ '34' ]	},	#content : EpClassModification {		#oldClass : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Morph',				#traitCompositionSource : '{}',				#definitionSource : 'Morph subclass: #SnakeCell\r\tinstanceVariableNames: \'parent row column artifact\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'snake_game\''			},			#name : #SnakeCell,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #SnakeCell,						#isMetaSide : false					},					#name : #parent,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #SnakeCell,						#isMetaSide : false					},					#name : #row,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #SnakeCell,						#isMetaSide : false					},					#name : #column,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #SnakeCell,						#isMetaSide : false					},					#name : #artifact,					#parent : @7				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'SnakeCell class\r\tinstanceVariableNames: \'\''				},				#name : #'SnakeCell class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #SnakeCell,					#isMetaSide : false				},				#parent : @7,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #snake_game,			#package : #snake_game,			#sharedPools : OrderedCollection [ ]		},		#newClass : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Morph',				#traitCompositionSource : '{}',				#definitionSource : 'Morph subclass: #SnakeCell\r\tinstanceVariableNames: \'parent row column artifact\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'snake_game\''			},			#name : #SnakeCell,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #SnakeCell,						#isMetaSide : false					},					#name : #parent,					#parent : @29				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #SnakeCell,						#isMetaSide : false					},					#name : #row,					#parent : @29				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #SnakeCell,						#isMetaSide : false					},					#name : #column,					#parent : @29				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #SnakeCell,						#isMetaSide : false					},					#name : #artifact,					#parent : @29				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'SnakeCell class\r\tinstanceVariableNames: \'\''				},				#name : #'SnakeCell class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @29			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #SnakeCell,					#isMetaSide : false				},				#parent : @29,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #snake_game,			#package : #snake_game,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'p',		#time : DateAndTime [ '2017-06-25T13:10:46.775286+02:00' ],		#prior : OmReference [ '34' ],		#self : OmReference [ '35' ]	},	#content : EpClassModification {		#oldClass : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Morph',				#traitCompositionSource : '{}',				#definitionSource : 'Morph subclass: #SnakeCell\r\tinstanceVariableNames: \'parent row column artifact\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'snake_game\''			},			#name : #SnakeCell,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #SnakeCell,						#isMetaSide : false					},					#name : #parent,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #SnakeCell,						#isMetaSide : false					},					#name : #row,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #SnakeCell,						#isMetaSide : false					},					#name : #column,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #SnakeCell,						#isMetaSide : false					},					#name : #artifact,					#parent : @7				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'SnakeCell class\r\tinstanceVariableNames: \'\''				},				#name : #'SnakeCell class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #SnakeCell,					#isMetaSide : false				},				#parent : @7,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #snake_game,			#package : #snake_game,			#sharedPools : OrderedCollection [ ]		},		#newClass : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'SimpleBalloonMorph',				#traitCompositionSource : '{}',				#definitionSource : 'SimpleBalloonMorph subclass: #SnakeCell\r\tinstanceVariableNames: \'parent row column artifact\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'snake_game\''			},			#name : #SnakeCell,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #SnakeCell,						#isMetaSide : false					},					#name : #parent,					#parent : @29				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #SnakeCell,						#isMetaSide : false					},					#name : #row,					#parent : @29				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #SnakeCell,						#isMetaSide : false					},					#name : #column,					#parent : @29				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #SnakeCell,						#isMetaSide : false					},					#name : #artifact,					#parent : @29				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'SnakeCell class\r\tinstanceVariableNames: \'\''				},				#name : #'SnakeCell class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @29			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #SnakeCell,					#isMetaSide : false				},				#parent : @29,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #snake_game,			#package : #snake_game,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'p',		#time : DateAndTime [ '2017-06-25T13:10:56.413286+02:00' ],		#prior : OmReference [ '35' ],		#self : OmReference [ '36' ]	},	#content : EpClassModification {		#oldClass : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'SimpleBalloonMorph',				#traitCompositionSource : '{}',				#definitionSource : 'SimpleBalloonMorph subclass: #SnakeCell\r\tinstanceVariableNames: \'parent row column artifact\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'snake_game\''			},			#name : #SnakeCell,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #SnakeCell,						#isMetaSide : false					},					#name : #parent,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #SnakeCell,						#isMetaSide : false					},					#name : #row,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #SnakeCell,						#isMetaSide : false					},					#name : #column,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #SnakeCell,						#isMetaSide : false					},					#name : #artifact,					#parent : @7				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'SnakeCell class\r\tinstanceVariableNames: \'\''				},				#name : #'SnakeCell class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #SnakeCell,					#isMetaSide : false				},				#parent : @7,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #snake_game,			#package : #snake_game,			#sharedPools : OrderedCollection [ ]		},		#newClass : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'SimpleBalloonMorph',				#traitCompositionSource : '{}',				#definitionSource : 'SimpleBalloonMorph subclass: #SnakeCell\r\tinstanceVariableNames: \'parent row column artifact\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'snake_game\''			},			#name : #SnakeCell,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #SnakeCell,						#isMetaSide : false					},					#name : #parent,					#parent : @29				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #SnakeCell,						#isMetaSide : false					},					#name : #row,					#parent : @29				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #SnakeCell,						#isMetaSide : false					},					#name : #column,					#parent : @29				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #SnakeCell,						#isMetaSide : false					},					#name : #artifact,					#parent : @29				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'SnakeCell class\r\tinstanceVariableNames: \'\''				},				#name : #'SnakeCell class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @29			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #SnakeCell,					#isMetaSide : false				},				#parent : @29,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #snake_game,			#package : #snake_game,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'p',		#time : DateAndTime [ '2017-06-25T13:10:56.587286+02:00' ],		#prior : OmReference [ '36' ],		#self : OmReference [ '37' ]	},	#content : EpClassModification {		#oldClass : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'SimpleBalloonMorph',				#traitCompositionSource : '{}',				#definitionSource : 'SimpleBalloonMorph subclass: #SnakeCell\r\tinstanceVariableNames: \'parent row column artifact\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'snake_game\''			},			#name : #SnakeCell,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #SnakeCell,						#isMetaSide : false					},					#name : #parent,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #SnakeCell,						#isMetaSide : false					},					#name : #row,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #SnakeCell,						#isMetaSide : false					},					#name : #column,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #SnakeCell,						#isMetaSide : false					},					#name : #artifact,					#parent : @7				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'SnakeCell class\r\tinstanceVariableNames: \'\''				},				#name : #'SnakeCell class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #SnakeCell,					#isMetaSide : false				},				#parent : @7,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #snake_game,			#package : #snake_game,			#sharedPools : OrderedCollection [ ]		},		#newClass : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'SimpleButtonMorph',				#traitCompositionSource : '{}',				#definitionSource : 'SimpleButtonMorph subclass: #SnakeCell\r\tinstanceVariableNames: \'parent row column artifact\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'snake_game\''			},			#name : #SnakeCell,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #SnakeCell,						#isMetaSide : false					},					#name : #parent,					#parent : @29				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #SnakeCell,						#isMetaSide : false					},					#name : #row,					#parent : @29				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #SnakeCell,						#isMetaSide : false					},					#name : #column,					#parent : @29				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #SnakeCell,						#isMetaSide : false					},					#name : #artifact,					#parent : @29				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'SnakeCell class\r\tinstanceVariableNames: \'\''				},				#name : #'SnakeCell class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @29			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #SnakeCell,					#isMetaSide : false				},				#parent : @29,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #snake_game,			#package : #snake_game,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'p',		#time : DateAndTime [ '2017-06-25T13:14:32.612286+02:00' ],		#prior : OmReference [ '37' ],		#self : OmReference [ '38' ]	},	#content : EpClassModification {		#oldClass : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'SimpleButtonMorph',				#traitCompositionSource : '{}',				#definitionSource : 'SimpleButtonMorph subclass: #SnakeCell\r\tinstanceVariableNames: \'parent row column artifact\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'snake_game\''			},			#name : #SnakeCell,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #SnakeCell,						#isMetaSide : false					},					#name : #parent,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #SnakeCell,						#isMetaSide : false					},					#name : #row,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #SnakeCell,						#isMetaSide : false					},					#name : #column,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #SnakeCell,						#isMetaSide : false					},					#name : #artifact,					#parent : @7				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'SnakeCell class\r\tinstanceVariableNames: \'\''				},				#name : #'SnakeCell class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #SnakeCell,					#isMetaSide : false				},				#parent : @7,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #snake_game,			#package : #snake_game,			#sharedPools : OrderedCollection [ ]		},		#newClass : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'SimpleButtonMorph',				#traitCompositionSource : '{}',				#definitionSource : 'SimpleButtonMorph subclass: #SnakeCell\r\tinstanceVariableNames: \'parent row column artifact\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'snake_game\''			},			#name : #SnakeCell,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #SnakeCell,						#isMetaSide : false					},					#name : #parent,					#parent : @29				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #SnakeCell,						#isMetaSide : false					},					#name : #row,					#parent : @29				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #SnakeCell,						#isMetaSide : false					},					#name : #column,					#parent : @29				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #SnakeCell,						#isMetaSide : false					},					#name : #artifact,					#parent : @29				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'SnakeCell class\r\tinstanceVariableNames: \'\''				},				#name : #'SnakeCell class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @29			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #SnakeCell,					#isMetaSide : false				},				#parent : @29,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #snake_game,			#package : #snake_game,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'p',		#time : DateAndTime [ '2017-06-25T13:14:32.782286+02:00' ],		#prior : OmReference [ '38' ],		#self : OmReference [ '39' ]	},	#content : EpClassModification {		#oldClass : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'SimpleButtonMorph',				#traitCompositionSource : '{}',				#definitionSource : 'SimpleButtonMorph subclass: #SnakeCell\r\tinstanceVariableNames: \'parent row column artifact\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'snake_game\''			},			#name : #SnakeCell,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #SnakeCell,						#isMetaSide : false					},					#name : #parent,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #SnakeCell,						#isMetaSide : false					},					#name : #row,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #SnakeCell,						#isMetaSide : false					},					#name : #column,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #SnakeCell,						#isMetaSide : false					},					#name : #artifact,					#parent : @7				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'SnakeCell class\r\tinstanceVariableNames: \'\''				},				#name : #'SnakeCell class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #SnakeCell,					#isMetaSide : false				},				#parent : @7,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #snake_game,			#package : #snake_game,			#sharedPools : OrderedCollection [ ]		},		#newClass : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Morph',				#traitCompositionSource : '{}',				#definitionSource : 'Morph subclass: #SnakeCell\r\tinstanceVariableNames: \'parent row column artifact\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'snake_game\''			},			#name : #SnakeCell,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #SnakeCell,						#isMetaSide : false					},					#name : #parent,					#parent : @29				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #SnakeCell,						#isMetaSide : false					},					#name : #row,					#parent : @29				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #SnakeCell,						#isMetaSide : false					},					#name : #column,					#parent : @29				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #SnakeCell,						#isMetaSide : false					},					#name : #artifact,					#parent : @29				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'SnakeCell class\r\tinstanceVariableNames: \'\''				},				#name : #'SnakeCell class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @29			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #SnakeCell,					#isMetaSide : false				},				#parent : @29,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #snake_game,			#package : #snake_game,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'p',		#time : DateAndTime [ '2017-06-25T13:17:48.333286+02:00' ],		#prior : OmReference [ '39' ],		#self : OmReference [ '40' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #SnakeCell,				#isMetaSide : false			},			#name : #initialize,			#protocol : #initialize,			#sourceCode : 'initialize\r\tsuper initialize.\r\tself label: \'\'.\r\tself extent: 20@20.\r\tself color: Color lightGray.\r\tself artifact: nil.\r\t^self.',			#stamp : 'p 6/25/2017 13:10',			#package : #snake_game		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #SnakeCell,				#isMetaSide : false			},			#name : #initialize,			#protocol : #initialize,			#sourceCode : 'initialize\r\tsuper initialize.\r\tself setLabel: \'\'.\r\t"self label: \'\'."\r\tself extent: 20@20.\r\tself color: Color lightGray.\r\tself artifact: nil.\r\t^self.',			#stamp : 'p 6/25/2017 13:17',			#package : #snake_game		}	}}OmEntry {	#tags : {		#author : 'p',		#time : DateAndTime [ '2017-06-25T13:23:03.586286+02:00' ],		#prior : OmReference [ '40' ],		#self : OmReference [ '41' ]	},	#content : EpClassModification {		#oldClass : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Morph',				#traitCompositionSource : '{}',				#definitionSource : 'Morph subclass: #SnakeCell\r\tinstanceVariableNames: \'parent row column artifact\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'snake_game\''			},			#name : #SnakeCell,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #SnakeCell,						#isMetaSide : false					},					#name : #parent,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #SnakeCell,						#isMetaSide : false					},					#name : #row,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #SnakeCell,						#isMetaSide : false					},					#name : #column,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #SnakeCell,						#isMetaSide : false					},					#name : #artifact,					#parent : @7				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'SnakeCell class\r\tinstanceVariableNames: \'\''				},				#name : #'SnakeCell class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #SnakeCell,					#isMetaSide : false				},				#parent : @7,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #snake_game,			#package : #snake_game,			#sharedPools : OrderedCollection [ ]		},		#newClass : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Morph',				#traitCompositionSource : '{}',				#definitionSource : 'Morph subclass: #SnakeCell\r\tinstanceVariableNames: \'parent row column artifact\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'snake_game\''			},			#name : #SnakeCell,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #SnakeCell,						#isMetaSide : false					},					#name : #parent,					#parent : @29				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #SnakeCell,						#isMetaSide : false					},					#name : #row,					#parent : @29				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #SnakeCell,						#isMetaSide : false					},					#name : #column,					#parent : @29				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #SnakeCell,						#isMetaSide : false					},					#name : #artifact,					#parent : @29				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'SnakeCell class\r\tinstanceVariableNames: \'\''				},				#name : #'SnakeCell class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @29			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #SnakeCell,					#isMetaSide : false				},				#parent : @29,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #snake_game,			#package : #snake_game,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'p',		#time : DateAndTime [ '2017-06-25T13:23:03.760286+02:00' ],		#prior : OmReference [ '41' ],		#self : OmReference [ '42' ]	},	#content : EpClassModification {		#oldClass : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Morph',				#traitCompositionSource : '{}',				#definitionSource : 'Morph subclass: #SnakeCell\r\tinstanceVariableNames: \'parent row column artifact\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'snake_game\''			},			#name : #SnakeCell,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #SnakeCell,						#isMetaSide : false					},					#name : #parent,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #SnakeCell,						#isMetaSide : false					},					#name : #row,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #SnakeCell,						#isMetaSide : false					},					#name : #column,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #SnakeCell,						#isMetaSide : false					},					#name : #artifact,					#parent : @7				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'SnakeCell class\r\tinstanceVariableNames: \'\''				},				#name : #'SnakeCell class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #SnakeCell,					#isMetaSide : false				},				#parent : @7,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #snake_game,			#package : #snake_game,			#sharedPools : OrderedCollection [ ]		},		#newClass : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'StringMorph',				#traitCompositionSource : '{}',				#definitionSource : 'StringMorph subclass: #SnakeCell\r\tinstanceVariableNames: \'parent row column artifact\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'snake_game\''			},			#name : #SnakeCell,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #SnakeCell,						#isMetaSide : false					},					#name : #parent,					#parent : @29				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #SnakeCell,						#isMetaSide : false					},					#name : #row,					#parent : @29				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #SnakeCell,						#isMetaSide : false					},					#name : #column,					#parent : @29				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #SnakeCell,						#isMetaSide : false					},					#name : #artifact,					#parent : @29				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'SnakeCell class\r\tinstanceVariableNames: \'\''				},				#name : #'SnakeCell class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @29			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #SnakeCell,					#isMetaSide : false				},				#parent : @29,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #snake_game,			#package : #snake_game,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'p',		#time : DateAndTime [ '2017-06-25T13:23:33.328286+02:00' ],		#prior : OmReference [ '42' ],		#self : OmReference [ '43' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #SnakeCell,				#isMetaSide : false			},			#name : #initialize,			#protocol : #initialize,			#sourceCode : 'initialize\r\tsuper initialize.\r\tself setLabel: \'\'.\r\t"self label: \'\'."\r\tself extent: 20@20.\r\tself color: Color lightGray.\r\tself artifact: nil.\r\t^self.',			#stamp : 'p 6/25/2017 13:17',			#package : #snake_game		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #SnakeCell,				#isMetaSide : false			},			#name : #initialize,			#protocol : #initialize,			#sourceCode : 'initialize\r\tsuper initialize.\r\tself contents: \'\'.\r\t"self label: \'\'."\r\tself extent: 20@20.\r\tself color: Color lightGray.\r\tself artifact: nil.\r\t^self.',			#stamp : 'p 6/25/2017 13:23',			#package : #snake_game		}	}}OmEntry {	#tags : {		#author : 'p',		#time : DateAndTime [ '2017-06-25T13:24:15.992286+02:00' ],		#prior : OmReference [ '43' ],		#self : OmReference [ '44' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #SnakeCell,				#isMetaSide : false			},			#name : #'artifact:',			#protocol : #accessing,			#sourceCode : 'artifact: input\r\tinput isNil\r\t\tifTrue: [\r\t\t\tself setLabel: \'\'.\r\t\t\tartifact := nil.\r\t\t]\r\t\tifFalse: [\r\t\t\tartifact := input.\r\t\t\tself setLabel: artifact symbol.\r\t\t].\r',			#stamp : 'p 6/24/2017 22:16',			#package : #snake_game		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #SnakeCell,				#isMetaSide : false			},			#name : #'artifact:',			#protocol : #accessing,			#sourceCode : 'artifact: input\r\tinput isNil\r\t\tifTrue: [\r\t\t\tself contents: \'\'.\r\t\t\tartifact := nil.\r\t\t]\r\t\tifFalse: [\r\t\t\tartifact := input.\r\t\t\tself contents: artifact symbol.\r\t\t].\r',			#stamp : 'p 6/25/2017 13:24',			#package : #snake_game		}	}}OmEntry {	#tags : {		#author : 'p',		#time : DateAndTime [ '2017-06-25T13:24:30.622286+02:00' ],		#prior : OmReference [ '44' ],		#self : OmReference [ '45' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #SnakeCell,				#isMetaSide : false			},			#name : #initialize,			#protocol : #initialize,			#sourceCode : 'initialize\r\tsuper initialize.\r\tself contents: \'\'.\r\t"self label: \'\'."\r\tself extent: 20@20.\r\tself color: Color lightGray.\r\tself artifact: nil.\r\t^self.',			#stamp : 'p 6/25/2017 13:23',			#package : #snake_game		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #SnakeCell,				#isMetaSide : false			},			#name : #initialize,			#protocol : #initialize,			#sourceCode : 'initialize\r\tsuper initialize.\r\t"self label: \'\'."\r\tself extent: 20@20.\r\tself color: Color lightGray.\r\tself artifact: nil.\r\t^self.',			#stamp : 'p 6/25/2017 13:24',			#package : #snake_game		}	}}OmEntry {	#tags : {		#author : 'p',		#time : DateAndTime [ '2017-06-25T13:24:34.825286+02:00' ],		#prior : OmReference [ '45' ],		#self : OmReference [ '46' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #SnakeCell,				#isMetaSide : false			},			#name : #initialize,			#protocol : #initialize,			#sourceCode : 'initialize\r\tsuper initialize.\r\t"self label: \'\'."\r\tself extent: 20@20.\r\tself color: Color lightGray.\r\tself artifact: nil.\r\t^self.',			#stamp : 'p 6/25/2017 13:24',			#package : #snake_game		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #SnakeCell,				#isMetaSide : false			},			#name : #initialize,			#protocol : #initialize,			#sourceCode : 'initialize\r\tsuper initialize.\r\tself extent: 20@20.\r\tself color: Color lightGray.\r\tself artifact: nil.\r\t^self.',			#stamp : 'p 6/25/2017 13:24',			#package : #snake_game		}	}}OmEntry {	#tags : {		#author : 'p',		#time : DateAndTime [ '2017-06-25T13:25:12.970286+02:00' ],		#prior : OmReference [ '46' ],		#self : OmReference [ '47' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #SnakeCell,				#isMetaSide : false			},			#name : #'artifact:',			#protocol : #accessing,			#sourceCode : 'artifact: input\r\tinput isNil\r\t\tifTrue: [\r\t\t\tself contents: \'\'.\r\t\t\tartifact := nil.\r\t\t]\r\t\tifFalse: [\r\t\t\tartifact := input.\r\t\t\tself contents: artifact symbol.\r\t\t].\r',			#stamp : 'p 6/25/2017 13:24',			#package : #snake_game		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #SnakeCell,				#isMetaSide : false			},			#name : #'artifact:',			#protocol : #accessing,			#sourceCode : 'artifact: input\r\tinput isNil\r\t\tifTrue: [\r\t\t\tself setLabel: \'\'.\r\t\t\tartifact := nil.\r\t\t]\r\t\tifFalse: [\r\t\t\tartifact := input.\r\t\t\tself setLabel: artifact symbol.\r\t\t].\r',			#stamp : 'p 6/25/2017 13:25',			#package : #snake_game		}	}}OmEntry {	#tags : {		#author : 'p',		#time : DateAndTime [ '2017-06-25T13:25:20.276286+02:00' ],		#prior : OmReference [ '47' ],		#self : OmReference [ '48' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #SnakeCell,				#isMetaSide : false			},			#name : #'setLabel:',			#protocol : #accessing,			#sourceCode : 'setLabel: symbol\r\t"(symbol = \'h\' | symbol = \'s\')\r\t\tifTrue: [ se ]."\r\tself label: symbol.\r\tself extent: 20@20. "setting label changes extent --> reset extent"',			#stamp : 'p 6/25/2017 13:18',			#package : #snake_game		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #SnakeCell,				#isMetaSide : false			},			#name : #'setLabel:',			#protocol : #accessing,			#sourceCode : 'setLabel: symbol\r\t"(symbol = \'h\' | symbol = \'s\')\r\t\tifTrue: [ se ]."\r\tself contents: symbol.\r\tself extent: 20@20. "setting label changes extent --> reset extent"',			#stamp : 'p 6/25/2017 13:25',			#package : #snake_game		}	}}OmEntry {	#tags : {		#author : 'p',		#time : DateAndTime [ '2017-06-25T13:26:48.055286+02:00' ],		#prior : OmReference [ '48' ],		#self : OmReference [ '49' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #SnakeCell,				#isMetaSide : false			},			#name : #initialize,			#protocol : #initialize,			#sourceCode : 'initialize\r\tsuper initialize.\r\tself extent: 20@20.\r\tself color: Color lightGray.\r\tself artifact: nil.\r\t^self.',			#stamp : 'p 6/25/2017 13:24',			#package : #snake_game		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #SnakeCell,				#isMetaSide : false			},			#name : #initialize,			#protocol : #initialize,			#sourceCode : 'initialize\r\tsuper initialize.\r\tself extent: 20@20.\r\tself artifact: nil.\r\tself color: Color lightGray.\r\t^self.',			#stamp : 'p 6/25/2017 13:26',			#package : #snake_game		}	}}OmEntry {	#tags : {		#author : 'p',		#time : DateAndTime [ '2017-06-25T13:28:44.595286+02:00' ],		#prior : OmReference [ '49' ],		#self : OmReference [ '50' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'Manifestsnakegame class',				#isMetaSide : true			},			#name : #ruleRBInconsistentMethodClassificationRuleV1FalsePositive,			#protocol : #code-critics,			#sourceCode : 'ruleRBInconsistentMethodClassificationRuleV1FalsePositive\r\t^ #(#(#(#RGClassDefinition #(#SnakeGame)) #\'2017-06-21T19:55:19.866111+02:00\') #(#(#RGClassDefinition #(#KeyListener)) #\'2017-06-22T13:55:27.473248+02:00\') #(#(#RGClassDefinition #(#SnakeModel)) #\'2017-06-24T21:59:20.650237+02:00\') )',			#stamp : 'p 6/24/2017 21:59',			#package : #snake_game		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'Manifestsnakegame class',				#isMetaSide : true			},			#name : #ruleRBInconsistentMethodClassificationRuleV1FalsePositive,			#protocol : #code-critics,			#sourceCode : 'ruleRBInconsistentMethodClassificationRuleV1FalsePositive\r\t^ #(#(#(#RGClassDefinition #(#SnakeGame)) #\'2017-06-21T19:55:19.866111+02:00\') #(#(#RGClassDefinition #(#KeyListener)) #\'2017-06-22T13:55:27.473248+02:00\') #(#(#RGClassDefinition #(#SnakeModel)) #\'2017-06-24T21:59:20.650237+02:00\') #(#(#RGPackage #(#snake_game)) #\'2017-06-25T13:28:44.581286+02:00\') )',			#stamp : 'p 6/25/2017 13:28',			#package : #snake_game		}	}}OmEntry {	#tags : {		#author : 'p',		#time : DateAndTime [ '2017-06-25T13:29:35.256286+02:00' ],		#prior : OmReference [ '50' ],		#self : OmReference [ '51' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #SnakeCell,				#isMetaSide : false			},			#name : #initialize,			#protocol : #initialize,			#sourceCode : 'initialize\r\tsuper initialize.\r\tself extent: 20@20.\r\tself artifact: nil.\r\tself color: Color lightGray.\r\t^self.',			#stamp : 'p 6/25/2017 13:26',			#package : #snake_game		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #SnakeCell,				#isMetaSide : false			},			#name : #initialize,			#protocol : #initialize,			#sourceCode : 'initialize\r\tsuper initialize.\r\tself color: Color lightGray.\r\tself extent: 20@20.\r\tself artifact: nil.\r\t^self.',			#stamp : 'p 6/25/2017 13:29',			#package : #snake_game		}	}}OmEntry {	#tags : {		#author : 'p',		#time : DateAndTime [ '2017-06-25T13:29:46.426286+02:00' ],		#prior : OmReference [ '51' ],		#self : OmReference [ '52' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #SnakeCell,				#isMetaSide : false			},			#name : #initialize,			#protocol : #initialize,			#sourceCode : 'initialize\r\tsuper initialize.\r\tself color: Color lightGray.\r\tself extent: 20@20.\r\tself artifact: nil.\r\t^self.',			#stamp : 'p 6/25/2017 13:29',			#package : #snake_game		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #SnakeCell,				#isMetaSide : false			},			#name : #initialize,			#protocol : #initialize,			#sourceCode : 'initialize\r\tsuper initialize.\r\tself color: Color red.\r\tself extent: 20@20.\r\tself artifact: nil.\r\t^self.',			#stamp : 'p 6/25/2017 13:29',			#package : #snake_game		}	}}OmEntry {	#tags : {		#author : 'p',		#time : DateAndTime [ '2017-06-25T13:30:10.890286+02:00' ],		#prior : OmReference [ '52' ],		#self : OmReference [ '53' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #SnakeCell,				#isMetaSide : false			},			#name : #initialize,			#protocol : #initialize,			#sourceCode : 'initialize\r\tsuper initialize.\r\tself color: Color red.\r\tself extent: 20@20.\r\tself artifact: nil.\r\t^self.',			#stamp : 'p 6/25/2017 13:29',			#package : #snake_game		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #SnakeCell,				#isMetaSide : false			},			#name : #initialize,			#protocol : #initialize,			#sourceCode : 'initialize\r\tsuper initialize.\r\tself color: Color yellow.\r\tself extent: 20@20.\r\tself artifact: nil.\r\t^self.',			#stamp : 'p 6/25/2017 13:30',			#package : #snake_game		}	}}OmEntry {	#tags : {		#author : 'p',		#time : DateAndTime [ '2017-06-25T13:31:03.931286+02:00' ],		#prior : OmReference [ '53' ],		#self : OmReference [ '54' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #SnakeCell,				#isMetaSide : false			},			#name : #initialize,			#protocol : #initialize,			#sourceCode : 'initialize\r\tsuper initialize.\r\tself color: Color yellow.\r\tself extent: 20@20.\r\tself artifact: nil.\r\t^self.',			#stamp : 'p 6/25/2017 13:30',			#package : #snake_game		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #SnakeCell,				#isMetaSide : false			},			#name : #initialize,			#protocol : #initialize,			#sourceCode : 'initialize\r\tsuper initialize.\r\tself color: Color lightGray.\r\tself extent: 20@20.\r\tself artifact: nil.\r\t^self.',			#stamp : 'p 6/25/2017 13:31',			#package : #snake_game		}	}}OmEntry {	#tags : {		#author : 'p',		#time : DateAndTime [ '2017-06-25T13:31:13.382286+02:00' ],		#prior : OmReference [ '54' ],		#self : OmReference [ '55' ]	},	#content : EpClassModification {		#oldClass : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'StringMorph',				#traitCompositionSource : '{}',				#definitionSource : 'StringMorph subclass: #SnakeCell\r\tinstanceVariableNames: \'parent row column artifact\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'snake_game\''			},			#name : #SnakeCell,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #SnakeCell,						#isMetaSide : false					},					#name : #parent,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #SnakeCell,						#isMetaSide : false					},					#name : #row,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #SnakeCell,						#isMetaSide : false					},					#name : #column,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #SnakeCell,						#isMetaSide : false					},					#name : #artifact,					#parent : @7				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'SnakeCell class\r\tinstanceVariableNames: \'\''				},				#name : #'SnakeCell class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #SnakeCell,					#isMetaSide : false				},				#parent : @7,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #snake_game,			#package : #snake_game,			#sharedPools : OrderedCollection [ ]		},		#newClass : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'StringMorph',				#traitCompositionSource : '{}',				#definitionSource : 'StringMorph subclass: #SnakeCell\r\tinstanceVariableNames: \'parent row column artifact\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'snake_game\''			},			#name : #SnakeCell,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #SnakeCell,						#isMetaSide : false					},					#name : #parent,					#parent : @29				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #SnakeCell,						#isMetaSide : false					},					#name : #row,					#parent : @29				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #SnakeCell,						#isMetaSide : false					},					#name : #column,					#parent : @29				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #SnakeCell,						#isMetaSide : false					},					#name : #artifact,					#parent : @29				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'SnakeCell class\r\tinstanceVariableNames: \'\''				},				#name : #'SnakeCell class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @29			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #SnakeCell,					#isMetaSide : false				},				#parent : @29,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #snake_game,			#package : #snake_game,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'p',		#time : DateAndTime [ '2017-06-25T13:31:13.551286+02:00' ],		#prior : OmReference [ '55' ],		#self : OmReference [ '56' ]	},	#content : EpClassModification {		#oldClass : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'StringMorph',				#traitCompositionSource : '{}',				#definitionSource : 'StringMorph subclass: #SnakeCell\r\tinstanceVariableNames: \'parent row column artifact\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'snake_game\''			},			#name : #SnakeCell,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #SnakeCell,						#isMetaSide : false					},					#name : #parent,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #SnakeCell,						#isMetaSide : false					},					#name : #row,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #SnakeCell,						#isMetaSide : false					},					#name : #column,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #SnakeCell,						#isMetaSide : false					},					#name : #artifact,					#parent : @7				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'SnakeCell class\r\tinstanceVariableNames: \'\''				},				#name : #'SnakeCell class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #SnakeCell,					#isMetaSide : false				},				#parent : @7,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #snake_game,			#package : #snake_game,			#sharedPools : OrderedCollection [ ]		},		#newClass : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'SimpleButtonMorph',				#traitCompositionSource : '{}',				#definitionSource : 'SimpleButtonMorph subclass: #SnakeCell\r\tinstanceVariableNames: \'parent row column artifact\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'snake_game\''			},			#name : #SnakeCell,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #SnakeCell,						#isMetaSide : false					},					#name : #parent,					#parent : @29				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #SnakeCell,						#isMetaSide : false					},					#name : #row,					#parent : @29				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #SnakeCell,						#isMetaSide : false					},					#name : #column,					#parent : @29				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #SnakeCell,						#isMetaSide : false					},					#name : #artifact,					#parent : @29				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'SnakeCell class\r\tinstanceVariableNames: \'\''				},				#name : #'SnakeCell class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @29			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #SnakeCell,					#isMetaSide : false				},				#parent : @29,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #snake_game,			#package : #snake_game,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'p',		#time : DateAndTime [ '2017-06-25T13:31:35.892286+02:00' ],		#prior : OmReference [ '56' ],		#self : OmReference [ '57' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #SnakeCell,				#isMetaSide : false			},			#name : #'setLabel:',			#protocol : #accessing,			#sourceCode : 'setLabel: symbol\r\t"(symbol = \'h\' | symbol = \'s\')\r\t\tifTrue: [ se ]."\r\tself contents: symbol.\r\tself extent: 20@20. "setting label changes extent --> reset extent"',			#stamp : 'p 6/25/2017 13:25',			#package : #snake_game		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #SnakeCell,				#isMetaSide : false			},			#name : #'setLabel:',			#protocol : #accessing,			#sourceCode : 'setLabel: symbol\r\t"(symbol = \'h\' | symbol = \'s\')\r\t\tifTrue: [ se ]."\r\tself label: symbol.\r\tself extent: 20@20. "setting label changes extent --> reset extent"',			#stamp : 'p 6/25/2017 13:31',			#package : #snake_game		}	}}OmEntry {	#tags : {		#author : 'p',		#time : DateAndTime [ '2017-06-25T14:20:32.505286+02:00' ],		#prior : OmReference [ '57' ],		#self : OmReference [ '58' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #SnakeCell,				#isMetaSide : false			},			#name : #'setLabel:',			#protocol : #accessing,			#sourceCode : 'setLabel: symbol\r\t"(symbol = \'h\' | symbol = \'s\')\r\t\tifTrue: [ se ]."\r\tself label: symbol.\r\tself extent: 20@20. "setting label changes extent --> reset extent"',			#stamp : 'p 6/25/2017 13:31',			#package : #snake_game		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #SnakeCell,				#isMetaSide : false			},			#name : #'setLabel:',			#protocol : #accessing,			#sourceCode : 'setLabel: symbol\r\tself label: symbol.\r\tself extent: 20@20. "setting label changes extent --> reset extent"',			#stamp : 'p 6/25/2017 14:20',			#package : #snake_game		}	}}OmEntry {	#tags : {		#author : 'p',		#time : DateAndTime [ '2017-06-25T14:21:15.779286+02:00' ],		#prior : OmReference [ '58' ],		#self : OmReference [ '59' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #SnakeGame,				#isMetaSide : false			},			#name : #initialize,			#protocol : #initialize,			#sourceCode : 'initialize\r\t"makes a table to be filled with information"\r\tstarted := false.\r\t\r\tcontainer := Morph new\r\t\tlayoutPolicy: TableLayout new;\r\t\textent: 500@550;\r\t\tcolor: Color transparent.\r\t\t\r\tmodel := SnakeModel new.\r\tmodel board: self.\r\t\r\tself addRows.\r\tself addControls.\r\tself addKeyListener.\r\t\r\t^self.',			#stamp : 'p 6/24/2017 19:26',			#package : #snake_game		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #SnakeGame,				#isMetaSide : false			},			#name : #initialize,			#protocol : #initialize,			#sourceCode : 'initialize\r\t"makes a table to be filled with information"\r\tstarted := false.\r\t\r\tcontainer := Morph new\r\t\tlayoutPolicy: TableLayout new;\r\t\textent: 500@550;\r\t\tcolor: Color black.\r\t\t\r\tmodel := SnakeModel new.\r\tmodel board: self.\r\t\r\tself addRows.\r\tself addControls.\r\tself addKeyListener.\r\t\r\t^self.',			#stamp : 'p 6/25/2017 14:21',			#package : #snake_game		}	}}OmEntry {	#tags : {		#author : 'p',		#time : DateAndTime [ '2017-06-25T14:21:35.559286+02:00' ],		#prior : OmReference [ '59' ],		#self : OmReference [ '60' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #SnakeGame,				#isMetaSide : false			},			#name : #initialize,			#protocol : #initialize,			#sourceCode : 'initialize\r\t"makes a table to be filled with information"\r\tstarted := false.\r\t\r\tcontainer := Morph new\r\t\tlayoutPolicy: TableLayout new;\r\t\textent: 500@550;\r\t\tcolor: Color black.\r\t\t\r\tmodel := SnakeModel new.\r\tmodel board: self.\r\t\r\tself addRows.\r\tself addControls.\r\tself addKeyListener.\r\t\r\t^self.',			#stamp : 'p 6/25/2017 14:21',			#package : #snake_game		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #SnakeGame,				#isMetaSide : false			},			#name : #initialize,			#protocol : #initialize,			#sourceCode : 'initialize\r\t"makes a table to be filled with information"\r\tstarted := false.\r\t\r\tcontainer := Morph new\r\t\tlayoutPolicy: TableLayout new;\r\t\textent: 500@550;\r\t\tcolor: Color transparent.\r\t\t\r\tmodel := SnakeModel new.\r\tmodel board: self.\r\t\r\tself addRows.\r\tself addControls.\r\tself addKeyListener.\r\t\r\t^self.',			#stamp : 'p 6/25/2017 14:21',			#package : #snake_game		}	}}OmEntry {	#tags : {		#author : 'p',		#time : DateAndTime [ '2017-06-25T14:21:52.627286+02:00' ],		#prior : OmReference [ '60' ],		#self : OmReference [ '61' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #SnakeGame,				#isMetaSide : false			},			#name : #addControls,			#protocol : #initialize,			#sourceCode : 'addControls\r\t| rowMorph startBtn |\r\trowMorph := Morph new \r\t\tlayoutPolicy: RowLayout new;\r\t\textent: 500@50;\r\t\tcolor: Color transparent.\r\tstartBtn := self createButton: \'Start\' onClickExecutes: [ self start ].\r\tmessageArea := self createTextArea: \'Welcome to Snake! (arrow keys control red, WASD controls blue)\'.\r\trowMorph addMorph: messageArea.\r\trowMorph addMorph: startBtn.\r\tcontainer addMorph: rowMorph.',			#stamp : 'p 6/24/2017 19:25',			#package : #snake_game		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #SnakeGame,				#isMetaSide : false			},			#name : #addControls,			#protocol : #initialize,			#sourceCode : 'addControls\r\t| rowMorph startBtn |\r\trowMorph := Morph new \r\t\tlayoutPolicy: RowLayout new;\r\t\textent: 500@50;\r\t\tcolor: Color black.\r\tstartBtn := self createButton: \'Start\' onClickExecutes: [ self start ].\r\tmessageArea := self createTextArea: \'Welcome to Snake! (arrow keys control red, WASD controls blue)\'.\r\trowMorph addMorph: messageArea.\r\trowMorph addMorph: startBtn.\r\tcontainer addMorph: rowMorph.',			#stamp : 'p 6/25/2017 14:21',			#package : #snake_game		}	}}OmEntry {	#tags : {		#author : 'p',		#time : DateAndTime [ '2017-06-25T14:22:08.664286+02:00' ],		#prior : OmReference [ '61' ],		#self : OmReference [ '62' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #SnakeGame,				#isMetaSide : false			},			#name : #addControls,			#protocol : #initialize,			#sourceCode : 'addControls\r\t| rowMorph startBtn |\r\trowMorph := Morph new \r\t\tlayoutPolicy: RowLayout new;\r\t\textent: 500@50;\r\t\tcolor: Color black.\r\tstartBtn := self createButton: \'Start\' onClickExecutes: [ self start ].\r\tmessageArea := self createTextArea: \'Welcome to Snake! (arrow keys control red, WASD controls blue)\'.\r\trowMorph addMorph: messageArea.\r\trowMorph addMorph: startBtn.\r\tcontainer addMorph: rowMorph.',			#stamp : 'p 6/25/2017 14:21',			#package : #snake_game		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #SnakeGame,				#isMetaSide : false			},			#name : #addControls,			#protocol : #initialize,			#sourceCode : 'addControls\r\t| rowMorph startBtn |\r\trowMorph := Morph new \r\t\tlayoutPolicy: RowLayout new;\r\t\textent: 500@50;\r\t\tcolor: Color transparent.\r\tstartBtn := self createButton: \'Start\' onClickExecutes: [ self start ].\r\tmessageArea := self createTextArea: \'Welcome to Snake! (arrow keys control red, WASD controls blue)\'.\r\trowMorph addMorph: messageArea.\r\trowMorph addMorph: startBtn.\r\tcontainer addMorph: rowMorph.',			#stamp : 'p 6/25/2017 14:22',			#package : #snake_game		}	}}OmEntry {	#tags : {		#author : 'p',		#time : DateAndTime [ '2017-06-25T14:26:38.669286+02:00' ],		#prior : OmReference [ '62' ],		#self : OmReference [ '63' ]	},	#content : EpClassModification {		#oldClass : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Object',				#traitCompositionSource : '{}',				#definitionSource : 'Object subclass: #Snake\r\tinstanceVariableNames: \'cells color snakeSize health\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'snake_game\''			},			#name : #Snake,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Snake,						#isMetaSide : false					},					#name : #cells,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Snake,						#isMetaSide : false					},					#name : #color,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Snake,						#isMetaSide : false					},					#name : #snakeSize,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Snake,						#isMetaSide : false					},					#name : #health,					#parent : @7				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'Snake class\r\tinstanceVariableNames: \'\''				},				#name : #'Snake class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #Snake,					#isMetaSide : false				},				#parent : @7,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #snake_game,			#package : #snake_game,			#sharedPools : OrderedCollection [ ]		},		#newClass : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Object',				#traitCompositionSource : '{}',				#definitionSource : 'Object subclass: #Snake\r\tinstanceVariableNames: \'cells color snakeSize health direction\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'snake_game\''			},			#name : #Snake,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Snake,						#isMetaSide : false					},					#name : #cells,					#parent : @29				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Snake,						#isMetaSide : false					},					#name : #color,					#parent : @29				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Snake,						#isMetaSide : false					},					#name : #snakeSize,					#parent : @29				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Snake,						#isMetaSide : false					},					#name : #health,					#parent : @29				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Snake,						#isMetaSide : false					},					#name : #direction,					#parent : @29				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'Snake class\r\tinstanceVariableNames: \'\''				},				#name : #'Snake class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @29			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #Snake,					#isMetaSide : false				},				#parent : @29,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #snake_game,			#package : #snake_game,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'p',		#time : DateAndTime [ '2017-06-25T14:26:57.300286+02:00' ],		#prior : OmReference [ '63' ],		#self : OmReference [ '64' ]	},	#content : EpCompositeRefactoring {		#childrenRefactorings : [			EpGenericRefactoring {				#storeString : '(RBCreateAccessorsForVariableRefactoring variable: #cells class: Snake classVariable: false)'			},			EpGenericRefactoring {				#storeString : '(RBCreateAccessorsForVariableRefactoring variable: #color class: Snake classVariable: false)'			},			EpGenericRefactoring {				#storeString : '(RBCreateAccessorsForVariableRefactoring variable: #snakeSize class: Snake classVariable: false)'			},			EpGenericRefactoring {				#storeString : '(RBCreateAccessorsForVariableRefactoring variable: #health class: Snake classVariable: false)'			},			EpGenericRefactoring {				#storeString : '(RBCreateAccessorsForVariableRefactoring variable: #direction class: Snake classVariable: false)'			}		]	}}OmEntry {	#tags : {		#author : 'p',		#prior : OmReference [ '64' ],		#self : OmReference [ '65' ],		#time : DateAndTime [ '2017-06-25T14:26:57.319286+02:00' ],		#trigger : @3	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Snake,				#isMetaSide : false			},			#name : #direction,			#protocol : #accessing,			#sourceCode : 'direction\r\t^ direction',			#stamp : 'p 6/25/2017 14:26',			#package : #snake_game		}	}}OmEntry {	#tags : {		#author : 'p',		#prior : OmReference [ '65' ],		#self : OmReference [ '66' ],		#time : DateAndTime [ '2017-06-25T14:26:57.332286+02:00' ],		#trigger : OmReference [ '64' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Snake,				#isMetaSide : false			},			#name : #'direction:',			#protocol : #accessing,			#sourceCode : 'direction: anObject\r\tdirection := anObject',			#stamp : 'p 6/25/2017 14:26',			#package : #snake_game		}	}}OmEntry {	#tags : {		#author : 'p',		#time : DateAndTime [ '2017-06-25T14:27:07.427286+02:00' ],		#prior : OmReference [ '66' ],		#self : OmReference [ '67' ]	},	#content : EpClassModification {		#oldClass : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Matrix',				#traitCompositionSource : '{}',				#definitionSource : 'Matrix subclass: #SnakeModel\r\tinstanceVariableNames: \'random board blueDirection redDirection timer blueSnake redSnake artifactCells\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'snake_game\''			},			#name : #SnakeModel,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #SnakeModel,						#isMetaSide : false					},					#name : #random,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #SnakeModel,						#isMetaSide : false					},					#name : #board,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #SnakeModel,						#isMetaSide : false					},					#name : #blueDirection,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #SnakeModel,						#isMetaSide : false					},					#name : #redDirection,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #SnakeModel,						#isMetaSide : false					},					#name : #timer,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #SnakeModel,						#isMetaSide : false					},					#name : #blueSnake,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #SnakeModel,						#isMetaSide : false					},					#name : #redSnake,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #SnakeModel,						#isMetaSide : false					},					#name : #artifactCells,					#parent : @7				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'SnakeModel class\r\tinstanceVariableNames: \'\''				},				#name : #'SnakeModel class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #SnakeModel,					#isMetaSide : false				},				#parent : @7,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #snake_game,			#package : #snake_game,			#sharedPools : OrderedCollection [ ]		},		#newClass : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Matrix',				#traitCompositionSource : '{}',				#definitionSource : 'Matrix subclass: #SnakeModel\r\tinstanceVariableNames: \'random board timer blueSnake redSnake artifactCells\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'snake_game\''			},			#name : #SnakeModel,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #SnakeModel,						#isMetaSide : false					},					#name : #random,					#parent : @37				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #SnakeModel,						#isMetaSide : false					},					#name : #board,					#parent : @37				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #SnakeModel,						#isMetaSide : false					},					#name : #timer,					#parent : @37				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #SnakeModel,						#isMetaSide : false					},					#name : #blueSnake,					#parent : @37				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #SnakeModel,						#isMetaSide : false					},					#name : #redSnake,					#parent : @37				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #SnakeModel,						#isMetaSide : false					},					#name : #artifactCells,					#parent : @37				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'SnakeModel class\r\tinstanceVariableNames: \'\''				},				#name : #'SnakeModel class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @37			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #SnakeModel,					#isMetaSide : false				},				#parent : @37,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #snake_game,			#package : #snake_game,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'p',		#time : DateAndTime [ '2017-06-25T14:27:48.198286+02:00' ],		#prior : OmReference [ '67' ],		#self : OmReference [ '68' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #SnakeModel,				#isMetaSide : false			},			#name : #initialize,			#protocol : #initialize,			#sourceCode : 'initialize\r\tsuper initialize.\r\tblueDirection := #south.\r\tredDirection := #north.\r\t"blueCells := OrderedCollection new.\r\tredCells := OrderedCollection new."\r\tblueSnake := Snake new.\r\tredSnake := Snake new.\r\t\r\tblueSnake snakeSize: 4.\r\tblueSnake cells: OrderedCollection new.\r\tblueSnake color: Color blue.\r\tblueSnake health: 10.\r\t\r\tredSnake snakeSize: 4.\r\tredSnake cells: OrderedCollection new.\r\tredSnake color: Color red.\r\tredSnake health: 10.\r\t\t\r\ttimer := 600.\r\trandom := Random new.\r\tartifactCells := OrderedCollection new.',			#stamp : 'p 6/25/2017 13:04',			#package : #snake_game		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #SnakeModel,				#isMetaSide : false			},			#name : #initialize,			#protocol : #initialize,			#sourceCode : 'initialize\r\tsuper initialize.\r\t"blueCells := OrderedCollection new.\r\tredCells := OrderedCollection new."\r\tblueSnake := Snake new.\r\tredSnake := Snake new.\r\t\r\tblueSnake snakeSize: 4.\r\tblueSnake cells: OrderedCollection new.\r\tblueSnake color: Color blue.\r\tblueSnake health: 10.\r\tblueSnake direction: #south.\r\t\r\tredSnake snakeSize: 4.\r\tredSnake cells: OrderedCollection new.\r\tredSnake color: Color red.\r\tredSnake health: 10.\r\tredSnake direction: #north.\r\t\t\r\ttimer := 600.\r\trandom := Random new.\r\tartifactCells := OrderedCollection new.',			#stamp : 'p 6/25/2017 14:27',			#package : #snake_game		}	}}OmEntry {	#tags : {		#author : 'p',		#time : DateAndTime [ '2017-06-25T14:28:18.594286+02:00' ],		#prior : OmReference [ '68' ],		#self : OmReference [ '69' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #SnakeModel,				#isMetaSide : false			},			#name : #'respawn:',			#protocol : #execution,			#sourceCode : 'respawn: playerColor\r\t"respawns a snake to its fixed starting location"\r\t| offsetSign newCell cells snakeSize spawnPlace |\r\t\r\t(playerColor = Color red)\r\t\tifTrue: [\r\t\t\tredSnake health: (redSnake health) - 1.\r\t\t\tboard messageArea contents: (\'Red snake health: \',(redSnake health) asString).\r\t\t\tspawnPlace := 6.\r\t\t\tsnakeSize := redSnake cells size.\r\t\t\tcells := redSnake cells.\r\t\t\tredDirection := #north.\r\t\t\toffsetSign := (-1) ]\r\t\tifFalse: [\r\t\t\tblueSnake health: (blueSnake health) - 1.\r\t\t\tboard messageArea contents: (\'Blue snake health: \',(blueSnake health) asString).\r\t\t\tspawnPlace := 20.\r\t\t\tsnakeSize := blueSnake cells size.\r\t\t\tcells := blueSnake cells.\r\t\t\tblueDirection := #south.\r\t\t\toffsetSign := 1 ].\r\r\t[ cells isEmpty ] whileFalse: [ cells last color: Color lightGray. cells removeLast ].\r\t\r\t1 to: snakeSize do: [ :offset | \r\t\tnewCell := (board rows at: spawnPlace + (offset*offsetSign)) at: spawnPlace.\r\t\t(cells isEmpty)\r\t\t\tifTrue: [newCell color: playerColor ]\r\t\t\tifFalse: [ newCell color: Color lightGray ].\r\t\tcells addLast: newCell\r\t].',			#stamp : 'p 6/24/2017 19:12',			#package : #snake_game		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #SnakeModel,				#isMetaSide : false			},			#name : #'respawn:',			#protocol : #execution,			#sourceCode : 'respawn: playerColor\r\t"respawns a snake to its fixed starting location"\r\t| offsetSign newCell cells snakeSize spawnPlace |\r\t\r\t(playerColor = Color red)\r\t\tifTrue: [\r\t\t\tredSnake health: (redSnake health) - 1.\r\t\t\tboard messageArea contents: (\'Red snake health: \',(redSnake health) asString).\r\t\t\tspawnPlace := 6.\r\t\t\tsnakeSize := redSnake cells size.\r\t\t\tcells := redSnake cells.\r\t\t\tredSnake direction: #north.\r\t\t\toffsetSign := (-1) ]\r\t\tifFalse: [\r\t\t\tblueSnake health: (blueSnake health) - 1.\r\t\t\tboard messageArea contents: (\'Blue snake health: \',(blueSnake health) asString).\r\t\t\tspawnPlace := 20.\r\t\t\tsnakeSize := blueSnake cells size.\r\t\t\tcells := blueSnake cells.\r\t\t\tblueSnake direction: #south.\r\t\t\toffsetSign := 1 ].\r\r\t[ cells isEmpty ] whileFalse: [ cells last color: Color lightGray. cells removeLast ].\r\t\r\t1 to: snakeSize do: [ :offset | \r\t\tnewCell := (board rows at: spawnPlace + (offset*offsetSign)) at: spawnPlace.\r\t\t(cells isEmpty)\r\t\t\tifTrue: [newCell color: playerColor ]\r\t\t\tifFalse: [ newCell color: Color lightGray ].\r\t\tcells addLast: newCell\r\t].',			#stamp : 'p 6/25/2017 14:28',			#package : #snake_game		}	}}OmEntry {	#tags : {		#author : 'p',		#time : DateAndTime [ '2017-06-25T14:28:55.752286+02:00' ],		#prior : OmReference [ '69' ],		#self : OmReference [ '70' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #SnakeModel,				#isMetaSide : false			},			#name : #moveSnakes,			#protocol : #execution,			#sourceCode : 'moveSnakes\r\r\tblueDirection = #north\r\t\tifTrue: [ self moveNorth: blueSnake ].\r\tblueDirection = #south\r\t\tifTrue: [ self moveSouth: blueSnake ].\r\tblueDirection = #east\r\t\tifTrue: [ self moveEast: blueSnake ].\r\tblueDirection = #west\r\t\tifTrue: [ self moveWest: blueSnake ].\r\t\t\r\tredDirection = #north\r\t\tifTrue: [ self moveNorth: redSnake ].\r\tredDirection = #south\r\t\tifTrue: [ self moveSouth: redSnake ].\r\tredDirection = #east\r\t\tifTrue: [ self moveEast: redSnake ].\r\tredDirection = #west\r\t\tifTrue: [ self moveWest: redSnake ].',			#stamp : 'p 6/24/2017 20:15',			#package : #snake_game		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #SnakeModel,				#isMetaSide : false			},			#name : #moveSnakes,			#protocol : #execution,			#sourceCode : 'moveSnakes\r\t| blueDirection redDirection |\r\tblueDirection := blueSnake direction.\r\tredDirection := redSnake direction.\r\r\tblueDirection = #north\r\t\tifTrue: [ self moveNorth: blueSnake ].\r\tblueDirection = #south\r\t\tifTrue: [ self moveSouth: blueSnake ].\r\tblueDirection = #east\r\t\tifTrue: [ self moveEast: blueSnake ].\r\tblueDirection = #west\r\t\tifTrue: [ self moveWest: blueSnake ].\r\t\t\r\tredDirection = #north\r\t\tifTrue: [ self moveNorth: redSnake ].\r\tredDirection = #south\r\t\tifTrue: [ self moveSouth: redSnake ].\r\tredDirection = #east\r\t\tifTrue: [ self moveEast: redSnake ].\r\tredDirection = #west\r\t\tifTrue: [ self moveWest: redSnake ].',			#stamp : 'p 6/25/2017 14:28',			#package : #snake_game		}	}}OmEntry {	#tags : {		#author : 'p',		#time : DateAndTime [ '2017-06-25T14:29:13.913286+02:00' ],		#prior : OmReference [ '70' ],		#self : OmReference [ '71' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #SnakeModel,				#isMetaSide : false			},			#name : #'checkCollision:col:',			#protocol : #execution,			#sourceCode : 'checkCollision: ordered col: playerColor\r\t"TODO: at some point, add collision with other snake -> return other color"\r\t"TODO: check auf neighbour color -> noch grau aber zugehörigkeit zu anderer schlange?"\r\t| col oppCol dir neighbour firstCell |\r\r\tcol := playerColor = Color red\r\t\tifTrue: [ dir := redDirection. oppCol := Color blue ]\r\t\tifFalse: [ dir := blueDirection. oppCol := Color red ].\r\tfirstCell := ordered first.\r\t\r\tdir = #north\r\t\tifTrue: [ neighbour := board rows: firstCell row + 1 at: firstCell column.\r\t\t\tneighbour color = playerColor\r\t\t\t\tifTrue: [ ^playerColor ].\r\t\t\tneighbour color = oppCol\r\t\t\t\tifTrue: [ ^oppCol ].\r\t\t\tneighbour color = Color lightGray \r\t\t\t\tifTrue: [ ^Color lightGray ] ].\r\tdir = #south\r\t\tifTrue: [ neighbour := board rows: firstCell row - 1 at: firstCell column.\r\t\t\tneighbour color = playerColor\r\t\t\t\tifTrue: [ ^playerColor ].\r\t\t\tneighbour color = oppCol\r\t\t\t\tifTrue: [ ^oppCol ].\t\r\t\t\tneighbour color = Color lightGray \r\t\t\t\tifTrue: [ ^Color lightGray ] ].\r\tdir = #east\r\t\tifTrue: [ neighbour := board rows: firstCell row at: firstCell column - 1.\r\t\t\tneighbour color = playerColor\r\t\t\t\tifTrue: [ ^playerColor ].\r\t\t\tneighbour color = oppCol\r\t\t\t\tifTrue: [ ^oppCol ].\t\r\t\t\tneighbour color = Color lightGray \r\t\t\t\tifTrue: [ ^Color lightGray ] ].\r\tdir = #west\r\t\tifTrue: [ neighbour := board rows: firstCell row at: firstCell column + 1.\r\t\t\tneighbour color = playerColor\r\t\t\t\tifTrue: [ ^playerColor ].\r\t\t\tneighbour color = oppCol\r\t\t\t\tifTrue: [ ^oppCol ].\r\t\t\tneighbour color = Color lightGray \r\t\t\t\tifTrue: [ ^Color lightGray ] ].',			#stamp : 'ChristophGross 6/23/2017 19:44',			#package : #snake_game		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #SnakeModel,				#isMetaSide : false			},			#name : #'checkCollision:col:',			#protocol : #execution,			#sourceCode : 'checkCollision: ordered col: playerColor\r\t"TODO: at some point, add collision with other snake -> return other color"\r\t"TODO: check auf neighbour color -> noch grau aber zugehörigkeit zu anderer schlange?"\r\t| col oppCol dir neighbour firstCell |\r\r\tcol := playerColor = Color red\r\t\tifTrue: [ dir := redSnake direction. oppCol := Color blue ]\r\t\tifFalse: [ dir := blueSnake direction. oppCol := Color red ].\r\tfirstCell := ordered first.\r\t\r\tdir = #north\r\t\tifTrue: [ neighbour := board rows: firstCell row + 1 at: firstCell column.\r\t\t\tneighbour color = playerColor\r\t\t\t\tifTrue: [ ^playerColor ].\r\t\t\tneighbour color = oppCol\r\t\t\t\tifTrue: [ ^oppCol ].\r\t\t\tneighbour color = Color lightGray \r\t\t\t\tifTrue: [ ^Color lightGray ] ].\r\tdir = #south\r\t\tifTrue: [ neighbour := board rows: firstCell row - 1 at: firstCell column.\r\t\t\tneighbour color = playerColor\r\t\t\t\tifTrue: [ ^playerColor ].\r\t\t\tneighbour color = oppCol\r\t\t\t\tifTrue: [ ^oppCol ].\t\r\t\t\tneighbour color = Color lightGray \r\t\t\t\tifTrue: [ ^Color lightGray ] ].\r\tdir = #east\r\t\tifTrue: [ neighbour := board rows: firstCell row at: firstCell column - 1.\r\t\t\tneighbour color = playerColor\r\t\t\t\tifTrue: [ ^playerColor ].\r\t\t\tneighbour color = oppCol\r\t\t\t\tifTrue: [ ^oppCol ].\t\r\t\t\tneighbour color = Color lightGray \r\t\t\t\tifTrue: [ ^Color lightGray ] ].\r\tdir = #west\r\t\tifTrue: [ neighbour := board rows: firstCell row at: firstCell column + 1.\r\t\t\tneighbour color = playerColor\r\t\t\t\tifTrue: [ ^playerColor ].\r\t\t\tneighbour color = oppCol\r\t\t\t\tifTrue: [ ^oppCol ].\r\t\t\tneighbour color = Color lightGray \r\t\t\t\tifTrue: [ ^Color lightGray ] ].',			#stamp : 'p 6/25/2017 14:29',			#package : #snake_game		}	}}OmEntry {	#tags : {		#author : 'p',		#time : DateAndTime [ '2017-06-25T14:29:33.334286+02:00' ],		#prior : OmReference [ '71' ],		#self : OmReference [ '72' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #SnakeModel,				#isMetaSide : false			},			#name : #'checkCollision:col:',			#protocol : #execution,			#sourceCode : 'checkCollision: ordered col: playerColor\r\t"TODO: at some point, add collision with other snake -> return other color"\r\t"TODO: check auf neighbour color -> noch grau aber zugehörigkeit zu anderer schlange?"\r\t| col oppCol dir neighbour firstCell |\r\r\tcol := playerColor = Color red\r\t\tifTrue: [ dir := redSnake direction. oppCol := Color blue ]\r\t\tifFalse: [ dir := blueSnake direction. oppCol := Color red ].\r\tfirstCell := ordered first.\r\t\r\tdir = #north\r\t\tifTrue: [ neighbour := board rows: firstCell row + 1 at: firstCell column.\r\t\t\tneighbour color = playerColor\r\t\t\t\tifTrue: [ ^playerColor ].\r\t\t\tneighbour color = oppCol\r\t\t\t\tifTrue: [ ^oppCol ].\r\t\t\tneighbour color = Color lightGray \r\t\t\t\tifTrue: [ ^Color lightGray ] ].\r\tdir = #south\r\t\tifTrue: [ neighbour := board rows: firstCell row - 1 at: firstCell column.\r\t\t\tneighbour color = playerColor\r\t\t\t\tifTrue: [ ^playerColor ].\r\t\t\tneighbour color = oppCol\r\t\t\t\tifTrue: [ ^oppCol ].\t\r\t\t\tneighbour color = Color lightGray \r\t\t\t\tifTrue: [ ^Color lightGray ] ].\r\tdir = #east\r\t\tifTrue: [ neighbour := board rows: firstCell row at: firstCell column - 1.\r\t\t\tneighbour color = playerColor\r\t\t\t\tifTrue: [ ^playerColor ].\r\t\t\tneighbour color = oppCol\r\t\t\t\tifTrue: [ ^oppCol ].\t\r\t\t\tneighbour color = Color lightGray \r\t\t\t\tifTrue: [ ^Color lightGray ] ].\r\tdir = #west\r\t\tifTrue: [ neighbour := board rows: firstCell row at: firstCell column + 1.\r\t\t\tneighbour color = playerColor\r\t\t\t\tifTrue: [ ^playerColor ].\r\t\t\tneighbour color = oppCol\r\t\t\t\tifTrue: [ ^oppCol ].\r\t\t\tneighbour color = Color lightGray \r\t\t\t\tifTrue: [ ^Color lightGray ] ].',			#stamp : 'p 6/25/2017 14:29',			#package : #snake_game		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #SnakeModel,				#isMetaSide : false			},			#name : #'checkCollision:col:',			#protocol : #execution,			#sourceCode : 'checkCollision: ordered col: playerColor\r\t"TODO: check auf neighbour color -> noch grau aber zugehörigkeit zu anderer schlange?"\r\t| col oppCol dir neighbour firstCell |\r\r\tcol := playerColor = Color red\r\t\tifTrue: [ dir := redSnake direction. oppCol := Color blue ]\r\t\tifFalse: [ dir := blueSnake direction. oppCol := Color red ].\r\tfirstCell := ordered first.\r\t\r\tdir = #north\r\t\tifTrue: [ neighbour := board rows: firstCell row + 1 at: firstCell column.\r\t\t\tneighbour color = playerColor\r\t\t\t\tifTrue: [ ^playerColor ].\r\t\t\tneighbour color = oppCol\r\t\t\t\tifTrue: [ ^oppCol ].\r\t\t\tneighbour color = Color lightGray \r\t\t\t\tifTrue: [ ^Color lightGray ] ].\r\tdir = #south\r\t\tifTrue: [ neighbour := board rows: firstCell row - 1 at: firstCell column.\r\t\t\tneighbour color = playerColor\r\t\t\t\tifTrue: [ ^playerColor ].\r\t\t\tneighbour color = oppCol\r\t\t\t\tifTrue: [ ^oppCol ].\t\r\t\t\tneighbour color = Color lightGray \r\t\t\t\tifTrue: [ ^Color lightGray ] ].\r\tdir = #east\r\t\tifTrue: [ neighbour := board rows: firstCell row at: firstCell column - 1.\r\t\t\tneighbour color = playerColor\r\t\t\t\tifTrue: [ ^playerColor ].\r\t\t\tneighbour color = oppCol\r\t\t\t\tifTrue: [ ^oppCol ].\t\r\t\t\tneighbour color = Color lightGray \r\t\t\t\tifTrue: [ ^Color lightGray ] ].\r\tdir = #west\r\t\tifTrue: [ neighbour := board rows: firstCell row at: firstCell column + 1.\r\t\t\tneighbour color = playerColor\r\t\t\t\tifTrue: [ ^playerColor ].\r\t\t\tneighbour color = oppCol\r\t\t\t\tifTrue: [ ^oppCol ].\r\t\t\tneighbour color = Color lightGray \r\t\t\t\tifTrue: [ ^Color lightGray ] ].',			#stamp : 'p 6/25/2017 14:29',			#package : #snake_game		}	}}OmEntry {	#tags : {		#author : 'p',		#time : DateAndTime [ '2017-06-25T14:29:40.351286+02:00' ],		#prior : OmReference [ '72' ],		#self : OmReference [ '73' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #SnakeModel,				#isMetaSide : false			},			#name : #'checkCollision:col:',			#protocol : #execution,			#sourceCode : 'checkCollision: ordered col: playerColor\r\t"TODO: check auf neighbour color -> noch grau aber zugehörigkeit zu anderer schlange?"\r\t| col oppCol dir neighbour firstCell |\r\r\tcol := playerColor = Color red\r\t\tifTrue: [ dir := redSnake direction. oppCol := Color blue ]\r\t\tifFalse: [ dir := blueSnake direction. oppCol := Color red ].\r\tfirstCell := ordered first.\r\t\r\tdir = #north\r\t\tifTrue: [ neighbour := board rows: firstCell row + 1 at: firstCell column.\r\t\t\tneighbour color = playerColor\r\t\t\t\tifTrue: [ ^playerColor ].\r\t\t\tneighbour color = oppCol\r\t\t\t\tifTrue: [ ^oppCol ].\r\t\t\tneighbour color = Color lightGray \r\t\t\t\tifTrue: [ ^Color lightGray ] ].\r\tdir = #south\r\t\tifTrue: [ neighbour := board rows: firstCell row - 1 at: firstCell column.\r\t\t\tneighbour color = playerColor\r\t\t\t\tifTrue: [ ^playerColor ].\r\t\t\tneighbour color = oppCol\r\t\t\t\tifTrue: [ ^oppCol ].\t\r\t\t\tneighbour color = Color lightGray \r\t\t\t\tifTrue: [ ^Color lightGray ] ].\r\tdir = #east\r\t\tifTrue: [ neighbour := board rows: firstCell row at: firstCell column - 1.\r\t\t\tneighbour color = playerColor\r\t\t\t\tifTrue: [ ^playerColor ].\r\t\t\tneighbour color = oppCol\r\t\t\t\tifTrue: [ ^oppCol ].\t\r\t\t\tneighbour color = Color lightGray \r\t\t\t\tifTrue: [ ^Color lightGray ] ].\r\tdir = #west\r\t\tifTrue: [ neighbour := board rows: firstCell row at: firstCell column + 1.\r\t\t\tneighbour color = playerColor\r\t\t\t\tifTrue: [ ^playerColor ].\r\t\t\tneighbour color = oppCol\r\t\t\t\tifTrue: [ ^oppCol ].\r\t\t\tneighbour color = Color lightGray \r\t\t\t\tifTrue: [ ^Color lightGray ] ].',			#stamp : 'p 6/25/2017 14:29',			#package : #snake_game		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #SnakeModel,				#isMetaSide : false			},			#name : #'checkCollision:col:',			#protocol : #execution,			#sourceCode : 'checkCollision: ordered col: playerColor\r\t| col oppCol dir neighbour firstCell |\r\r\tcol := playerColor = Color red\r\t\tifTrue: [ dir := redSnake direction. oppCol := Color blue ]\r\t\tifFalse: [ dir := blueSnake direction. oppCol := Color red ].\r\tfirstCell := ordered first.\r\t\r\tdir = #north\r\t\tifTrue: [ neighbour := board rows: firstCell row + 1 at: firstCell column.\r\t\t\tneighbour color = playerColor\r\t\t\t\tifTrue: [ ^playerColor ].\r\t\t\tneighbour color = oppCol\r\t\t\t\tifTrue: [ ^oppCol ].\r\t\t\tneighbour color = Color lightGray \r\t\t\t\tifTrue: [ ^Color lightGray ] ].\r\tdir = #south\r\t\tifTrue: [ neighbour := board rows: firstCell row - 1 at: firstCell column.\r\t\t\tneighbour color = playerColor\r\t\t\t\tifTrue: [ ^playerColor ].\r\t\t\tneighbour color = oppCol\r\t\t\t\tifTrue: [ ^oppCol ].\t\r\t\t\tneighbour color = Color lightGray \r\t\t\t\tifTrue: [ ^Color lightGray ] ].\r\tdir = #east\r\t\tifTrue: [ neighbour := board rows: firstCell row at: firstCell column - 1.\r\t\t\tneighbour color = playerColor\r\t\t\t\tifTrue: [ ^playerColor ].\r\t\t\tneighbour color = oppCol\r\t\t\t\tifTrue: [ ^oppCol ].\t\r\t\t\tneighbour color = Color lightGray \r\t\t\t\tifTrue: [ ^Color lightGray ] ].\r\tdir = #west\r\t\tifTrue: [ neighbour := board rows: firstCell row at: firstCell column + 1.\r\t\t\tneighbour color = playerColor\r\t\t\t\tifTrue: [ ^playerColor ].\r\t\t\tneighbour color = oppCol\r\t\t\t\tifTrue: [ ^oppCol ].\r\t\t\tneighbour color = Color lightGray \r\t\t\t\tifTrue: [ ^Color lightGray ] ].',			#stamp : 'p 6/25/2017 14:29',			#package : #snake_game		}	}}OmEntry {	#tags : {		#author : 'p',		#time : DateAndTime [ '2017-06-25T14:30:25.033286+02:00' ],		#prior : OmReference [ '73' ],		#self : OmReference [ '74' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #SnakeModel,				#isMetaSide : false			},			#name : #blueDirection,			#protocol : #accessing,			#sourceCode : 'blueDirection\r\t^ blueDirection',			#stamp : 'Patrick 6/22/2017 14:06',			#package : #snake_game		}	}}OmEntry {	#tags : {		#author : 'p',		#time : DateAndTime [ '2017-06-25T14:30:25.066286+02:00' ],		#prior : OmReference [ '74' ],		#self : OmReference [ '75' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #SnakeModel,				#isMetaSide : false			},			#name : #'blueDirection:',			#protocol : #accessing,			#sourceCode : 'blueDirection: dir\r\t(blueDirection = (self getOppositeDirection: dir))\r\t\tifFalse: [ blueDirection := dir ].',			#stamp : 'p 6/24/2017 16:55',			#package : #snake_game		}	}}OmEntry {	#tags : {		#author : 'p',		#time : DateAndTime [ '2017-06-25T14:30:37.663286+02:00' ],		#prior : OmReference [ '75' ],		#self : OmReference [ '76' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #SnakeModel,				#isMetaSide : false			},			#name : #redDirection,			#protocol : #accessing,			#sourceCode : 'redDirection\r\t^ redDirection',			#stamp : 'Patrick 6/22/2017 14:06',			#package : #snake_game		}	}}OmEntry {	#tags : {		#author : 'p',		#time : DateAndTime [ '2017-06-25T14:30:37.697286+02:00' ],		#prior : OmReference [ '76' ],		#self : OmReference [ '77' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #SnakeModel,				#isMetaSide : false			},			#name : #'redDirection:',			#protocol : #accessing,			#sourceCode : 'redDirection: dir\r\t(redDirection = (self getOppositeDirection: dir))\r\t\tifFalse: [ redDirection := dir ].',			#stamp : 'p 6/24/2017 16:55',			#package : #snake_game		}	}}OmEntry {	#tags : {		#author : 'p',		#time : DateAndTime [ '2017-06-25T14:31:39.058286+02:00' ],		#prior : OmReference [ '77' ],		#self : OmReference [ '78' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #KeyListener,				#isMetaSide : false			},			#name : #'handleKeystroke:',			#protocol : #'keyboard control',			#sourceCode : 'handleKeystroke: event "no clue how to actually use this"\r\t| key |\r\tkey := event keyValue.\r\tkey = 30 "up red"\r\t\tifTrue: [ parent model redDirection: #north. "parent messageArea contents: \'up\'" ].\r\tkey = 31 "down red"\r\t\tifTrue: [ parent model redDirection: #south. "parent messageArea contents: \'down\'" ].\r\tkey = 29 "right red"\r\t\tifTrue: [ parent model redDirection: #east. "parent messageArea contents: \'right\'" ].\r\tkey = 28 "left red"\r\t\tifTrue: [ parent model redDirection: #west. "parent messageArea contents: \'left\'" ].\r\tkey = 119 "blue up (w)"\r\t\tifTrue: [ parent model blueDirection: #north. "parent messageArea contents: \'w\'" ].\r\tkey = 115 "blue down (s)"\r\t\tifTrue: [ parent model blueDirection: #south. "parent messageArea contents: \'s\'" ].\r\tkey = 100 "blue right (d)"\r\t\tifTrue: [ parent model blueDirection: #east. "parent messageArea contents: \'d\'" ].\r\tkey = 97 "blue left (a)"\r\t\tifTrue: [ parent model blueDirection: #west. "parent messageArea contents: \'a\'" ].',			#stamp : 'p 6/24/2017 16:18',			#package : #snake_game		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #KeyListener,				#isMetaSide : false			},			#name : #'handleKeystroke:',			#protocol : #'keyboard control',			#sourceCode : 'handleKeystroke: event "no clue how to actually use this"\r\t| key |\r\tkey := event keyValue.\r\tkey = 30 "up red"\r\t\tifTrue: [ parent model redSnake direction: #north. "parent messageArea contents: \'up\'" ].\r\tkey = 31 "down red"\r\t\tifTrue: [ parent model redSnake direction: #south. "parent messageArea contents: \'down\'" ].\r\tkey = 29 "right red"\r\t\tifTrue: [ parent model redSnake direction: #east. "parent messageArea contents: \'right\'" ].\r\tkey = 28 "left red"\r\t\tifTrue: [ parent model redSnake direction: #west. "parent messageArea contents: \'left\'" ].\r\tkey = 119 "blue up (w)"\r\t\tifTrue: [ parent model blueSnake direction: #north. "parent messageArea contents: \'w\'" ].\r\tkey = 115 "blue down (s)"\r\t\tifTrue: [ parent model blueSnake direction: #south. "parent messageArea contents: \'s\'" ].\r\tkey = 100 "blue right (d)"\r\t\tifTrue: [ parent model blueSnake direction: #east. "parent messageArea contents: \'d\'" ].\r\tkey = 97 "blue left (a)"\r\t\tifTrue: [ parent model blueSnake direction: #west. "parent messageArea contents: \'a\'" ].',			#stamp : 'p 6/25/2017 14:31',			#package : #snake_game		}	}}OmEntry {	#tags : {		#author : 'p',		#time : DateAndTime [ '2017-06-25T14:33:15.276286+02:00' ],		#prior : OmReference [ '78' ],		#self : OmReference [ '79' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #SnakeModel,				#isMetaSide : false			},			#name : #'checkCollision:col:',			#protocol : #execution,			#sourceCode : 'checkCollision: ordered col: playerColor\r\t| col oppCol dir neighbour firstCell |\r\r\tcol := playerColor = Color red\r\t\tifTrue: [ dir := redSnake direction. oppCol := Color blue ]\r\t\tifFalse: [ dir := blueSnake direction. oppCol := Color red ].\r\tfirstCell := ordered first.\r\t\r\tdir = #north\r\t\tifTrue: [ neighbour := board rows: firstCell row + 1 at: firstCell column.\r\t\t\tneighbour color = playerColor\r\t\t\t\tifTrue: [ ^playerColor ].\r\t\t\tneighbour color = oppCol\r\t\t\t\tifTrue: [ ^oppCol ].\r\t\t\tneighbour color = Color lightGray \r\t\t\t\tifTrue: [ ^Color lightGray ] ].\r\tdir = #south\r\t\tifTrue: [ neighbour := board rows: firstCell row - 1 at: firstCell column.\r\t\t\tneighbour color = playerColor\r\t\t\t\tifTrue: [ ^playerColor ].\r\t\t\tneighbour color = oppCol\r\t\t\t\tifTrue: [ ^oppCol ].\t\r\t\t\tneighbour color = Color lightGray \r\t\t\t\tifTrue: [ ^Color lightGray ] ].\r\tdir = #east\r\t\tifTrue: [ neighbour := board rows: firstCell row at: firstCell column - 1.\r\t\t\tneighbour color = playerColor\r\t\t\t\tifTrue: [ ^playerColor ].\r\t\t\tneighbour color = oppCol\r\t\t\t\tifTrue: [ ^oppCol ].\t\r\t\t\tneighbour color = Color lightGray \r\t\t\t\tifTrue: [ ^Color lightGray ] ].\r\tdir = #west\r\t\tifTrue: [ neighbour := board rows: firstCell row at: firstCell column + 1.\r\t\t\tneighbour color = playerColor\r\t\t\t\tifTrue: [ ^playerColor ].\r\t\t\tneighbour color = oppCol\r\t\t\t\tifTrue: [ ^oppCol ].\r\t\t\tneighbour color = Color lightGray \r\t\t\t\tifTrue: [ ^Color lightGray ] ].',			#stamp : 'p 6/25/2017 14:29',			#package : #snake_game		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #SnakeModel,				#isMetaSide : false			},			#name : #'checkCollision:col:',			#protocol : #checking,			#sourceCode : 'checkCollision: ordered col: playerColor\r\t| col oppCol dir neighbour firstCell |\r\r\tcol := playerColor = Color red\r\t\tifTrue: [ dir := redSnake direction. oppCol := Color blue ]\r\t\tifFalse: [ dir := blueSnake direction. oppCol := Color red ].\r\tfirstCell := ordered first.\r\t\r\tdir = #north\r\t\tifTrue: [ neighbour := board rows: firstCell row + 1 at: firstCell column.\r\t\t\tneighbour color = playerColor\r\t\t\t\tifTrue: [ ^playerColor ].\r\t\t\tneighbour color = oppCol\r\t\t\t\tifTrue: [ ^oppCol ].\r\t\t\tneighbour color = Color lightGray \r\t\t\t\tifTrue: [ ^Color lightGray ] ].\r\tdir = #south\r\t\tifTrue: [ neighbour := board rows: firstCell row - 1 at: firstCell column.\r\t\t\tneighbour color = playerColor\r\t\t\t\tifTrue: [ ^playerColor ].\r\t\t\tneighbour color = oppCol\r\t\t\t\tifTrue: [ ^oppCol ].\t\r\t\t\tneighbour color = Color lightGray \r\t\t\t\tifTrue: [ ^Color lightGray ] ].\r\tdir = #east\r\t\tifTrue: [ neighbour := board rows: firstCell row at: firstCell column - 1.\r\t\t\tneighbour color = playerColor\r\t\t\t\tifTrue: [ ^playerColor ].\r\t\t\tneighbour color = oppCol\r\t\t\t\tifTrue: [ ^oppCol ].\t\r\t\t\tneighbour color = Color lightGray \r\t\t\t\tifTrue: [ ^Color lightGray ] ].\r\tdir = #west\r\t\tifTrue: [ neighbour := board rows: firstCell row at: firstCell column + 1.\r\t\t\tneighbour color = playerColor\r\t\t\t\tifTrue: [ ^playerColor ].\r\t\t\tneighbour color = oppCol\r\t\t\t\tifTrue: [ ^oppCol ].\r\t\t\tneighbour color = Color lightGray \r\t\t\t\tifTrue: [ ^Color lightGray ] ].',			#stamp : 'p 6/25/2017 14:29',			#package : #snake_game		}	}}OmEntry {	#tags : {		#author : 'p',		#time : DateAndTime [ '2017-06-25T14:34:17.786286+02:00' ],		#prior : OmReference [ '79' ],		#self : OmReference [ '80' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #SnakeModel,				#isMetaSide : false			},			#name : #'checkForArtifact:',			#protocol : #checking,			#sourceCode : 'checkForArtifact: snake\r\t| firstCell |\r\tfirstCell := snake cells first.',			#stamp : 'p 6/25/2017 14:34',			#package : #snake_game		}	}}OmEntry {	#tags : {		#author : 'p',		#time : DateAndTime [ '2017-06-25T14:37:00.027286+02:00' ],		#prior : OmReference [ '80' ],		#self : OmReference [ '81' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #SnakeModel,				#isMetaSide : false			},			#name : #'checkForArtifact:',			#protocol : #checking,			#sourceCode : 'checkForArtifact: snake\r\t| firstCell |\r\tfirstCell := snake cells first.',			#stamp : 'p 6/25/2017 14:34',			#package : #snake_game		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #SnakeModel,				#isMetaSide : false			},			#name : #'checkForArtifact:',			#protocol : #checking,			#sourceCode : 'checkForArtifact: snake\r\t| firstCell |\r\tfirstCell := snake cells at: 1.\r\t\r\t"health changes"\r\tfirstCell label = \'h\'\r\t\tifTrue: [  ].\r\tfirstCell label = \'H\'\r\t\tifTrue: [  ].\r\t\t\r\t"size changes"\t\r\tfirstCell label = \'s\'\r\t\tifTrue: [  ].\r\tfirstCell label = \'S\'\r\t\tifTrue: [  ].\r',			#stamp : 'p 6/25/2017 14:37',			#package : #snake_game		}	}}OmEntry {	#tags : {		#author : 'p',		#time : DateAndTime [ '2017-06-25T14:37:43.127286+02:00' ],		#prior : OmReference [ '81' ],		#self : OmReference [ '82' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Snake,				#isMetaSide : false			},			#name : #increaseHealth,			#protocol : #'as yet unclassified',			#sourceCode : 'increaseHealth\r\thealth := health + 1.',			#stamp : 'p 6/25/2017 14:37',			#package : #snake_game		}	}}OmEntry {	#tags : {		#author : 'p',		#time : DateAndTime [ '2017-06-25T14:37:57.300286+02:00' ],		#prior : OmReference [ '82' ],		#self : OmReference [ '83' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Snake,				#isMetaSide : false			},			#name : #decreaseHealth,			#protocol : #'as yet unclassified',			#sourceCode : 'decreaseHealth\r\thealth := health - 1.',			#stamp : 'p 6/25/2017 14:37',			#package : #snake_game		}	}}OmEntry {	#tags : {		#author : 'p',		#time : DateAndTime [ '2017-06-25T14:38:28.115286+02:00' ],		#prior : OmReference [ '83' ],		#self : OmReference [ '84' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #SnakeModel,				#isMetaSide : false			},			#name : #'respawn:',			#protocol : #execution,			#sourceCode : 'respawn: playerColor\r\t"respawns a snake to its fixed starting location"\r\t| offsetSign newCell cells snakeSize spawnPlace |\r\t\r\t(playerColor = Color red)\r\t\tifTrue: [\r\t\t\tredSnake health: (redSnake health) - 1.\r\t\t\tboard messageArea contents: (\'Red snake health: \',(redSnake health) asString).\r\t\t\tspawnPlace := 6.\r\t\t\tsnakeSize := redSnake cells size.\r\t\t\tcells := redSnake cells.\r\t\t\tredSnake direction: #north.\r\t\t\toffsetSign := (-1) ]\r\t\tifFalse: [\r\t\t\tblueSnake health: (blueSnake health) - 1.\r\t\t\tboard messageArea contents: (\'Blue snake health: \',(blueSnake health) asString).\r\t\t\tspawnPlace := 20.\r\t\t\tsnakeSize := blueSnake cells size.\r\t\t\tcells := blueSnake cells.\r\t\t\tblueSnake direction: #south.\r\t\t\toffsetSign := 1 ].\r\r\t[ cells isEmpty ] whileFalse: [ cells last color: Color lightGray. cells removeLast ].\r\t\r\t1 to: snakeSize do: [ :offset | \r\t\tnewCell := (board rows at: spawnPlace + (offset*offsetSign)) at: spawnPlace.\r\t\t(cells isEmpty)\r\t\t\tifTrue: [newCell color: playerColor ]\r\t\t\tifFalse: [ newCell color: Color lightGray ].\r\t\tcells addLast: newCell\r\t].',			#stamp : 'p 6/25/2017 14:28',			#package : #snake_game		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #SnakeModel,				#isMetaSide : false			},			#name : #'respawn:',			#protocol : #execution,			#sourceCode : 'respawn: playerColor\r\t"respawns a snake to its fixed starting location"\r\t| offsetSign newCell cells snakeSize spawnPlace |\r\t\r\t(playerColor = Color red)\r\t\tifTrue: [\r\t\t\tredSnake decreaseHealth.\r\t\t\tboard messageArea contents: (\'Red snake health: \',(redSnake health) asString).\r\t\t\tspawnPlace := 6.\r\t\t\tsnakeSize := redSnake cells size.\r\t\t\tcells := redSnake cells.\r\t\t\tredSnake direction: #north.\r\t\t\toffsetSign := (-1) ]\r\t\tifFalse: [\r\t\t\tblueSnake decreaseHealth.\r\t\t\tboard messageArea contents: (\'Blue snake health: \',(blueSnake health) asString).\r\t\t\tspawnPlace := 20.\r\t\t\tsnakeSize := blueSnake cells size.\r\t\t\tcells := blueSnake cells.\r\t\t\tblueSnake direction: #south.\r\t\t\toffsetSign := 1 ].\r\r\t[ cells isEmpty ] whileFalse: [ cells last color: Color lightGray. cells removeLast ].\r\t\r\t1 to: snakeSize do: [ :offset | \r\t\tnewCell := (board rows at: spawnPlace + (offset*offsetSign)) at: spawnPlace.\r\t\t(cells isEmpty)\r\t\t\tifTrue: [newCell color: playerColor ]\r\t\t\tifFalse: [ newCell color: Color lightGray ].\r\t\tcells addLast: newCell\r\t].',			#stamp : 'p 6/25/2017 14:38',			#package : #snake_game		}	}}