OmEntry {	#tags : {		#author : 'p',		#time : DateAndTime [ '2017-06-25T00:46:39.016982+02:00' ],		#prior : OmReference [ 'Pharo.cnjk4i0dmndsyr4370omomkh9', '4' ],		#self : OmReference [ '1' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #SnakeModel,				#isMetaSide : false			},			#name : #executeStep,			#protocol : #execution,			#sourceCode : 'executeStep\r\tself moveSnakes.\r\tself spawnArtifact.\r\tself updateTime.\r',			#stamp : 'p 6/24/2017 21:42',			#package : #snake_game		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #SnakeModel,				#isMetaSide : false			},			#name : #executeStep,			#protocol : #execution,			#sourceCode : 'executeStep\r\tself moveSnakes.\r\tself spawnArtifact.\r\tself despawnArtifact.\r\tself updateTime.\r',			#stamp : 'p 6/25/2017 00:46',			#package : #snake_game		}	}}OmEntry {	#tags : {		#author : 'p',		#time : DateAndTime [ '2017-06-25T00:48:31.235982+02:00' ],		#prior : OmReference [ '1' ],		#self : OmReference [ '2' ]	},	#content : EpClassModification {		#oldClass : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Matrix',				#traitCompositionSource : '{}',				#definitionSource : 'Matrix subclass: #SnakeModel\r\tinstanceVariableNames: \'random board blueDirection redDirection timer blueSnake redSnake\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'snake_game\''			},			#name : #SnakeModel,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #SnakeModel,						#isMetaSide : false					},					#name : #random,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #SnakeModel,						#isMetaSide : false					},					#name : #board,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #SnakeModel,						#isMetaSide : false					},					#name : #blueDirection,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #SnakeModel,						#isMetaSide : false					},					#name : #redDirection,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #SnakeModel,						#isMetaSide : false					},					#name : #timer,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #SnakeModel,						#isMetaSide : false					},					#name : #blueSnake,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #SnakeModel,						#isMetaSide : false					},					#name : #redSnake,					#parent : @7				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'SnakeModel class\r\tinstanceVariableNames: \'\''				},				#name : #'SnakeModel class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #SnakeModel,					#isMetaSide : false				},				#parent : @7,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #snake_game,			#package : #snake_game,			#sharedPools : OrderedCollection [ ]		},		#newClass : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Matrix',				#traitCompositionSource : '{}',				#definitionSource : 'Matrix subclass: #SnakeModel\r\tinstanceVariableNames: \'random board blueDirection redDirection timer blueSnake redSnake artifactCells\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'snake_game\''			},			#name : #SnakeModel,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #SnakeModel,						#isMetaSide : false					},					#name : #random,					#parent : @35				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #SnakeModel,						#isMetaSide : false					},					#name : #board,					#parent : @35				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #SnakeModel,						#isMetaSide : false					},					#name : #blueDirection,					#parent : @35				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #SnakeModel,						#isMetaSide : false					},					#name : #redDirection,					#parent : @35				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #SnakeModel,						#isMetaSide : false					},					#name : #timer,					#parent : @35				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #SnakeModel,						#isMetaSide : false					},					#name : #blueSnake,					#parent : @35				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #SnakeModel,						#isMetaSide : false					},					#name : #redSnake,					#parent : @35				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #SnakeModel,						#isMetaSide : false					},					#name : #artifactCells,					#parent : @35				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'SnakeModel class\r\tinstanceVariableNames: \'\''				},				#name : #'SnakeModel class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @35			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #SnakeModel,					#isMetaSide : false				},				#parent : @35,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #snake_game,			#package : #snake_game,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'p',		#time : DateAndTime [ '2017-06-25T00:48:31.451982+02:00' ],		#prior : OmReference [ '2' ],		#self : OmReference [ '3' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #SnakeModel,				#isMetaSide : false			},			#name : #despawnArtifact,			#protocol : #execution,			#sourceCode : 'despawnArtifact\r\t| prob |\r\tprob := self generateRandomNumber: 100.\r\t\r\t(prob <= 3)\r\t\tifTrue: [ \r\t\t\t| x y |\r\t\t\tx := self generateRandomNumber: (artifactCells size).\r\t\t\t\r\t\t\t(self checkPosition: x@y)\r\t\t\t\tifTrue: [\r\t\t\t\t\t| type artifact |\r\t\t\t\t\ttype := self generateRandomNumber: 4.\r\t\t\t\t\tartifact := Artifact getNew: type.\r\t\t\t\t\t((board rows at: x) at: y) artifact: artifact.\r\t\t\t\t].\r\t\t].\r\t',			#stamp : 'p 6/25/2017 00:48',			#package : #snake_game		}	}}OmEntry {	#tags : {		#author : 'p',		#time : DateAndTime [ '2017-06-25T00:51:02.662982+02:00' ],		#prior : OmReference [ '3' ],		#self : OmReference [ '4' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #SnakeModel,				#isMetaSide : false			},			#name : #despawnArtifact,			#protocol : #execution,			#sourceCode : 'despawnArtifact\r\t| prob |\r\tprob := self generateRandomNumber: 100.\r\t\r\t(prob <= 3)\r\t\tifTrue: [ \r\t\t\t| x y |\r\t\t\tx := self generateRandomNumber: (artifactCells size).\r\t\t\t\r\t\t\t(self checkPosition: x@y)\r\t\t\t\tifTrue: [\r\t\t\t\t\t| type artifact |\r\t\t\t\t\ttype := self generateRandomNumber: 4.\r\t\t\t\t\tartifact := Artifact getNew: type.\r\t\t\t\t\t((board rows at: x) at: y) artifact: artifact.\r\t\t\t\t].\r\t\t].\r\t',			#stamp : 'p 6/25/2017 00:48',			#package : #snake_game		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #SnakeModel,				#isMetaSide : false			},			#name : #despawnArtifact,			#protocol : #execution,			#sourceCode : 'despawnArtifact\r\t| prob |\r\tprob := self generateRandomNumber: 100.\r\t\r\t(prob <= 3)\r\t\tifTrue: [ \r\t\t\t| a |\r\t\t\ta := self generateRandomNumber: (artifactCells size).\r\t\t\t\r\t\t\ta artifact: nil.\r\t\t\tartifactCells remove: a.\r\t\t].\r\t',			#stamp : 'p 6/25/2017 00:51',			#package : #snake_game		}	}}OmEntry {	#tags : {		#author : 'p',		#time : DateAndTime [ '2017-06-25T00:51:56.225982+02:00' ],		#prior : OmReference [ '4' ],		#self : OmReference [ '5' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #SnakeModel,				#isMetaSide : false			},			#name : #spawnArtifact,			#protocol : #execution,			#sourceCode : 'spawnArtifact\r\t| prob |\r\tprob := self generateRandomNumber: 100.\r\t\r\t(prob <= 5)\r\t\tifTrue: [ \r\t\t\t| x y |\r\t\t\tx := self generateRandomNumber: 25.\r\t\t\ty := self generateRandomNumber: 25.\r\t\t\t\r\t\t\t(self checkPosition: x@y)\r\t\t\t\tifTrue: [\r\t\t\t\t\t| type artifact |\r\t\t\t\t\ttype := self generateRandomNumber: 4.\r\t\t\t\t\tartifact := Artifact getNew: type.\r\t\t\t\t\t((board rows at: x) at: y) artifact: artifact.\r\t\t\t\t].\r\t\t].\r\t',			#stamp : 'p 6/24/2017 22:16',			#package : #snake_game		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #SnakeModel,				#isMetaSide : false			},			#name : #spawnArtifact,			#protocol : #execution,			#sourceCode : 'spawnArtifact\r\t| prob |\r\tprob := self generateRandomNumber: 100.\r\t\r\t(prob <= 5)\r\t\tifTrue: [ \r\t\t\t| x y |\r\t\t\tx := self generateRandomNumber: 25.\r\t\t\ty := self generateRandomNumber: 25.\r\t\t\t\r\t\t\t(self checkPosition: x@y)\r\t\t\t\tifTrue: [\r\t\t\t\t\t| type artifact newCell |\r\t\t\t\t\ttype := self generateRandomNumber: 4.\r\t\t\t\t\tartifact := Artifact getNew: type.\r\t\t\t\t\tnewCell := ((board rows at: x) at: y).\r\t\t\t\t\tnewCell artifact: artifact.\r\t\t\t\t\tartifactCells add: newCell.\r\t\t\t\t].\r\t\t].\r\t',			#stamp : 'p 6/25/2017 00:51',			#package : #snake_game		}	}}OmEntry {	#tags : {		#author : 'p',		#time : DateAndTime [ '2017-06-25T00:52:53.989982+02:00' ],		#prior : OmReference [ '5' ],		#self : OmReference [ '6' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #SnakeModel,				#isMetaSide : false			},			#name : #executeStep,			#protocol : #execution,			#sourceCode : 'executeStep\r\tself moveSnakes.\r\tself spawnArtifact.\r\tself despawnArtifact.\r\tself updateTime.\r',			#stamp : 'p 6/25/2017 00:46',			#package : #snake_game		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #SnakeModel,				#isMetaSide : false			},			#name : #executeStep,			#protocol : #execution,			#sourceCode : 'executeStep\r\tself moveSnakes.\r\tself spawnArtifact.\r\tartifactCells notEmpty\r\t\tifTrue: [ self despawnArtifact. ].\r\tself updateTime.\r',			#stamp : 'p 6/25/2017 00:52',			#package : #snake_game		}	}}OmEntry {	#tags : {		#author : 'p',		#time : DateAndTime [ '2017-06-25T00:53:12.111982+02:00' ],		#prior : OmReference [ '6' ],		#self : OmReference [ '7' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #SnakeModel,				#isMetaSide : false			},			#name : #initialize,			#protocol : #initialize,			#sourceCode : 'initialize\r\tsuper initialize.\r\tblueDirection := #south.\r\tredDirection := #north.\r\t"blueCells := OrderedCollection new.\r\tredCells := OrderedCollection new."\r\tblueSnake := Snake new.\r\tredSnake := Snake new.\r\t\r\tblueSnake size: 4.\r\tblueSnake cells: OrderedCollection new.\r\tblueSnake color: Color blue.\r\tblueSnake health: 10.\r\t\r\tredSnake size: 4.\r\tredSnake cells: OrderedCollection new.\r\tredSnake color: Color red.\r\tredSnake health: 10.\r\t\t\r\ttimer := 600.\r\trandom := Random new.',			#stamp : 'p 6/24/2017 21:59',			#package : #snake_game		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #SnakeModel,				#isMetaSide : false			},			#name : #initialize,			#protocol : #initialize,			#sourceCode : 'initialize\r\tsuper initialize.\r\tblueDirection := #south.\r\tredDirection := #north.\r\t"blueCells := OrderedCollection new.\r\tredCells := OrderedCollection new."\r\tblueSnake := Snake new.\r\tredSnake := Snake new.\r\t\r\tblueSnake size: 4.\r\tblueSnake cells: OrderedCollection new.\r\tblueSnake color: Color blue.\r\tblueSnake health: 10.\r\t\r\tredSnake size: 4.\r\tredSnake cells: OrderedCollection new.\r\tredSnake color: Color red.\r\tredSnake health: 10.\r\t\t\r\ttimer := 600.\r\trandom := Random new.\r\tartifactCells := Set new.',			#stamp : 'p 6/25/2017 00:53',			#package : #snake_game		}	}}OmEntry {	#tags : {		#author : 'p',		#time : DateAndTime [ '2017-06-25T00:54:27.349982+02:00' ],		#prior : OmReference [ '7' ],		#self : OmReference [ '8' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #SnakeModel,				#isMetaSide : false			},			#name : #despawnArtifacts,			#protocol : #execution,			#sourceCode : 'despawnArtifacts\r\t| prob |\r\tprob := self generateRandomNumber: 100.\r\t\r\t(prob <= 3)\r\t\tifTrue: [ \r\t\t\t| a |\r\t\t\ta := self generateRandomNumber: (artifactCells size).\r\t\t\t\r\t\t\ta artifact: nil.\r\t\t\tartifactCells remove: a.\r\t\t].\r\t',			#stamp : 'p 6/25/2017 00:54',			#package : #snake_game		}	}}OmEntry {	#tags : {		#author : 'p',		#time : DateAndTime [ '2017-06-25T00:54:34.654982+02:00' ],		#prior : OmReference [ '8' ],		#self : OmReference [ '9' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #SnakeModel,				#isMetaSide : false			},			#name : #despawnArtifact,			#protocol : #execution,			#sourceCode : 'despawnArtifact\r\t| prob |\r\tprob := self generateRandomNumber: 100.\r\t\r\t(prob <= 3)\r\t\tifTrue: [ \r\t\t\t| a |\r\t\t\ta := self generateRandomNumber: (artifactCells size).\r\t\t\t\r\t\t\ta artifact: nil.\r\t\t\tartifactCells remove: a.\r\t\t].\r\t',			#stamp : 'p 6/25/2017 00:51',			#package : #snake_game		}	}}OmEntry {	#tags : {		#author : 'p',		#time : DateAndTime [ '2017-06-25T00:54:42.910982+02:00' ],		#prior : OmReference [ '9' ],		#self : OmReference [ '10' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #SnakeModel,				#isMetaSide : false			},			#name : #executeStep,			#protocol : #execution,			#sourceCode : 'executeStep\r\tself moveSnakes.\r\tself spawnArtifact.\r\tartifactCells notEmpty\r\t\tifTrue: [ self despawnArtifact. ].\r\tself updateTime.\r',			#stamp : 'p 6/25/2017 00:52',			#package : #snake_game		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #SnakeModel,				#isMetaSide : false			},			#name : #executeStep,			#protocol : #execution,			#sourceCode : 'executeStep\r\tself moveSnakes.\r\tself spawnArtifact.\r\tartifactCells notEmpty\r\t\tifTrue: [ self despawnArtifacts. ].\r\tself updateTime.\r',			#stamp : 'p 6/25/2017 00:54',			#package : #snake_game		}	}}OmEntry {	#tags : {		#author : 'p',		#time : DateAndTime [ '2017-06-25T00:54:55.847982+02:00' ],		#prior : OmReference [ '10' ],		#self : OmReference [ '11' ]	},	#content : EpRenameMethodRefactoring {		#oldSelector : #spawnArtifact,		#newSelector : #spawnArtifacts,		#affectedClassName : #SnakeModel	}}OmEntry {	#tags : {		#author : 'p',		#prior : OmReference [ '11' ],		#self : OmReference [ '12' ],		#time : DateAndTime [ '2017-06-25T00:54:55.871982+02:00' ],		#trigger : @3	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #SnakeModel,				#isMetaSide : false			},			#name : #spawnArtifacts,			#protocol : #execution,			#sourceCode : 'spawnArtifacts\r\t| prob |\r\tprob := self generateRandomNumber: 100.\r\t\r\t(prob <= 5)\r\t\tifTrue: [ \r\t\t\t| x y |\r\t\t\tx := self generateRandomNumber: 25.\r\t\t\ty := self generateRandomNumber: 25.\r\t\t\t\r\t\t\t(self checkPosition: x@y)\r\t\t\t\tifTrue: [\r\t\t\t\t\t| type artifact newCell |\r\t\t\t\t\ttype := self generateRandomNumber: 4.\r\t\t\t\t\tartifact := Artifact getNew: type.\r\t\t\t\t\tnewCell := ((board rows at: x) at: y).\r\t\t\t\t\tnewCell artifact: artifact.\r\t\t\t\t\tartifactCells add: newCell.\r\t\t\t\t].\r\t\t].\r\t',			#stamp : 'p 6/25/2017 00:54',			#package : #snake_game		}	}}OmEntry {	#tags : {		#author : 'p',		#prior : OmReference [ '12' ],		#self : OmReference [ '13' ],		#time : DateAndTime [ '2017-06-25T00:54:55.880982+02:00' ],		#trigger : OmReference [ '11' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #SnakeModel,				#isMetaSide : false			},			#name : #executeStep,			#protocol : #execution,			#sourceCode : 'executeStep\r\tself moveSnakes.\r\tself spawnArtifact.\r\tartifactCells notEmpty\r\t\tifTrue: [ self despawnArtifacts. ].\r\tself updateTime.\r',			#stamp : 'p 6/25/2017 00:54',			#package : #snake_game		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #SnakeModel,				#isMetaSide : false			},			#name : #executeStep,			#protocol : #execution,			#sourceCode : 'executeStep\r\tself moveSnakes.\r\tself spawnArtifacts.\r\tartifactCells notEmpty\r\t\tifTrue: [ self despawnArtifacts. ].\r\tself updateTime.\r',			#stamp : 'p 6/25/2017 00:54',			#package : #snake_game		}	}}OmEntry {	#tags : {		#author : 'p',		#prior : OmReference [ '13' ],		#self : OmReference [ '14' ],		#time : DateAndTime [ '2017-06-25T00:54:55.884982+02:00' ],		#trigger : OmReference [ '11' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #SnakeModel,				#isMetaSide : false			},			#name : #spawnArtifact,			#protocol : #execution,			#sourceCode : 'spawnArtifact\r\t| prob |\r\tprob := self generateRandomNumber: 100.\r\t\r\t(prob <= 5)\r\t\tifTrue: [ \r\t\t\t| x y |\r\t\t\tx := self generateRandomNumber: 25.\r\t\t\ty := self generateRandomNumber: 25.\r\t\t\t\r\t\t\t(self checkPosition: x@y)\r\t\t\t\tifTrue: [\r\t\t\t\t\t| type artifact newCell |\r\t\t\t\t\ttype := self generateRandomNumber: 4.\r\t\t\t\t\tartifact := Artifact getNew: type.\r\t\t\t\t\tnewCell := ((board rows at: x) at: y).\r\t\t\t\t\tnewCell artifact: artifact.\r\t\t\t\t\tartifactCells add: newCell.\r\t\t\t\t].\r\t\t].\r\t',			#stamp : 'p 6/25/2017 00:51',			#package : #snake_game		}	}}OmEntry {	#tags : {		#author : 'p',		#time : DateAndTime [ '2017-06-25T00:55:15.223982+02:00' ],		#prior : OmReference [ '14' ],		#self : OmReference [ '15' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #SnakeModel,				#isMetaSide : false			},			#name : #'moveEast:',			#protocol : #execution,			#sourceCode : 'moveEast: player\r\t| retCol firstCell newCell lastCell playerColor |\r\tfirstCell := (player cells) first.\r\tplayerColor := player color.\r\t(firstCell column = 1)\r\t\tifTrue: [ self respawn: playerColor ]\r\t\tifFalse: [\r\t\t\r\t\tretCol := self checkCollision: (player cells) col: playerColor.  \r\t\t\t\r\t\t(retCol = playerColor)\r\t\t\tifTrue: [ self respawn: playerColor ].\r\t\t(retCol = Color lightGray)\r\t\t\tifFalse: [ self respawn: retCol ]\r\t\t\tifTrue: [\r\t\t\t\tnewCell := board rows: (firstCell row) at: (firstCell column)-1.\r\t\t\t\tlastCell := (player cells) last.\t\t\r\t\r\t\t\t\tnewCell color: playerColor.\r\t\t\t\tlastCell color: Color lightGray.\r\t\r\t\t\t\t(player cells) addFirst: newCell.\r\t\t\t\t(player cells) removeLast.\r\t\t\t]\r\t\t].',			#stamp : 'p 6/24/2017 19:08',			#package : #snake_game		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #SnakeModel,				#isMetaSide : false			},			#name : #'moveEast:',			#protocol : #direction,			#sourceCode : 'moveEast: player\r\t| retCol firstCell newCell lastCell playerColor |\r\tfirstCell := (player cells) first.\r\tplayerColor := player color.\r\t(firstCell column = 1)\r\t\tifTrue: [ self respawn: playerColor ]\r\t\tifFalse: [\r\t\t\r\t\tretCol := self checkCollision: (player cells) col: playerColor.  \r\t\t\t\r\t\t(retCol = playerColor)\r\t\t\tifTrue: [ self respawn: playerColor ].\r\t\t(retCol = Color lightGray)\r\t\t\tifFalse: [ self respawn: retCol ]\r\t\t\tifTrue: [\r\t\t\t\tnewCell := board rows: (firstCell row) at: (firstCell column)-1.\r\t\t\t\tlastCell := (player cells) last.\t\t\r\t\r\t\t\t\tnewCell color: playerColor.\r\t\t\t\tlastCell color: Color lightGray.\r\t\r\t\t\t\t(player cells) addFirst: newCell.\r\t\t\t\t(player cells) removeLast.\r\t\t\t]\r\t\t].',			#stamp : 'p 6/24/2017 19:08',			#package : #snake_game		}	}}OmEntry {	#tags : {		#author : 'p',		#time : DateAndTime [ '2017-06-25T00:55:15.234982+02:00' ],		#prior : OmReference [ '15' ],		#self : OmReference [ '16' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #SnakeModel,				#isMetaSide : false			},			#name : #'moveSouth:',			#protocol : #execution,			#sourceCode : 'moveSouth: player\r\t| firstCell newCell lastCell playerColor retCol |\r\tfirstCell := (player cells) first.\r\tplayerColor := player color.\r\t(firstCell row = 1)\r\t\tifTrue: [ self respawn: playerColor ]\r\t\tifFalse: [\r\t\t\r\t\tretCol := self checkCollision: (player cells) col: playerColor.\r\t\t\t\r\t\t(retCol = playerColor)\r\t\t\tifTrue: [ self respawn: playerColor ].\r\t\t(retCol = Color lightGray)\r\t\t\tifFalse: [ self respawn: retCol ]\r\t\t\tifTrue: [ \t\t\t\r\t\t\t\tnewCell := board rows: (firstCell row)-1 at: (firstCell column).\r\t\t\t\tlastCell := (player cells) last.\r\t\r\t\t\t\tnewCell color: playerColor.\r\t\t\t\tlastCell color: Color lightGray.\r\t\r\t\t\t\t(player cells) addFirst: newCell.\r\t\t\t\t(player cells) removeLast.\r\t\t\t]\r\t\t].',			#stamp : 'p 6/24/2017 19:08',			#package : #snake_game		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #SnakeModel,				#isMetaSide : false			},			#name : #'moveSouth:',			#protocol : #direction,			#sourceCode : 'moveSouth: player\r\t| firstCell newCell lastCell playerColor retCol |\r\tfirstCell := (player cells) first.\r\tplayerColor := player color.\r\t(firstCell row = 1)\r\t\tifTrue: [ self respawn: playerColor ]\r\t\tifFalse: [\r\t\t\r\t\tretCol := self checkCollision: (player cells) col: playerColor.\r\t\t\t\r\t\t(retCol = playerColor)\r\t\t\tifTrue: [ self respawn: playerColor ].\r\t\t(retCol = Color lightGray)\r\t\t\tifFalse: [ self respawn: retCol ]\r\t\t\tifTrue: [ \t\t\t\r\t\t\t\tnewCell := board rows: (firstCell row)-1 at: (firstCell column).\r\t\t\t\tlastCell := (player cells) last.\r\t\r\t\t\t\tnewCell color: playerColor.\r\t\t\t\tlastCell color: Color lightGray.\r\t\r\t\t\t\t(player cells) addFirst: newCell.\r\t\t\t\t(player cells) removeLast.\r\t\t\t]\r\t\t].',			#stamp : 'p 6/24/2017 19:08',			#package : #snake_game		}	}}OmEntry {	#tags : {		#author : 'p',		#time : DateAndTime [ '2017-06-25T00:55:15.264982+02:00' ],		#prior : OmReference [ '16' ],		#self : OmReference [ '17' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #SnakeModel,				#isMetaSide : false			},			#name : #'moveNorth:',			#protocol : #execution,			#sourceCode : 'moveNorth: player\r\t| firstCell newCell lastCell playerColor retCol |\r\tfirstCell := (player cells) first.\r\tplayerColor := player color.\r\t(firstCell row = 25)\r\t\tifTrue: [ self respawn: playerColor ]\r\t\tifFalse: [\r\t\t\t\r\t\tretCol := self checkCollision: (player cells) col: playerColor.\r\t\t\t\r\t\t(retCol = playerColor)\r\t\t\tifTrue: [ self respawn: playerColor ].\r\t\t(retCol = Color lightGray)\r\t\t\tifFalse: [ self respawn: retCol ]\r\t\t\tifTrue: [ \r\t\t\t\tnewCell := board rows: (firstCell row)+1 at: (firstCell column).\r\t\t\t\tlastCell := (player cells) last.\r\t\r\t\t\t\tnewCell color: playerColor.\r\t\t\t\tlastCell color: Color lightGray.\r\t\r\t\t\t\t(player cells) addFirst: newCell.\r\t\t\t\t(player cells) removeLast.\r\t\t\t]\r\t\t].',			#stamp : 'p 6/24/2017 19:08',			#package : #snake_game		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #SnakeModel,				#isMetaSide : false			},			#name : #'moveNorth:',			#protocol : #direction,			#sourceCode : 'moveNorth: player\r\t| firstCell newCell lastCell playerColor retCol |\r\tfirstCell := (player cells) first.\r\tplayerColor := player color.\r\t(firstCell row = 25)\r\t\tifTrue: [ self respawn: playerColor ]\r\t\tifFalse: [\r\t\t\t\r\t\tretCol := self checkCollision: (player cells) col: playerColor.\r\t\t\t\r\t\t(retCol = playerColor)\r\t\t\tifTrue: [ self respawn: playerColor ].\r\t\t(retCol = Color lightGray)\r\t\t\tifFalse: [ self respawn: retCol ]\r\t\t\tifTrue: [ \r\t\t\t\tnewCell := board rows: (firstCell row)+1 at: (firstCell column).\r\t\t\t\tlastCell := (player cells) last.\r\t\r\t\t\t\tnewCell color: playerColor.\r\t\t\t\tlastCell color: Color lightGray.\r\t\r\t\t\t\t(player cells) addFirst: newCell.\r\t\t\t\t(player cells) removeLast.\r\t\t\t]\r\t\t].',			#stamp : 'p 6/24/2017 19:08',			#package : #snake_game		}	}}OmEntry {	#tags : {		#author : 'p',		#time : DateAndTime [ '2017-06-25T00:55:15.289982+02:00' ],		#prior : OmReference [ '17' ],		#self : OmReference [ '18' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #SnakeModel,				#isMetaSide : false			},			#name : #moveSnakes,			#protocol : #execution,			#sourceCode : 'moveSnakes\r\r\tblueDirection = #north\r\t\tifTrue: [ self moveNorth: blueSnake ].\r\tblueDirection = #south\r\t\tifTrue: [ self moveSouth: blueSnake ].\r\tblueDirection = #east\r\t\tifTrue: [ self moveEast: blueSnake ].\r\tblueDirection = #west\r\t\tifTrue: [ self moveWest: blueSnake ].\r\t\t\r\tredDirection = #north\r\t\tifTrue: [ self moveNorth: redSnake ].\r\tredDirection = #south\r\t\tifTrue: [ self moveSouth: redSnake ].\r\tredDirection = #east\r\t\tifTrue: [ self moveEast: redSnake ].\r\tredDirection = #west\r\t\tifTrue: [ self moveWest: redSnake ].',			#stamp : 'p 6/24/2017 20:15',			#package : #snake_game		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #SnakeModel,				#isMetaSide : false			},			#name : #moveSnakes,			#protocol : #direction,			#sourceCode : 'moveSnakes\r\r\tblueDirection = #north\r\t\tifTrue: [ self moveNorth: blueSnake ].\r\tblueDirection = #south\r\t\tifTrue: [ self moveSouth: blueSnake ].\r\tblueDirection = #east\r\t\tifTrue: [ self moveEast: blueSnake ].\r\tblueDirection = #west\r\t\tifTrue: [ self moveWest: blueSnake ].\r\t\t\r\tredDirection = #north\r\t\tifTrue: [ self moveNorth: redSnake ].\r\tredDirection = #south\r\t\tifTrue: [ self moveSouth: redSnake ].\r\tredDirection = #east\r\t\tifTrue: [ self moveEast: redSnake ].\r\tredDirection = #west\r\t\tifTrue: [ self moveWest: redSnake ].',			#stamp : 'p 6/24/2017 20:15',			#package : #snake_game		}	}}OmEntry {	#tags : {		#author : 'p',		#time : DateAndTime [ '2017-06-25T00:55:18.638982+02:00' ],		#prior : OmReference [ '18' ],		#self : OmReference [ '19' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #SnakeModel,				#isMetaSide : false			},			#name : #'moveWest:',			#protocol : #execution,			#sourceCode : 'moveWest: player\r\t| firstCell newCell lastCell playerColor retCol |\r\tfirstCell := (player cells) first.\r\tplayerColor := player color.\r\t(firstCell column = 25)\r\t\tifTrue: [ self respawn: playerColor ]\r\t\tifFalse: [\r\t\t\t\r\t\tretCol := self checkCollision: (player cells) col: playerColor.\r\t\t\r\t\t(retCol = playerColor)\r\t\t\tifTrue: [ self respawn: playerColor ].\r\t\t(retCol = Color lightGray)\r\t\t\tifFalse: [ self respawn: retCol ]\r\t\t\tifTrue: [\r\t\t\t\tnewCell := board rows: (firstCell row) at: (firstCell column)+1.\r\t\t\t\tlastCell := (player cells) last.\r\t\r\t\t\t\tnewCell color: playerColor.\r\t\t\t\tlastCell color: Color lightGray.\r\t\r\t\t\t\t(player cells) addFirst: newCell.\r\t\t\t\t(player cells) removeLast.\r\t\t\t]\r\t\t].',			#stamp : 'p 6/24/2017 19:08',			#package : #snake_game		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #SnakeModel,				#isMetaSide : false			},			#name : #'moveWest:',			#protocol : #direction,			#sourceCode : 'moveWest: player\r\t| firstCell newCell lastCell playerColor retCol |\r\tfirstCell := (player cells) first.\r\tplayerColor := player color.\r\t(firstCell column = 25)\r\t\tifTrue: [ self respawn: playerColor ]\r\t\tifFalse: [\r\t\t\t\r\t\tretCol := self checkCollision: (player cells) col: playerColor.\r\t\t\r\t\t(retCol = playerColor)\r\t\t\tifTrue: [ self respawn: playerColor ].\r\t\t(retCol = Color lightGray)\r\t\t\tifFalse: [ self respawn: retCol ]\r\t\t\tifTrue: [\r\t\t\t\tnewCell := board rows: (firstCell row) at: (firstCell column)+1.\r\t\t\t\tlastCell := (player cells) last.\r\t\r\t\t\t\tnewCell color: playerColor.\r\t\t\t\tlastCell color: Color lightGray.\r\t\r\t\t\t\t(player cells) addFirst: newCell.\r\t\t\t\t(player cells) removeLast.\r\t\t\t]\r\t\t].',			#stamp : 'p 6/24/2017 19:08',			#package : #snake_game		}	}}OmEntry {	#tags : {		#author : 'p',		#time : DateAndTime [ '2017-06-25T00:55:23.979982+02:00' ],		#prior : OmReference [ '19' ],		#self : OmReference [ '20' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #SnakeModel,				#isMetaSide : false			},			#name : #moveSnakes,			#protocol : #direction,			#sourceCode : 'moveSnakes\r\r\tblueDirection = #north\r\t\tifTrue: [ self moveNorth: blueSnake ].\r\tblueDirection = #south\r\t\tifTrue: [ self moveSouth: blueSnake ].\r\tblueDirection = #east\r\t\tifTrue: [ self moveEast: blueSnake ].\r\tblueDirection = #west\r\t\tifTrue: [ self moveWest: blueSnake ].\r\t\t\r\tredDirection = #north\r\t\tifTrue: [ self moveNorth: redSnake ].\r\tredDirection = #south\r\t\tifTrue: [ self moveSouth: redSnake ].\r\tredDirection = #east\r\t\tifTrue: [ self moveEast: redSnake ].\r\tredDirection = #west\r\t\tifTrue: [ self moveWest: redSnake ].',			#stamp : 'p 6/24/2017 20:15',			#package : #snake_game		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #SnakeModel,				#isMetaSide : false			},			#name : #moveSnakes,			#protocol : #execution,			#sourceCode : 'moveSnakes\r\r\tblueDirection = #north\r\t\tifTrue: [ self moveNorth: blueSnake ].\r\tblueDirection = #south\r\t\tifTrue: [ self moveSouth: blueSnake ].\r\tblueDirection = #east\r\t\tifTrue: [ self moveEast: blueSnake ].\r\tblueDirection = #west\r\t\tifTrue: [ self moveWest: blueSnake ].\r\t\t\r\tredDirection = #north\r\t\tifTrue: [ self moveNorth: redSnake ].\r\tredDirection = #south\r\t\tifTrue: [ self moveSouth: redSnake ].\r\tredDirection = #east\r\t\tifTrue: [ self moveEast: redSnake ].\r\tredDirection = #west\r\t\tifTrue: [ self moveWest: redSnake ].',			#stamp : 'p 6/24/2017 20:15',			#package : #snake_game		}	}}OmEntry {	#tags : {		#author : 'p',		#time : DateAndTime [ '2017-06-25T00:55:44.360982+02:00' ],		#prior : OmReference [ '20' ],		#self : OmReference [ '21' ]	},	#content : EpProtocolAddition {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Matrix',				#traitCompositionSource : '{}',				#definitionSource : 'Matrix subclass: #SnakeModel\r\tinstanceVariableNames: \'random board blueDirection redDirection timer blueSnake redSnake artifactCells\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'snake_game\''			},			#name : #SnakeModel,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #SnakeModel,						#isMetaSide : false					},					#name : #random,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #SnakeModel,						#isMetaSide : false					},					#name : #board,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #SnakeModel,						#isMetaSide : false					},					#name : #blueDirection,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #SnakeModel,						#isMetaSide : false					},					#name : #redDirection,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #SnakeModel,						#isMetaSide : false					},					#name : #timer,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #SnakeModel,						#isMetaSide : false					},					#name : #blueSnake,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #SnakeModel,						#isMetaSide : false					},					#name : #redSnake,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #SnakeModel,						#isMetaSide : false					},					#name : #artifactCells,					#parent : @7				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'SnakeModel class\r\tinstanceVariableNames: \'\''				},				#name : #'SnakeModel class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #SnakeModel,					#isMetaSide : false				},				#parent : @7,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #snake_game,			#package : #snake_game,			#sharedPools : OrderedCollection [ ]		},		#protocol : #'artifact handling'	}}OmEntry {	#tags : {		#author : 'p',		#time : DateAndTime [ '2017-06-25T00:55:52.667982+02:00' ],		#prior : OmReference [ '21' ],		#self : OmReference [ '22' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #SnakeModel,				#isMetaSide : false			},			#name : #spawnArtifacts,			#protocol : #execution,			#sourceCode : 'spawnArtifacts\r\t| prob |\r\tprob := self generateRandomNumber: 100.\r\t\r\t(prob <= 5)\r\t\tifTrue: [ \r\t\t\t| x y |\r\t\t\tx := self generateRandomNumber: 25.\r\t\t\ty := self generateRandomNumber: 25.\r\t\t\t\r\t\t\t(self checkPosition: x@y)\r\t\t\t\tifTrue: [\r\t\t\t\t\t| type artifact newCell |\r\t\t\t\t\ttype := self generateRandomNumber: 4.\r\t\t\t\t\tartifact := Artifact getNew: type.\r\t\t\t\t\tnewCell := ((board rows at: x) at: y).\r\t\t\t\t\tnewCell artifact: artifact.\r\t\t\t\t\tartifactCells add: newCell.\r\t\t\t\t].\r\t\t].\r\t',			#stamp : 'p 6/25/2017 00:54',			#package : #snake_game		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #SnakeModel,				#isMetaSide : false			},			#name : #spawnArtifacts,			#protocol : #'artifact handling',			#sourceCode : 'spawnArtifacts\r\t| prob |\r\tprob := self generateRandomNumber: 100.\r\t\r\t(prob <= 5)\r\t\tifTrue: [ \r\t\t\t| x y |\r\t\t\tx := self generateRandomNumber: 25.\r\t\t\ty := self generateRandomNumber: 25.\r\t\t\t\r\t\t\t(self checkPosition: x@y)\r\t\t\t\tifTrue: [\r\t\t\t\t\t| type artifact newCell |\r\t\t\t\t\ttype := self generateRandomNumber: 4.\r\t\t\t\t\tartifact := Artifact getNew: type.\r\t\t\t\t\tnewCell := ((board rows at: x) at: y).\r\t\t\t\t\tnewCell artifact: artifact.\r\t\t\t\t\tartifactCells add: newCell.\r\t\t\t\t].\r\t\t].\r\t',			#stamp : 'p 6/25/2017 00:54',			#package : #snake_game		}	}}OmEntry {	#tags : {		#author : 'p',		#time : DateAndTime [ '2017-06-25T00:55:55.098982+02:00' ],		#prior : OmReference [ '22' ],		#self : OmReference [ '23' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #SnakeModel,				#isMetaSide : false			},			#name : #despawnArtifacts,			#protocol : #execution,			#sourceCode : 'despawnArtifacts\r\t| prob |\r\tprob := self generateRandomNumber: 100.\r\t\r\t(prob <= 3)\r\t\tifTrue: [ \r\t\t\t| a |\r\t\t\ta := self generateRandomNumber: (artifactCells size).\r\t\t\t\r\t\t\ta artifact: nil.\r\t\t\tartifactCells remove: a.\r\t\t].\r\t',			#stamp : 'p 6/25/2017 00:54',			#package : #snake_game		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #SnakeModel,				#isMetaSide : false			},			#name : #despawnArtifacts,			#protocol : #'artifact handling',			#sourceCode : 'despawnArtifacts\r\t| prob |\r\tprob := self generateRandomNumber: 100.\r\t\r\t(prob <= 3)\r\t\tifTrue: [ \r\t\t\t| a |\r\t\t\ta := self generateRandomNumber: (artifactCells size).\r\t\t\t\r\t\t\ta artifact: nil.\r\t\t\tartifactCells remove: a.\r\t\t].\r\t',			#stamp : 'p 6/25/2017 00:54',			#package : #snake_game		}	}}OmEntry {	#tags : {		#author : 'p',		#time : DateAndTime [ '2017-06-25T00:56:41.406982+02:00' ],		#prior : OmReference [ '23' ],		#self : OmReference [ '24' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #SnakeModel,				#isMetaSide : false			},			#name : #'despawnSingleArtifact:',			#protocol : #'artifact handling',			#sourceCode : 'despawnSingleArtifact: aCell\r',			#stamp : 'p 6/25/2017 00:56',			#package : #snake_game		}	}}OmEntry {	#tags : {		#author : 'p',		#time : DateAndTime [ '2017-06-25T00:57:20.088982+02:00' ],		#prior : OmReference [ '24' ],		#self : OmReference [ '25' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #SnakeModel,				#isMetaSide : false			},			#name : #executeStep,			#protocol : #execution,			#sourceCode : 'executeStep\r\tself moveSnakes.\r\tself spawnArtifacts.\r\tartifactCells notEmpty\r\t\tifTrue: [ self despawnArtifacts. ].\r\tself updateTime.\r',			#stamp : 'p 6/25/2017 00:54',			#package : #snake_game		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #SnakeModel,				#isMetaSide : false			},			#name : #executeStep,			#protocol : #execution,			#sourceCode : 'executeStep\r\tself moveSnakes.\r\tself spawnArtifacts.\r\tself despawnArtifacts.\r\tself updateTime.\r',			#stamp : 'p 6/25/2017 00:57',			#package : #snake_game		}	}}OmEntry {	#tags : {		#author : 'p',		#time : DateAndTime [ '2017-06-25T00:58:19.057982+02:00' ],		#prior : OmReference [ '25' ],		#self : OmReference [ '26' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #SnakeModel,				#isMetaSide : false			},			#name : #despawnArtifacts,			#protocol : #'artifact handling',			#sourceCode : 'despawnArtifacts\r\t| prob |\r\tprob := self generateRandomNumber: 100.\r\t\r\t(prob <= 3)\r\t\tifTrue: [ \r\t\t\t| a |\r\t\t\ta := self generateRandomNumber: (artifactCells size).\r\t\t\t\r\t\t\ta artifact: nil.\r\t\t\tartifactCells remove: a.\r\t\t].\r\t',			#stamp : 'p 6/25/2017 00:56',			#package : #snake_game		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #SnakeModel,				#isMetaSide : false			},			#name : #despawnArtifacts,			#protocol : #'artifact handling',			#sourceCode : 'despawnArtifacts\r\t| prob |\r\tprob := self generateRandomNumber: 100.\r\t\r\t(prob <= 3)\r\t\tifTrue: [ \r\t\t\tartifactCells notEmpty\r\t\t\t\tifTrue: [\r\t\t\t\t\t| a |\r\t\t\t\t\ta := self generateRandomNumber: (artifactCells size).\r\t\t\t\r\t\t\t\t\ta artifact: nil.\r\t\t\t\t\tartifactCells remove: a.\r\t\t\t\t].\r\t\t].\r\t',			#stamp : 'p 6/25/2017 00:58',			#package : #snake_game		}	}}OmEntry {	#tags : {		#author : 'p',		#time : DateAndTime [ '2017-06-25T00:58:25.180982+02:00' ],		#prior : OmReference [ '26' ],		#self : OmReference [ '27' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #SnakeModel,				#isMetaSide : false			},			#name : #'despawnSingleArtifact:',			#protocol : #'artifact handling',			#sourceCode : 'despawnSingleArtifact: aCell\r',			#stamp : 'p 6/25/2017 00:56',			#package : #snake_game		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #SnakeModel,				#isMetaSide : false			},			#name : #'despawnSingleArtifact:',			#protocol : #'artifact handling',			#sourceCode : 'despawnSingleArtifact: cellNum\r',			#stamp : 'p 6/25/2017 00:58',			#package : #snake_game		}	}}OmEntry {	#tags : {		#author : 'p',		#time : DateAndTime [ '2017-06-25T00:58:54.762982+02:00' ],		#prior : OmReference [ '27' ],		#self : OmReference [ '28' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #SnakeModel,				#isMetaSide : false			},			#name : #despawnArtifacts,			#protocol : #'artifact handling',			#sourceCode : 'despawnArtifacts\r\t| prob |\r\tprob := self generateRandomNumber: 100.\r\t\r\t(prob <= 3)\r\t\tifTrue: [ \r\t\t\tartifactCells notEmpty\r\t\t\t\tifTrue: [\r\t\t\t\t\t| a |\r\t\t\t\t\ta := self generateRandomNumber: (artifactCells size).\r\t\t\t\r\t\t\t\t\ta artifact: nil.\r\t\t\t\t\tartifactCells remove: a.\r\t\t\t\t].\r\t\t].\r\t',			#stamp : 'p 6/25/2017 00:58',			#package : #snake_game		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #SnakeModel,				#isMetaSide : false			},			#name : #despawnArtifacts,			#protocol : #'artifact handling',			#sourceCode : 'despawnArtifacts\r\t| prob |\r\tprob := self generateRandomNumber: 100.\r\t\r\t(prob <= 3)\r\t\tifTrue: [ \r\t\t\tartifactCells notEmpty\r\t\t\t\tifTrue: [\r\t\t\t\t\t| a |\r\t\t\t\t\ta := self generateRandomNumber: (artifactCells size).\r\t\t\t\r\t\t\t\t\tself despawnSingleArtifact a.\r\t\t\t\t].\r\t\t].\r\t',			#stamp : 'p 6/25/2017 00:58',			#package : #snake_game		}	}}OmEntry {	#tags : {		#author : 'p',		#time : DateAndTime [ '2017-06-25T00:58:58.864982+02:00' ],		#prior : OmReference [ '28' ],		#self : OmReference [ '29' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #SnakeModel,				#isMetaSide : false			},			#name : #despawnArtifacts,			#protocol : #'artifact handling',			#sourceCode : 'despawnArtifacts\r\t| prob |\r\tprob := self generateRandomNumber: 100.\r\t\r\t(prob <= 3)\r\t\tifTrue: [ \r\t\t\tartifactCells notEmpty\r\t\t\t\tifTrue: [\r\t\t\t\t\t| a |\r\t\t\t\t\ta := self generateRandomNumber: (artifactCells size).\r\t\t\t\r\t\t\t\t\tself despawnSingleArtifact a.\r\t\t\t\t].\r\t\t].\r\t',			#stamp : 'p 6/25/2017 00:58',			#package : #snake_game		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #SnakeModel,				#isMetaSide : false			},			#name : #despawnArtifacts,			#protocol : #'artifact handling',			#sourceCode : 'despawnArtifacts\r\t| prob |\r\tprob := self generateRandomNumber: 100.\r\t\r\t(prob <= 3)\r\t\tifTrue: [ \r\t\t\tartifactCells notEmpty\r\t\t\t\tifTrue: [\r\t\t\t\t\t| a |\r\t\t\t\t\ta := self generateRandomNumber: (artifactCells size).\r\t\t\t\r\t\t\t\t\tself despawnSingleArtifact: a.\r\t\t\t\t].\r\t\t].\r\t',			#stamp : 'p 6/25/2017 00:58',			#package : #snake_game		}	}}OmEntry {	#tags : {		#author : 'p',		#time : DateAndTime [ '2017-06-25T00:59:59.753982+02:00' ],		#prior : OmReference [ '29' ],		#self : OmReference [ '30' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #SnakeModel,				#isMetaSide : false			},			#name : #'despawnSingleArtifact:',			#protocol : #'artifact handling',			#sourceCode : 'despawnSingleArtifact: cellNum\r',			#stamp : 'p 6/25/2017 00:58',			#package : #snake_game		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #SnakeModel,				#isMetaSide : false			},			#name : #'despawnSingleArtifact:',			#protocol : #'artifact handling',			#sourceCode : 'despawnSingleArtifact: cellNum\r\t| theCell |\r\ttheCell := artifactCells at: cellNum.\r\ttheCell artifact: nil.\r\tartifactCells remove: theCell.\r',			#stamp : 'p 6/25/2017 00:59',			#package : #snake_game		}	}}OmEntry {	#tags : {		#author : 'p',		#time : DateAndTime [ '2017-06-25T01:03:09.828982+02:00' ],		#prior : OmReference [ '30' ],		#self : OmReference [ '31' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #SnakeModel,				#isMetaSide : false			},			#name : #initialize,			#protocol : #initialize,			#sourceCode : 'initialize\r\tsuper initialize.\r\tblueDirection := #south.\r\tredDirection := #north.\r\t"blueCells := OrderedCollection new.\r\tredCells := OrderedCollection new."\r\tblueSnake := Snake new.\r\tredSnake := Snake new.\r\t\r\tblueSnake size: 4.\r\tblueSnake cells: OrderedCollection new.\r\tblueSnake color: Color blue.\r\tblueSnake health: 10.\r\t\r\tredSnake size: 4.\r\tredSnake cells: OrderedCollection new.\r\tredSnake color: Color red.\r\tredSnake health: 10.\r\t\t\r\ttimer := 600.\r\trandom := Random new.\r\tartifactCells := Set new.',			#stamp : 'p 6/25/2017 00:53',			#package : #snake_game		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #SnakeModel,				#isMetaSide : false			},			#name : #initialize,			#protocol : #initialize,			#sourceCode : 'initialize\r\tsuper initialize.\r\tblueDirection := #south.\r\tredDirection := #north.\r\t"blueCells := OrderedCollection new.\r\tredCells := OrderedCollection new."\r\tblueSnake := Snake new.\r\tredSnake := Snake new.\r\t\r\tblueSnake size: 4.\r\tblueSnake cells: OrderedCollection new.\r\tblueSnake color: Color blue.\r\tblueSnake health: 10.\r\t\r\tredSnake size: 4.\r\tredSnake cells: OrderedCollection new.\r\tredSnake color: Color red.\r\tredSnake health: 10.\r\t\t\r\ttimer := 600.\r\trandom := Random new.\r\tartifactCells := OrderedCollection new.',			#stamp : 'p 6/25/2017 01:03',			#package : #snake_game		}	}}OmEntry {	#tags : {		#author : 'p',		#time : DateAndTime [ '2017-06-25T01:03:31.118982+02:00' ],		#prior : OmReference [ '31' ],		#self : OmReference [ '32' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #SnakeModel,				#isMetaSide : false			},			#name : #'despawnSingleArtifact:',			#protocol : #'artifact handling',			#sourceCode : 'despawnSingleArtifact: cellNum\r\t| theCell |\r\ttheCell := artifactCells at: cellNum.\r\ttheCell artifact: nil.\r\tartifactCells remove: theCell.\r',			#stamp : 'p 6/25/2017 00:59',			#package : #snake_game		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #SnakeModel,				#isMetaSide : false			},			#name : #'despawnSingleArtifact:',			#protocol : #'artifact handling',			#sourceCode : 'despawnSingleArtifact: cellNum\r\t| theCell |\r\ttheCell := artifactCells at: cellNum.\r\ttheCell artifact: nil.\r\tartifactCells removeIndex: cellNum.\r',			#stamp : 'p 6/25/2017 01:03',			#package : #snake_game		}	}}OmEntry {	#tags : {		#author : 'p',		#time : DateAndTime [ '2017-06-25T01:04:14.513982+02:00' ],		#prior : OmReference [ '32' ],		#self : OmReference [ '33' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #SnakeModel,				#isMetaSide : false			},			#name : #'despawnSingleArtifact:',			#protocol : #'artifact handling',			#sourceCode : 'despawnSingleArtifact: cellNum\r\t| theCell |\r\ttheCell := artifactCells at: cellNum.\r\ttheCell artifact: nil.\r\tartifactCells removeIndex: cellNum.\r',			#stamp : 'p 6/25/2017 01:03',			#package : #snake_game		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #SnakeModel,				#isMetaSide : false			},			#name : #'despawnSingleArtifact:',			#protocol : #'artifact handling',			#sourceCode : 'despawnSingleArtifact: cellNum\r\t| theCell |\r\ttheCell := artifactCells at: cellNum.\r\ttheCell artifact: nil.\r\tartifactCells remove: theCell.\r',			#stamp : 'p 6/25/2017 01:04',			#package : #snake_game		}	}}