'From Pharo6.0 of 13 May 2016 [Latest update: #60493] on 17 May 2017 at 1:01:41.053846 pm'!----QUIT----2017-05-17T13:02:17.571196+02:00 Pharo-60493.image priorSource: 0!----QUIT----2017-05-17T13:02:52.052925+02:00 Pharo-60493.image priorSource: 92!----QUIT/NOSAVE----2017-05-17T13:03:08.259387+02:00 Pharo-60493.image priorSource: 172!----QUIT----2017-05-17T13:03:42.089076+02:00 Pharo-60493.image priorSource: 172!----QUIT----2017-05-17T13:09:56.388095+02:00 Pharo-60493.image priorSource: 342!!ScriptLoader methodsFor: 'public' stamp: 'TheIntegrator 5/17/2017 15:15' prior: 59349094!commentForCurrentUpdate ^ '20064 ClassTest>>#testMethodsReferencingClass uses non-existing BehaviorTests	https://pharo.fogbugz.com/f/cases/20064'! !!ScriptLoader methodsFor: 'pharo - scripts' stamp: 'TheIntegrator 5/17/2017 15:15'!script60494	^ 'AST-Core-TheIntegrator.494.mczAST-Tests-Core-TheIntegrator.134.mczAlien-RonieSalgado.40.mczAnnouncements-Core-TheIntegrator.84.mczAnnouncements-Help-TheIntegrator.12.mczAnnouncements-Tests-Core-TheIntegrator.39.mczAthens-Balloon-MarcusDenker.20.mczAthens-Cairo-TheIntegrator.144.mczAthens-CairoPools-NicolaiHess.14.mczAthens-Core-AliakseiSyrel.57.mczAthens-Examples-TheIntegrator.47.mczAthens-Morphic-TheIntegrator.69.mczAthens-Text-HenrikNergaard.17.mczBalloon-TheIntegrator.139.mczBalloon-Tests-TheIntegrator.2.mczBaselineOfBasicTools-TheIntegrator.8.mczBaselineOfDisplay-TheIntegrator.4.mczBaselineOfIDE-TheIntegrator.52.mczBaselineOfIceberg-cypress.1.mczBaselineOfLibGit-cypress.1.mczBaselineOfMetacello-EstebanLorenzano.89.mczBaselineOfMorphic-TheIntegrator.34.mczBaselineOfMorphicCore-TheIntegrator.7.mczBaselineOfPharoBootstrap-TheIntegrator.4.mczBaselineOfSUnit-TheIntegrator.4.mczBaselineOfUI-TheIntegrator.11.mczBaselineOfUnifiedFFI-TheIntegrator.4.mczBlueInk-Core-TheIntegrator.29.mczBlueInk-Extras-TheIntegrator.12.mczBlueInk-Tests-TheIntegrator.12.mczCodeExport-TheIntegrator.21.mczCodeImport-TheIntegrator.90.mczCodeImportCommandLineHandlers-TheIntegrator.15.mczCollections-Abstract-TheIntegrator.345.mczCollections-Arithmetic-TheIntegrator.22.mczCollections-Atomic-TheIntegrator.16.mczCollections-DoubleLinkedList-TheIntegrator.2.mczCollections-DoubleLinkedListTests-TheIntegrator.2.mczCollections-Native-TheIntegrator.19.mczCollections-Sequenceable-TheIntegrator.261.mczCollections-Stack-TheIntegrator.10.mczCollections-Streams-TheIntegrator.192.mczCollections-Strings-TheIntegrator.449.mczCollections-Support-TheIntegrator.67.mczCollections-Tests-TheIntegrator.101.mczCollections-Unordered-TheIntegrator.248.mczCollections-Weak-TheIntegrator.108.mczColors-TheIntegrator.3.mczCompiler-TheIntegrator.608.mczCompression-TheIntegrator.182.mczCompression-Tests-TheIntegrator.7.mczConfigurationCommandLineHandler-Core-TheIntegrator.29.mczConfigurationCommandLineHandler-Tests-MarcusDenker.11.mczContributingToTheCatalogHelp-TheIntegrator.9.mczDebugger-Tests-TheIntegrator.6.mczDebuggerActions-TheIntegrator.92.mczDebuggerFilters-TheIntegrator.9.mczDebuggerModel-TheIntegrator.130.mczDeprecated60-TheIntegrator.22.mczEmbeddedFreeType-TheIntegrator.30.mczEmbeddedFreeType-Tests-TheIntegrator.4.mczEmergencyEvaluator-TheIntegrator.35.mczEpicea-TheIntegrator.858.mczEpiceaBrowsers-MartinDias.180.mczEpiceaBrowsersTests-MartinDias.32.mczEpiceaTests-MartinDias.25.mczFFI-Kernel-EstebanLorenzano.45.mczFFI-Pools-TheIntegrator.5.mczFileSystem-Core-TheIntegrator.222.mczFileSystem-Disk-TheIntegrator.110.mczFileSystem-Memory-TheIntegrator.63.mczFileSystem-Tests-Core-TheIntegrator.103.mczFileSystem-Tests-Disk-StephaneDucasse.25.mczFileSystem-Tests-Memory-TheIntegrator.8.mczFileSystem-Zip-TheIntegrator.19.mczFiles-TheIntegrator.428.mczFiles-Tests-TheIntegrator.12.mczFlashback-Decompiler-EstebanLorenzano.21.mczFlashback-Decompiler-Tests-TheIntegrator.97.mczFontChooser-TheIntegrator.24.mczFontInfrastructure-TheIntegrator.18.mczFontInfrastructure-Tests-TheIntegrator.2.mczFreeType-TheIntegrator.756.mczFreeType-Tests-TheIntegrator.2.mczFuel-MartinDias.826.mczFuelCommandLineHandler-TheIntegrator.25.mczFuelPlatform-Core-MaxLeske.2.mczFuelPlatform-Pharo-06-MaxLeske.2.mczFuelPlatform-Pharo-Core-MaxLeske.1.mczFuelSystem-FileRegistry-TheIntegrator.4.mczFuelTests-MaxLeske.415.mczFuelTools-Debugger-MaxLeske.14.mczFuzzyMatcher-TheIntegrator.20.mczFuzzyMatcher-Tests-TheIntegrator.8.mczGT-BytecodeDebugger-AndreiChis.36.mczGT-Debugger-TheIntegrator.383.mczGT-EventRecorder-TheIntegrator.81.mczGT-EventRecorder-Tests-TheIntegrator.42.mczGT-Inspector-TheIntegrator.468.mczGT-InspectorExtensions-Core-AndreiChis.259.mczGT-Playground-TheIntegrator.148.mczGT-SUnitDebugger-TudorGirba.39.mczGT-Spotter-AliakseiSyrel.412.mczGT-Spotter-EventRecorder-AndreiChis.114.mczGT-SpotterExtensions-Core-TheIntegrator.224.mczGT-Tests-Debugger-AndreiChis.14.mczGT-Tests-Inspector-AndreiChis.60.mczGT-Tests-Playground-StefanReichhart.4.mczGT-Tests-Spotter-AndreiChis.31.mczGeneralRules-TheIntegrator.11.mczGlamour-Announcements-AndreiChis.11.mczGlamour-Browsers-AndreiChis.112.mczGlamour-Core-AndreiChis.338.mczGlamour-Examples-TheIntegrator.321.mczGlamour-FastTable-TheIntegrator.85.mczGlamour-Helpers-TudorGirba.40.mczGlamour-Morphic-Brick-TheIntegrator.448.mczGlamour-Morphic-Brick-Tests-TheIntegrator.16.mczGlamour-Morphic-Pager-AndreiChis.114.mczGlamour-Morphic-Renderer-AndreiChis.361.mczGlamour-Morphic-Theme-TheIntegrator.233.mczGlamour-Morphic-Widgets-TheIntegrator.209.mczGlamour-Presentations-AndreiChis.190.mczGlamour-Rubric-Presentations-AndreiChis.61.mczGlamour-SpecIntegration-TheIntegrator.6.mczGlamour-Tests-Core-TheIntegrator.115.mczGlamour-Tests-Morphic-TheIntegrator.140.mczGlamour-Tests-Resources-AndreiChis.5.mczGlamour-Tests-Rubric-AndreiChis.36.mczGofer-Core-TheIntegrator.237.mczGofer-Tests-TheIntegrator.164.mczGofer-UI-TheIntegrator.2.mczGraphics-Canvas-TheIntegrator.14.mczGraphics-Display Objects-TheIntegrator.188.mczGraphics-Files-TheIntegrator.78.mczGraphics-Fonts-TheIntegrator.109.mczGraphics-Primitives-TheIntegrator.203.mczGraphics-Shapes-TheIntegrator.4.mczGraphics-Tests-TheIntegrator.85.mczGraphics-Transformations-TheIntegrator.17.mczGrowl-TheIntegrator.47.mczHelpSystem-Core-TheIntegrator.178.mczHelpSystem-Tests-TheIntegrator.32.mczHiedra-MartinDias.146.mczHiedraTests-MartinDias.2.mczHowToContributeHelp-TheIntegrator.4.mczHudsonBuildTools20-TheIntegrator.100.mczIceberg-cypress.1.mczIceberg-Libgit-cypress.1.mczIceberg-Metacello-Integration-cypress.1.mczIceberg-Plugin-cypress.1.mczIceberg-UI-cypress.1.mczImportingResource-Help-TheIntegrator.6.mczIssueTracking-TheIntegrator.6.mczIssueTracking-Tests-TheIntegrator.3.mczJobs-TheIntegrator.30.mczJobsTests-TheIntegrator.2.mczKernel-TheIntegrator.2510.mczKernel-Rules-TheIntegrator.13.mczKernel-Tests-TheIntegrator.173.mczKernel-Tests-Rules-TheIntegrator.5.mczKeymapping-Core-TheIntegrator.204.mczKeymapping-KeyCombinations-TheIntegrator.66.mczKeymapping-Pragmas-TheIntegrator.62.mczKeymapping-Settings-StephaneDucasse.83.mczKeymapping-Tests-TheIntegrator.111.mczKeymapping-Tools-Spec-TheIntegrator.32.mczKomitter-TheIntegrator.192.mczLibGit-Core-cypress.1.mczManifest-Core-TheIntegrator.252.mczManifest-Resources-Tests-MarcusDenker.14.mczManifest-Tests-TheIntegrator.55.mczMenuRegistration-TheIntegrator.93.mczMessageBrowserRefactoringAddition-StephaneDucasse.2.mczMetacello-Base-EstebanLorenzano.126.mczMetacello-Bitbucket-EstebanLorenzano.8.mczMetacello-Core-TheIntegrator.838.mczMetacello-FileTree-EstebanLorenzano.38.mczMetacello-GitBasedRepository-TheIntegrator.24.mczMetacello-GitHub-TheIntegrator.56.mczMetacello-MC-TheIntegrator.741.mczMetacello-PharoCommonPlatform-TheIntegrator.26.mczMetacello-Platform-TheIntegrator.5.mczMetacello-ProfStef-TheIntegrator.22.mczMetacello-Reference-EstebanLorenzano.38.mczMetacello-TestsCommonMC-TheIntegrator.9.mczMetacello-TestsCore-EstebanLorenzano.41.mczMetacello-TestsMC-EstebanLorenzano.405.mczMetacello-TestsMCCore-EstebanLorenzano.8.mczMetacello-TestsMCResources-EstebanLorenzano.33.mczMetacello-TestsPlatform-TheIntegrator.25.mczMetacello-TestsReference-EstebanLorenzano.22.mczMetacello-ToolBox-TheIntegrator.154.mczMetacello-Tutorial-EstebanLorenzano.28.mczMonticello-TheIntegrator.1178.mczMonticello-OldDataStreamCompatibility-TheIntegrator.11.mczMonticello-Tests-TheIntegrator.43.mczMonticelloConfigurations-TheIntegrator.75.mczMonticelloFileServices-TheIntegrator.9.mczMonticelloFileTree-Core-TheIntegrator.152.mczMonticelloFileTree-FileSystem-Utilities-TheIntegrator.34.mczMonticelloGUI-TheIntegrator.437.mczMonticelloMocks-TheIntegrator.9.mczMonticelloRemoteRepositories-TheIntegrator.19.mczMoose-Algos-Graph-VincentBlondeau.33.mczMorphic-Base-TheIntegrator.615.mczMorphic-Core-TheIntegrator.313.mczMorphic-Examples-TheIntegrator.64.mczMorphic-Tests-TheIntegrator.13.mczMorphic-Widgets-Basic-TheIntegrator.110.mczMorphic-Widgets-ColorPicker-TheIntegrator.23.mczMorphic-Widgets-Extra-TheIntegrator.30.mczMorphic-Widgets-FastTable-TheIntegrator.222.mczMorphic-Widgets-List-TheIntegrator.23.mczMorphic-Widgets-Pluggable-TheIntegrator.79.mczMorphic-Widgets-PolyTabs-TheIntegrator.8.mczMorphic-Widgets-Scrolling-TheIntegrator.37.mczMorphic-Widgets-Tabs-TheIntegrator.54.mczMorphic-Widgets-Taskbar-TheIntegrator.27.mczMorphic-Widgets-TickList-TheIntegrator.2.mczMorphic-Widgets-Tree-TheIntegrator.66.mczMorphic-Widgets-Windows-TheIntegrator.117.mczMultilingual-Encodings-TheIntegrator.63.mczMultilingual-Languages-TheIntegrator.59.mczMultilingual-OtherLanguages-TheIntegrator.22.mczMultilingual-Tests-TheIntegrator.46.mczMultilingual-TextConversion-TheIntegrator.83.mczMultilingual-TextConverterOtherLanguages-TheIntegrator.4.mczNECompletion-TheIntegrator.257.mczNECompletion-Tests-TheIntegrator.10.mczNautilus-TheIntegrator.1366.mczNautilus-GroupManager-TheIntegrator.24.mczNautilus-GroupManagerUI-TheIntegrator.44.mczNautilus-Tests-TheIntegrator.52.mczNautilusCommon-TheIntegrator.327.mczNautilusGroupAutoBuilder-TheIntegrator.20.mczNautilusRefactoring-TheIntegrator.315.mczNetwork-Kernel-TheIntegrator.138.mczNetwork-MIME-TheIntegrator.75.mczNetwork-Mail-TheIntegrator.52.mczNetwork-Protocols-TheIntegrator.105.mczNetwork-Tests-TheIntegrator.28.mczNetwork-UUID-TheIntegrator.64.mczNetwork-Url-TheIntegrator.103.mczNewValueHolder-TheIntegrator.35.mczNodeNavigation-TheIntegrator.57.mczNodeNavigation-Tests-TheIntegrator.3.mczNonInteractiveTranscript-TheIntegrator.25.mczOSWindow-Core-TheIntegrator.125.mczOSWindow-SDL2-TheIntegrator.110.mczOSWindow-SDL2-Examples-TheIntegrator.16.mczOSWindow-Tests-RonieSalgado.3.mczOSWindow-VM-MerwanOuddane.4.mczOmbu-MartinDias.277.mczOmbuTests-MartinDias.33.mczOpalCompiler-Core-TheIntegrator.890.mczOpalCompiler-Tests-TheIntegrator.380.mczOpalTools-TheIntegrator.24.mczPharo-Help-TheIntegrator.49.mczPharoBootstrap-Initialization-TheIntegrator.4.mczPharoDocComment-StephaneDucasse.6.mczPolymorph-Widgets-TheIntegrator.1435.mczPolymorph-Widgets-Rules-TheIntegrator.11.mczPragmaCollector-TheIntegrator.18.mczProfStef-Core-TheIntegrator.85.mczProfStef-Help-TheIntegrator.18.mczProfStef-Tests-TheIntegrator.27.mczQualityAssistant-YuriyTymchuk.117.mczQualityAssistant-Test-YuriyTymchuk.2.mczQualityAssistantRecording-Uko.28.mczRPackage-Core-TheIntegrator.470.mczRPackage-Tests-TheIntegrator.199.mczRandom-Core-TheIntegrator.10.mczRandom-Tests-TheIntegrator.6.mczRecentSubmissions-TheIntegrator.246.mczRefactoring-Changes-TheIntegrator.70.mczRefactoring-Core-TheIntegrator.345.mczRefactoring-Critics-TheIntegrator.300.mczRefactoring-Environment-TheIntegrator.88.mczRefactoring-Help-TheIntegrator.7.mczRefactoring-Tests-Changes-TheIntegrator.40.mczRefactoring-Tests-Core-TheIntegrator.147.mczRefactoring-Tests-Critics-TheIntegrator.54.mczRefactoring-Tests-Environment-TheIntegrator.30.mczReflectionMirrors-Primitives-TheIntegrator.9.mczReflectionMirrors-Primitives-Tests-TheIntegrator.6.mczReflectivity-TheIntegrator.339.mczReflectivity-Examples-TheIntegrator.51.mczReflectivity-Tests-TheIntegrator.228.mczReflectivity-Tools-TheIntegrator.79.mczReflectivity-Tools-Tests-TheIntegrator.32.mczRegex-Core-TheIntegrator.40.mczRegex-Help-MarcusDenker.5.mczRegex-Tests-Core-TheIntegrator.11.mczReleaseTests-TheIntegrator.33.mczRenraku-YuriyTymchuk.150.mczRenraku-Help-YuriyTymchuk.3.mczRenraku-Test-YuriyTymchuk.23.mczRing-Core-Containers-TheIntegrator.45.mczRing-Core-Kernel-TheIntegrator.248.mczRing-Monticello-TheIntegrator.43.mczRing-Tests-Containers-MarcusDenker.18.mczRing-Tests-Kernel-TheIntegrator.95.mczRing-Tests-Monticello-MarcusDenker.19.mczRingChunkImporter-TheIntegrator.8.mczRubric-TheIntegrator.448.mczRubric-Rules-TheIntegrator.6.mczRubric-Styling-TheIntegrator.11.mczRubric-Tests-TheIntegrator.10.mczSTON-Core-TheIntegrator.86.mczSTON-Tests-TheIntegrator.77.mczSTON-Text support-TheIntegrator.2.mczSUnit-Core-TheIntegrator.221.mczSUnit-Help-MarcusDenker.9.mczSUnit-Rules-TheIntegrator.5.mczSUnit-Tests-TheIntegrator.68.mczSUnit-UI-TheIntegrator.153.mczSUnit-UITesting-TheIntegrator.36.mczScriptLoader-Tests-TheIntegrator.4.mczScriptingExtensions-TheIntegrator.6.mczScriptingExtensions-Tests-TheIntegrator.3.mczSettings-Graphics-TheIntegrator.34.mczSettings-Polymorph-TheIntegrator.98.mczSettings-System-TheIntegrator.43.mczShoreLine-Report-Core-TommasoDalSasso.11.mczShoreLine-Report-Settings-TheIntegrator.7.mczShoreLine-Report-UI-TheIntegrator.19.mczShout-TheIntegrator.313.mczShout-Tests-TheIntegrator.2.mczSlot-TheIntegrator.790.mczSlot-Tests-TheIntegrator.105.mczSmartSuggestions-TheIntegrator.269.mczSmartSuggestions-Tests-TheIntegrator.39.mczSortFunctions-Core-TheIntegrator.7.mczSortFunctions-Tests-TheIntegrator.6.mczSpec-Core-TheIntegrator.541.mczSpec-Debugger-TheIntegrator.284.mczSpec-Examples-TheIntegrator.133.mczSpec-Help-TheIntegrator.13.mczSpec-Inspector-TheIntegrator.289.mczSpec-Layout-TheIntegrator.75.mczSpec-MorphicAdapters-TheIntegrator.292.mczSpec-PolyWidgets-TheIntegrator.93.mczSpec-Tests-TheIntegrator.107.mczSpec-Tools-TheIntegrator.386.mczStartupPreferences-TheIntegrator.153.mczSystem-Announcements-TheIntegrator.138.mczSystem-BasicCommandLineHandler-TheIntegrator.21.mczSystem-Caching-TheIntegrator.29.mczSystem-CachingTests-TheIntegrator.19.mczSystem-Changes-TheIntegrator.309.mczSystem-Changes-FileServices-TheIntegrator.4.mczSystem-Clipboard-TheIntegrator.42.mczSystem-CommandLine-TheIntegrator.181.mczSystem-CommandLine-TextSupport-TheIntegrator.6.mczSystem-CommandLineHandler-TheIntegrator.26.mczSystem-FileRegistry-TheIntegrator.53.mczSystem-Finalization-TheIntegrator.44.mczSystem-Hashing-TheIntegrator.52.mczSystem-History-EstebanLorenzano.7.mczSystem-History-Tests-EstebanLorenzano.3.mczSystem-Identification-TheIntegrator.9.mczSystem-Identification-Tests-TheIntegrator.2.mczSystem-Installers-TheIntegrator.44.mczSystem-Localization-TheIntegrator.108.mczSystem-Localization-Tests-TheIntegrator.8.mczSystem-Model-TheIntegrator.13.mczSystem-OSEnvironments-TheIntegrator.40.mczSystem-Object Events-TheIntegrator.28.mczSystem-Platforms-TheIntegrator.85.mczSystem-Serial Port-StephaneDucasse.23.mczSystem-SessionManager-TheIntegrator.43.mczSystem-SessionManager-Tests-ChristopheDemarey.9.mczSystem-Settings-TheIntegrator.374.mczSystem-Settings-Rules-TheIntegrator.2.mczSystem-Settings-Tests-TheIntegrator.15.mczSystem-Sound-TheIntegrator.20.mczSystem-Sources-TheIntegrator.71.mczSystem-Support-TheIntegrator.1276.mczSystem-Support-Rules-TheIntegrator.2.mczSystem-SupportTests-TheIntegrator.7.mczSystem-VMEvents-TheIntegrator.19.mczTests-TheIntegrator.794.mczText-Core-TheIntegrator.66.mczText-Diff-TheIntegrator.6.mczText-Edition-TheIntegrator.128.mczText-Edition-Tests-EstebanLorenzano.3.mczText-Scanning-TheIntegrator.33.mczText-Tests-TheIntegrator.10.mczTool-Base-TheIntegrator.195.mczTool-Catalog-TheIntegrator.61.mczTool-CriticBrowser-TheIntegrator.67.mczTool-DependencyAnalyser-ChristopheDemarey.31.mczTool-DependencyAnalyser-Test-TheIntegrator.18.mczTool-DependencyAnalyser-Test-Data-ChristopheDemarey.2.mczTool-DependencyAnalyser-UI-ChristopheDemarey.54.mczTool-Diff-TheIntegrator.52.mczTool-ExternalBrowser-TheIntegrator.59.mczTool-FileList-TheIntegrator.99.mczTool-FileList-Tests-EstebanLorenzano.3.mczTool-Finder-TheIntegrator.78.mczTool-ImageCleaner-TheIntegrator.19.mczTool-ProcessBrowser-TheIntegrator.27.mczTool-Profilers-TheIntegrator.37.mczTool-SystemReporter-TheIntegrator.19.mczTool-Transcript-TheIntegrator.25.mczTool-Workspace-TheIntegrator.48.mczTools-TheIntegrator.1532.mczTools-Test-TheIntegrator.26.mczTraits-TheIntegrator.988.mczTranscript-TheIntegrator.56.mczTravisIntegrationHelp-TheIntegrator.8.mczTxText-Athens-EstebanLorenzano.58.mczTxText-AthensTests-HenrikNergaard.13.mczTxText-Model-MarcusDenker.67.mczTxText-Styler-HenrikNergaard.18.mczTxTextTests-Model-SeanDeNigris.29.mczUIManager-TheIntegrator.195.mczUnicode-Initialization-TheIntegrator.17.mczUnifiedFFI-TheIntegrator.109.mczUnifiedFFI-Legacy-TheIntegrator.4.mczUnifiedFFI-Tests-TheIntegrator.42.mczUpdateStreamer-Core-TheIntegrator.34.mczUpdateStreamer-Tests-TheIntegrator.9.mczVersionner-Commit-TheIntegrator.34.mczVersionner-Core-Announcements-ChristopheDemarey.6.mczVersionner-Core-Commands-MarcusDenker.65.mczVersionner-Core-DependenciesModel-MarcusDenker.106.mczVersionner-Core-Model-PabloTesone.57.mczVersionner-Nautilus-PavelKrivanek.1.mczVersionner-Spec-Browser-PabloTesone.212.mczVersionner-Tests-Core-Commands-MarcusDenker.21.mczVersionner-Tests-Core-DependenciesModel-ChristopheDemarey.46.mczVersionner-Tests-Core-Model-TheIntegrator.36.mczVersionner-Tests-Resources-MarcusDenker.18.mczWorldMenuHelp-TheIntegrator.2.mczWriteBarrierTests-TheIntegrator.20.mczZinc-Character-Encoding-Core-SvenVanCaekenberghe.46.mczZinc-Character-Encoding-Tests-TheIntegrator.31.mczZinc-FileSystem-TheIntegrator.15.mczZinc-HTTP-TheIntegrator.459.mczZinc-Resource-Meta-Core-SvenVanCaekenberghe.61.mczZinc-Resource-Meta-FileSystem-SvenVanCaekenberghe.8.mczZinc-Resource-Meta-Tests-SvenVanCaekenberghe.37.mczZinc-Tests-SvenVanCaekenberghe.238.mczZinc-Zodiac-TheIntegrator.38.mczZodiac-Core-TheIntegrator.46.mczZodiac-Extra-StephaneDucasse.10.mczZodiac-Tests-TheIntegrator.17.mcz'findTokens: String lf , String cr! !!ScriptLoader methodsFor: 'pharo - updates' stamp: 'TheIntegrator 5/17/2017 15:15'!update60494	"self new update60494"	self withUpdateLog: '20064 ClassTest>>#testMethodsReferencingClass uses non-existing BehaviorTests	https://pharo.fogbugz.com/f/cases/20064'.	self loadTogether: self script60494 merge: false.	self flushCaches.! !ScriptLoader removeSelector: #update60493!ScriptLoader removeSelector: #script60493!"ScriptLoader60"!!ClassTest methodsFor: 'testing - navigation' stamp: 'PavelKrivanek 5/16/2017 14:47' prior: 19489936!testMethodsReferencingClass	self assert: (ClassTest methodsReferencingClass: (Smalltalk classNamed: #ExampleForTest111)) equals: {(ClassTest >> #testOrdersACollectionOfClassesBySuperclass)}.	self		assert: ((ClassTest methodsReferencingClass: (Smalltalk classNamed: #ExampleForTest1)) sort: [ :a :b | a name <= b name]) asArray		equals:			{ClassTest>>#referencingMethod1. 			ClassTest>>#referencingMethod2. 			ClassTest>>#testOrdersACollectionOfClassesBySuperclass}.	self assert: (ClassTest methodsReferencingClass: (Smalltalk classNamed: #BehaviorTest)) isEmpty! !"Kernel-Tests"!"Postscript:Leave the line above, and replace the rest of this comment by a useful one.Executable statements should follow this comment, and shouldbe separated by periods, with no exclamation points (!!).Be sure to put any further comments in double-quotes, like this one."|repository|repository := MCHttpRepository                location: 'http://smalltalkhub.com/mc/Pharo/Pharo60/main'                user: ''                password: ''.(repository loadVersionFromFileNamed:'ScriptLoader60-TheIntegrator.568.mcz') load.ScriptLoader new update60494.!----End fileIn----!----QUIT----2017-05-18T09:47:15.580373+02:00 Pharo.image priorSource: 424!----QUIT----2017-05-18T09:47:26.423036+02:00 Pharo.image priorSource: 20220!----QUIT----2017-05-19T09:35:29.483671+02:00 Pharo.image priorSource: 20296!----QUIT----2017-05-19T09:35:36.656906+02:00 Pharo.image priorSource: 20374!----QUIT----2017-05-19T14:15:05.912563+02:00 Pharo.image priorSource: 20452!----QUIT----2017-05-19T14:15:13.143532+02:00 Pharo.image priorSource: 20530!!ScriptLoader methodsFor: 'public' stamp: 'TheIntegrator 5/22/2017 09:50' prior: 33555030!commentForCurrentUpdate ^ '20064 ClassTest>>#testMethodsReferencingClass uses non-existing BehaviorTests	https://pharo.fogbugz.com/f/cases/2006420074 Red-pane-of-death when sources file missing	https://pharo.fogbugz.com/f/cases/20074'! !!ScriptLoader methodsFor: 'pharo - scripts' stamp: 'TheIntegrator 5/22/2017 09:50'!script60495	^ 'AST-Core-TheIntegrator.494.mczAST-Tests-Core-TheIntegrator.134.mczAlien-RonieSalgado.40.mczAnnouncements-Core-TheIntegrator.84.mczAnnouncements-Help-TheIntegrator.12.mczAnnouncements-Tests-Core-TheIntegrator.39.mczAthens-Balloon-MarcusDenker.20.mczAthens-Cairo-TheIntegrator.144.mczAthens-CairoPools-NicolaiHess.14.mczAthens-Core-AliakseiSyrel.57.mczAthens-Examples-TheIntegrator.47.mczAthens-Morphic-TheIntegrator.69.mczAthens-Text-HenrikNergaard.17.mczBalloon-TheIntegrator.139.mczBalloon-Tests-TheIntegrator.2.mczBaselineOfBasicTools-TheIntegrator.8.mczBaselineOfDisplay-TheIntegrator.4.mczBaselineOfIDE-TheIntegrator.52.mczBaselineOfIceberg-cypress.1.mczBaselineOfLibGit-cypress.1.mczBaselineOfMetacello-EstebanLorenzano.89.mczBaselineOfMorphic-TheIntegrator.34.mczBaselineOfMorphicCore-TheIntegrator.7.mczBaselineOfPharoBootstrap-TheIntegrator.4.mczBaselineOfSUnit-TheIntegrator.4.mczBaselineOfUI-TheIntegrator.11.mczBaselineOfUnifiedFFI-TheIntegrator.4.mczBlueInk-Core-TheIntegrator.29.mczBlueInk-Extras-TheIntegrator.12.mczBlueInk-Tests-TheIntegrator.12.mczCodeExport-TheIntegrator.21.mczCodeImport-TheIntegrator.90.mczCodeImportCommandLineHandlers-TheIntegrator.15.mczCollections-Abstract-TheIntegrator.345.mczCollections-Arithmetic-TheIntegrator.22.mczCollections-Atomic-TheIntegrator.16.mczCollections-DoubleLinkedList-TheIntegrator.2.mczCollections-DoubleLinkedListTests-TheIntegrator.2.mczCollections-Native-TheIntegrator.19.mczCollections-Sequenceable-TheIntegrator.261.mczCollections-Stack-TheIntegrator.10.mczCollections-Streams-TheIntegrator.192.mczCollections-Strings-TheIntegrator.449.mczCollections-Support-TheIntegrator.67.mczCollections-Tests-TheIntegrator.101.mczCollections-Unordered-TheIntegrator.248.mczCollections-Weak-TheIntegrator.108.mczColors-TheIntegrator.3.mczCompiler-TheIntegrator.608.mczCompression-TheIntegrator.182.mczCompression-Tests-TheIntegrator.7.mczConfigurationCommandLineHandler-Core-TheIntegrator.29.mczConfigurationCommandLineHandler-Tests-MarcusDenker.11.mczContributingToTheCatalogHelp-TheIntegrator.9.mczDebugger-Tests-TheIntegrator.6.mczDebuggerActions-TheIntegrator.92.mczDebuggerFilters-TheIntegrator.9.mczDebuggerModel-TheIntegrator.130.mczDeprecated60-TheIntegrator.22.mczEmbeddedFreeType-TheIntegrator.30.mczEmbeddedFreeType-Tests-TheIntegrator.4.mczEmergencyEvaluator-TheIntegrator.35.mczEpicea-TheIntegrator.858.mczEpiceaBrowsers-MartinDias.180.mczEpiceaBrowsersTests-MartinDias.32.mczEpiceaTests-MartinDias.25.mczFFI-Kernel-EstebanLorenzano.45.mczFFI-Pools-TheIntegrator.5.mczFileSystem-Core-TheIntegrator.222.mczFileSystem-Disk-TheIntegrator.110.mczFileSystem-Memory-TheIntegrator.63.mczFileSystem-Tests-Core-TheIntegrator.103.mczFileSystem-Tests-Disk-StephaneDucasse.25.mczFileSystem-Tests-Memory-TheIntegrator.8.mczFileSystem-Zip-TheIntegrator.19.mczFiles-TheIntegrator.428.mczFiles-Tests-TheIntegrator.12.mczFlashback-Decompiler-EstebanLorenzano.21.mczFlashback-Decompiler-Tests-TheIntegrator.97.mczFontChooser-TheIntegrator.24.mczFontInfrastructure-TheIntegrator.18.mczFontInfrastructure-Tests-TheIntegrator.2.mczFreeType-TheIntegrator.756.mczFreeType-Tests-TheIntegrator.2.mczFuel-MartinDias.826.mczFuelCommandLineHandler-TheIntegrator.25.mczFuelPlatform-Core-MaxLeske.2.mczFuelPlatform-Pharo-06-MaxLeske.2.mczFuelPlatform-Pharo-Core-MaxLeske.1.mczFuelSystem-FileRegistry-TheIntegrator.4.mczFuelTests-MaxLeske.415.mczFuelTools-Debugger-MaxLeske.14.mczFuzzyMatcher-TheIntegrator.20.mczFuzzyMatcher-Tests-TheIntegrator.8.mczGT-BytecodeDebugger-AndreiChis.36.mczGT-Debugger-TheIntegrator.383.mczGT-EventRecorder-TheIntegrator.81.mczGT-EventRecorder-Tests-TheIntegrator.42.mczGT-Inspector-TheIntegrator.468.mczGT-InspectorExtensions-Core-AndreiChis.259.mczGT-Playground-TheIntegrator.148.mczGT-SUnitDebugger-TudorGirba.39.mczGT-Spotter-AliakseiSyrel.412.mczGT-Spotter-EventRecorder-AndreiChis.114.mczGT-SpotterExtensions-Core-TheIntegrator.224.mczGT-Tests-Debugger-AndreiChis.14.mczGT-Tests-Inspector-AndreiChis.60.mczGT-Tests-Playground-StefanReichhart.4.mczGT-Tests-Spotter-AndreiChis.31.mczGeneralRules-TheIntegrator.11.mczGlamour-Announcements-AndreiChis.11.mczGlamour-Browsers-AndreiChis.112.mczGlamour-Core-AndreiChis.338.mczGlamour-Examples-TheIntegrator.321.mczGlamour-FastTable-TheIntegrator.85.mczGlamour-Helpers-TudorGirba.40.mczGlamour-Morphic-Brick-TheIntegrator.448.mczGlamour-Morphic-Brick-Tests-TheIntegrator.16.mczGlamour-Morphic-Pager-AndreiChis.114.mczGlamour-Morphic-Renderer-AndreiChis.361.mczGlamour-Morphic-Theme-TheIntegrator.233.mczGlamour-Morphic-Widgets-TheIntegrator.209.mczGlamour-Presentations-AndreiChis.190.mczGlamour-Rubric-Presentations-AndreiChis.61.mczGlamour-SpecIntegration-TheIntegrator.6.mczGlamour-Tests-Core-TheIntegrator.115.mczGlamour-Tests-Morphic-TheIntegrator.140.mczGlamour-Tests-Resources-AndreiChis.5.mczGlamour-Tests-Rubric-AndreiChis.36.mczGofer-Core-TheIntegrator.237.mczGofer-Tests-TheIntegrator.164.mczGofer-UI-TheIntegrator.2.mczGraphics-Canvas-TheIntegrator.14.mczGraphics-Display Objects-TheIntegrator.188.mczGraphics-Files-TheIntegrator.78.mczGraphics-Fonts-TheIntegrator.109.mczGraphics-Primitives-TheIntegrator.203.mczGraphics-Shapes-TheIntegrator.4.mczGraphics-Tests-TheIntegrator.85.mczGraphics-Transformations-TheIntegrator.17.mczGrowl-TheIntegrator.47.mczHelpSystem-Core-TheIntegrator.178.mczHelpSystem-Tests-TheIntegrator.32.mczHiedra-MartinDias.146.mczHiedraTests-MartinDias.2.mczHowToContributeHelp-TheIntegrator.4.mczHudsonBuildTools20-TheIntegrator.100.mczIceberg-cypress.1.mczIceberg-Libgit-cypress.1.mczIceberg-Metacello-Integration-cypress.1.mczIceberg-Plugin-cypress.1.mczIceberg-UI-cypress.1.mczImportingResource-Help-TheIntegrator.6.mczIssueTracking-TheIntegrator.6.mczIssueTracking-Tests-TheIntegrator.3.mczJobs-TheIntegrator.30.mczJobsTests-TheIntegrator.2.mczKernel-TheIntegrator.2510.mczKernel-Rules-TheIntegrator.13.mczKernel-Tests-TheIntegrator.173.mczKernel-Tests-Rules-TheIntegrator.5.mczKeymapping-Core-TheIntegrator.204.mczKeymapping-KeyCombinations-TheIntegrator.66.mczKeymapping-Pragmas-TheIntegrator.62.mczKeymapping-Settings-StephaneDucasse.83.mczKeymapping-Tests-TheIntegrator.111.mczKeymapping-Tools-Spec-TheIntegrator.32.mczKomitter-TheIntegrator.192.mczLibGit-Core-cypress.1.mczManifest-Core-TheIntegrator.252.mczManifest-Resources-Tests-MarcusDenker.14.mczManifest-Tests-TheIntegrator.55.mczMenuRegistration-TheIntegrator.93.mczMessageBrowserRefactoringAddition-StephaneDucasse.2.mczMetacello-Base-EstebanLorenzano.126.mczMetacello-Bitbucket-EstebanLorenzano.8.mczMetacello-Core-TheIntegrator.838.mczMetacello-FileTree-EstebanLorenzano.38.mczMetacello-GitBasedRepository-TheIntegrator.24.mczMetacello-GitHub-TheIntegrator.56.mczMetacello-MC-TheIntegrator.741.mczMetacello-PharoCommonPlatform-TheIntegrator.26.mczMetacello-Platform-TheIntegrator.5.mczMetacello-ProfStef-TheIntegrator.22.mczMetacello-Reference-EstebanLorenzano.38.mczMetacello-TestsCommonMC-TheIntegrator.9.mczMetacello-TestsCore-EstebanLorenzano.41.mczMetacello-TestsMC-EstebanLorenzano.405.mczMetacello-TestsMCCore-EstebanLorenzano.8.mczMetacello-TestsMCResources-EstebanLorenzano.33.mczMetacello-TestsPlatform-TheIntegrator.25.mczMetacello-TestsReference-EstebanLorenzano.22.mczMetacello-ToolBox-TheIntegrator.154.mczMetacello-Tutorial-EstebanLorenzano.28.mczMonticello-TheIntegrator.1178.mczMonticello-OldDataStreamCompatibility-TheIntegrator.11.mczMonticello-Tests-TheIntegrator.43.mczMonticelloConfigurations-TheIntegrator.75.mczMonticelloFileServices-TheIntegrator.9.mczMonticelloFileTree-Core-TheIntegrator.152.mczMonticelloFileTree-FileSystem-Utilities-TheIntegrator.34.mczMonticelloGUI-TheIntegrator.437.mczMonticelloMocks-TheIntegrator.9.mczMonticelloRemoteRepositories-TheIntegrator.19.mczMoose-Algos-Graph-VincentBlondeau.33.mczMorphic-Base-TheIntegrator.615.mczMorphic-Core-TheIntegrator.313.mczMorphic-Examples-TheIntegrator.64.mczMorphic-Tests-TheIntegrator.13.mczMorphic-Widgets-Basic-TheIntegrator.110.mczMorphic-Widgets-ColorPicker-TheIntegrator.23.mczMorphic-Widgets-Extra-TheIntegrator.30.mczMorphic-Widgets-FastTable-TheIntegrator.222.mczMorphic-Widgets-List-TheIntegrator.23.mczMorphic-Widgets-Pluggable-TheIntegrator.79.mczMorphic-Widgets-PolyTabs-TheIntegrator.8.mczMorphic-Widgets-Scrolling-TheIntegrator.37.mczMorphic-Widgets-Tabs-TheIntegrator.54.mczMorphic-Widgets-Taskbar-TheIntegrator.27.mczMorphic-Widgets-TickList-TheIntegrator.2.mczMorphic-Widgets-Tree-TheIntegrator.66.mczMorphic-Widgets-Windows-TheIntegrator.117.mczMultilingual-Encodings-TheIntegrator.63.mczMultilingual-Languages-TheIntegrator.59.mczMultilingual-OtherLanguages-TheIntegrator.22.mczMultilingual-Tests-TheIntegrator.46.mczMultilingual-TextConversion-TheIntegrator.83.mczMultilingual-TextConverterOtherLanguages-TheIntegrator.4.mczNECompletion-TheIntegrator.257.mczNECompletion-Tests-TheIntegrator.10.mczNautilus-TheIntegrator.1366.mczNautilus-GroupManager-TheIntegrator.24.mczNautilus-GroupManagerUI-TheIntegrator.44.mczNautilus-Tests-TheIntegrator.52.mczNautilusCommon-TheIntegrator.327.mczNautilusGroupAutoBuilder-TheIntegrator.20.mczNautilusRefactoring-TheIntegrator.315.mczNetwork-Kernel-TheIntegrator.138.mczNetwork-MIME-TheIntegrator.75.mczNetwork-Mail-TheIntegrator.52.mczNetwork-Protocols-TheIntegrator.105.mczNetwork-Tests-TheIntegrator.28.mczNetwork-UUID-TheIntegrator.64.mczNetwork-Url-TheIntegrator.103.mczNewValueHolder-TheIntegrator.35.mczNodeNavigation-TheIntegrator.57.mczNodeNavigation-Tests-TheIntegrator.3.mczNonInteractiveTranscript-TheIntegrator.25.mczOSWindow-Core-TheIntegrator.125.mczOSWindow-SDL2-TheIntegrator.110.mczOSWindow-SDL2-Examples-TheIntegrator.16.mczOSWindow-Tests-RonieSalgado.3.mczOSWindow-VM-MerwanOuddane.4.mczOmbu-MartinDias.277.mczOmbuTests-MartinDias.33.mczOpalCompiler-Core-TheIntegrator.890.mczOpalCompiler-Tests-TheIntegrator.380.mczOpalTools-TheIntegrator.24.mczPharo-Help-TheIntegrator.49.mczPharoBootstrap-Initialization-TheIntegrator.4.mczPharoDocComment-StephaneDucasse.6.mczPolymorph-Widgets-TheIntegrator.1435.mczPolymorph-Widgets-Rules-TheIntegrator.11.mczPragmaCollector-TheIntegrator.18.mczProfStef-Core-TheIntegrator.85.mczProfStef-Help-TheIntegrator.18.mczProfStef-Tests-TheIntegrator.27.mczQualityAssistant-YuriyTymchuk.117.mczQualityAssistant-Test-YuriyTymchuk.2.mczQualityAssistantRecording-Uko.28.mczRPackage-Core-TheIntegrator.470.mczRPackage-Tests-TheIntegrator.199.mczRandom-Core-TheIntegrator.10.mczRandom-Tests-TheIntegrator.6.mczRecentSubmissions-TheIntegrator.246.mczRefactoring-Changes-TheIntegrator.70.mczRefactoring-Core-TheIntegrator.345.mczRefactoring-Critics-TheIntegrator.300.mczRefactoring-Environment-TheIntegrator.88.mczRefactoring-Help-TheIntegrator.7.mczRefactoring-Tests-Changes-TheIntegrator.40.mczRefactoring-Tests-Core-TheIntegrator.147.mczRefactoring-Tests-Critics-TheIntegrator.54.mczRefactoring-Tests-Environment-TheIntegrator.30.mczReflectionMirrors-Primitives-TheIntegrator.9.mczReflectionMirrors-Primitives-Tests-TheIntegrator.6.mczReflectivity-TheIntegrator.339.mczReflectivity-Examples-TheIntegrator.51.mczReflectivity-Tests-TheIntegrator.228.mczReflectivity-Tools-TheIntegrator.79.mczReflectivity-Tools-Tests-TheIntegrator.32.mczRegex-Core-TheIntegrator.40.mczRegex-Help-MarcusDenker.5.mczRegex-Tests-Core-TheIntegrator.11.mczReleaseTests-TheIntegrator.33.mczRenraku-YuriyTymchuk.150.mczRenraku-Help-YuriyTymchuk.3.mczRenraku-Test-YuriyTymchuk.23.mczRing-Core-Containers-TheIntegrator.45.mczRing-Core-Kernel-TheIntegrator.248.mczRing-Monticello-TheIntegrator.43.mczRing-Tests-Containers-MarcusDenker.18.mczRing-Tests-Kernel-TheIntegrator.95.mczRing-Tests-Monticello-MarcusDenker.19.mczRingChunkImporter-TheIntegrator.8.mczRubric-TheIntegrator.448.mczRubric-Rules-TheIntegrator.6.mczRubric-Styling-TheIntegrator.11.mczRubric-Tests-TheIntegrator.10.mczSTON-Core-TheIntegrator.86.mczSTON-Tests-TheIntegrator.77.mczSTON-Text support-TheIntegrator.2.mczSUnit-Core-TheIntegrator.221.mczSUnit-Help-MarcusDenker.9.mczSUnit-Rules-TheIntegrator.5.mczSUnit-Tests-TheIntegrator.68.mczSUnit-UI-TheIntegrator.153.mczSUnit-UITesting-TheIntegrator.36.mczScriptLoader-Tests-TheIntegrator.4.mczScriptingExtensions-TheIntegrator.6.mczScriptingExtensions-Tests-TheIntegrator.3.mczSettings-Graphics-TheIntegrator.34.mczSettings-Polymorph-TheIntegrator.98.mczSettings-System-TheIntegrator.43.mczShoreLine-Report-Core-TommasoDalSasso.11.mczShoreLine-Report-Settings-TheIntegrator.7.mczShoreLine-Report-UI-TheIntegrator.19.mczShout-TheIntegrator.313.mczShout-Tests-TheIntegrator.2.mczSlot-TheIntegrator.790.mczSlot-Tests-TheIntegrator.105.mczSmartSuggestions-TheIntegrator.269.mczSmartSuggestions-Tests-TheIntegrator.39.mczSortFunctions-Core-TheIntegrator.7.mczSortFunctions-Tests-TheIntegrator.6.mczSpec-Core-TheIntegrator.541.mczSpec-Debugger-TheIntegrator.284.mczSpec-Examples-TheIntegrator.133.mczSpec-Help-TheIntegrator.13.mczSpec-Inspector-TheIntegrator.289.mczSpec-Layout-TheIntegrator.75.mczSpec-MorphicAdapters-TheIntegrator.292.mczSpec-PolyWidgets-TheIntegrator.93.mczSpec-Tests-TheIntegrator.107.mczSpec-Tools-TheIntegrator.386.mczStartupPreferences-TheIntegrator.153.mczSystem-Announcements-TheIntegrator.138.mczSystem-BasicCommandLineHandler-TheIntegrator.21.mczSystem-Caching-TheIntegrator.29.mczSystem-CachingTests-TheIntegrator.19.mczSystem-Changes-TheIntegrator.309.mczSystem-Changes-FileServices-TheIntegrator.4.mczSystem-Clipboard-TheIntegrator.42.mczSystem-CommandLine-TheIntegrator.181.mczSystem-CommandLine-TextSupport-TheIntegrator.6.mczSystem-CommandLineHandler-TheIntegrator.26.mczSystem-FileRegistry-TheIntegrator.53.mczSystem-Finalization-TheIntegrator.44.mczSystem-Hashing-TheIntegrator.52.mczSystem-History-EstebanLorenzano.7.mczSystem-History-Tests-EstebanLorenzano.3.mczSystem-Identification-TheIntegrator.9.mczSystem-Identification-Tests-TheIntegrator.2.mczSystem-Installers-TheIntegrator.44.mczSystem-Localization-TheIntegrator.108.mczSystem-Localization-Tests-TheIntegrator.8.mczSystem-Model-TheIntegrator.13.mczSystem-OSEnvironments-TheIntegrator.40.mczSystem-Object Events-TheIntegrator.28.mczSystem-Platforms-TheIntegrator.85.mczSystem-Serial Port-StephaneDucasse.23.mczSystem-SessionManager-TheIntegrator.43.mczSystem-SessionManager-Tests-ChristopheDemarey.9.mczSystem-Settings-TheIntegrator.374.mczSystem-Settings-Rules-TheIntegrator.2.mczSystem-Settings-Tests-TheIntegrator.15.mczSystem-Sound-TheIntegrator.20.mczSystem-Sources-TheIntegrator.73.mczSystem-Support-TheIntegrator.1276.mczSystem-Support-Rules-TheIntegrator.2.mczSystem-SupportTests-TheIntegrator.7.mczSystem-VMEvents-TheIntegrator.19.mczTests-TheIntegrator.794.mczText-Core-TheIntegrator.66.mczText-Diff-TheIntegrator.6.mczText-Edition-TheIntegrator.128.mczText-Edition-Tests-EstebanLorenzano.3.mczText-Scanning-TheIntegrator.33.mczText-Tests-TheIntegrator.10.mczTool-Base-TheIntegrator.195.mczTool-Catalog-TheIntegrator.61.mczTool-CriticBrowser-TheIntegrator.67.mczTool-DependencyAnalyser-ChristopheDemarey.31.mczTool-DependencyAnalyser-Test-TheIntegrator.18.mczTool-DependencyAnalyser-Test-Data-ChristopheDemarey.2.mczTool-DependencyAnalyser-UI-ChristopheDemarey.54.mczTool-Diff-TheIntegrator.52.mczTool-ExternalBrowser-TheIntegrator.59.mczTool-FileList-TheIntegrator.99.mczTool-FileList-Tests-EstebanLorenzano.3.mczTool-Finder-TheIntegrator.78.mczTool-ImageCleaner-TheIntegrator.19.mczTool-ProcessBrowser-TheIntegrator.27.mczTool-Profilers-TheIntegrator.37.mczTool-SystemReporter-TheIntegrator.19.mczTool-Transcript-TheIntegrator.25.mczTool-Workspace-TheIntegrator.48.mczTools-TheIntegrator.1532.mczTools-Test-TheIntegrator.26.mczTraits-TheIntegrator.988.mczTranscript-TheIntegrator.56.mczTravisIntegrationHelp-TheIntegrator.8.mczTxText-Athens-EstebanLorenzano.58.mczTxText-AthensTests-HenrikNergaard.13.mczTxText-Model-MarcusDenker.67.mczTxText-Styler-HenrikNergaard.18.mczTxTextTests-Model-SeanDeNigris.29.mczUIManager-TheIntegrator.195.mczUnicode-Initialization-TheIntegrator.17.mczUnifiedFFI-TheIntegrator.109.mczUnifiedFFI-Legacy-TheIntegrator.4.mczUnifiedFFI-Tests-TheIntegrator.42.mczUpdateStreamer-Core-TheIntegrator.34.mczUpdateStreamer-Tests-TheIntegrator.9.mczVersionner-Commit-TheIntegrator.34.mczVersionner-Core-Announcements-ChristopheDemarey.6.mczVersionner-Core-Commands-MarcusDenker.65.mczVersionner-Core-DependenciesModel-MarcusDenker.106.mczVersionner-Core-Model-PabloTesone.57.mczVersionner-Nautilus-PavelKrivanek.1.mczVersionner-Spec-Browser-PabloTesone.212.mczVersionner-Tests-Core-Commands-MarcusDenker.21.mczVersionner-Tests-Core-DependenciesModel-ChristopheDemarey.46.mczVersionner-Tests-Core-Model-TheIntegrator.36.mczVersionner-Tests-Resources-MarcusDenker.18.mczWorldMenuHelp-TheIntegrator.2.mczWriteBarrierTests-TheIntegrator.20.mczZinc-Character-Encoding-Core-SvenVanCaekenberghe.46.mczZinc-Character-Encoding-Tests-TheIntegrator.31.mczZinc-FileSystem-TheIntegrator.15.mczZinc-HTTP-TheIntegrator.459.mczZinc-Resource-Meta-Core-SvenVanCaekenberghe.61.mczZinc-Resource-Meta-FileSystem-SvenVanCaekenberghe.8.mczZinc-Resource-Meta-Tests-SvenVanCaekenberghe.37.mczZinc-Tests-SvenVanCaekenberghe.238.mczZinc-Zodiac-TheIntegrator.38.mczZodiac-Core-TheIntegrator.46.mczZodiac-Extra-StephaneDucasse.10.mczZodiac-Tests-TheIntegrator.17.mcz'findTokens: String lf , String cr! !!ScriptLoader methodsFor: 'pharo - updates' stamp: 'TheIntegrator 5/22/2017 09:50'!update60495	"self new update60495"	self withUpdateLog: '20064 ClassTest>>#testMethodsReferencingClass uses non-existing BehaviorTests	https://pharo.fogbugz.com/f/cases/2006420074 Red-pane-of-death when sources file missing	https://pharo.fogbugz.com/f/cases/20074'.	self loadTogether: self script60495 merge: false.	self flushCaches.! !ScriptLoader removeSelector: #update60494!ScriptLoader removeSelector: #script60494!"ScriptLoader60"!!SourceFileArray methodsFor: 'private' stamp: 'BenComan 5/21/2017 23:27' prior: 61198173!createReadOnlyFiles	| readOnly failed |		failed := false.	readOnly := files collect: [ :file | 		file 			ifNil: [  failed := true. nil ]			ifNotNil: [ [ file readOnlyCopy ]         		on: FileDoesNotExistException        		do: [ failed := true. nil ] ]	].	^ failed ifFalse: [ readOnly ] ifTrue: [ self closeFileArray: readOnly. nil ]! !"System-Sources"!"Postscript:Leave the line above, and replace the rest of this comment by a useful one.Executable statements should follow this comment, and shouldbe separated by periods, with no exclamation points (!!).Be sure to put any further comments in double-quotes, like this one."|repository|repository := MCHttpRepository                location: 'http://smalltalkhub.com/mc/Pharo/Pharo60/main'                user: ''                password: ''.(repository loadVersionFromFileNamed:'ScriptLoader60-TheIntegrator.571.mcz') load.ScriptLoader new update60495.!----End fileIn----!----QUIT----2017-05-22T09:53:26.771406+02:00 Pharo.image priorSource: 20608!----QUIT----2017-05-22T09:53:36.987945+02:00 Pharo.image priorSource: 40350!!ScriptLoader methodsFor: 'public' stamp: 'TheIntegrator 5/23/2017 11:30' prior: 33575210!commentForCurrentUpdate ^ '20068 Change sources file name for bootstrapped image	https://pharo.fogbugz.com/f/cases/20068'! !!ScriptLoader methodsFor: 'pharo - scripts' stamp: 'TheIntegrator 5/23/2017 11:30'!script60496	^ 'AST-Core-TheIntegrator.494.mczAST-Tests-Core-TheIntegrator.134.mczAlien-RonieSalgado.40.mczAnnouncements-Core-TheIntegrator.84.mczAnnouncements-Help-TheIntegrator.12.mczAnnouncements-Tests-Core-TheIntegrator.39.mczAthens-Balloon-MarcusDenker.20.mczAthens-Cairo-TheIntegrator.144.mczAthens-CairoPools-NicolaiHess.14.mczAthens-Core-AliakseiSyrel.57.mczAthens-Examples-TheIntegrator.47.mczAthens-Morphic-TheIntegrator.69.mczAthens-Text-HenrikNergaard.17.mczBalloon-TheIntegrator.139.mczBalloon-Tests-TheIntegrator.2.mczBaselineOfBasicTools-TheIntegrator.8.mczBaselineOfDisplay-TheIntegrator.4.mczBaselineOfIDE-TheIntegrator.52.mczBaselineOfIceberg-cypress.1.mczBaselineOfLibGit-cypress.1.mczBaselineOfMetacello-EstebanLorenzano.89.mczBaselineOfMorphic-TheIntegrator.34.mczBaselineOfMorphicCore-TheIntegrator.7.mczBaselineOfPharoBootstrap-TheIntegrator.4.mczBaselineOfSUnit-TheIntegrator.4.mczBaselineOfUI-TheIntegrator.11.mczBaselineOfUnifiedFFI-TheIntegrator.4.mczBlueInk-Core-TheIntegrator.29.mczBlueInk-Extras-TheIntegrator.12.mczBlueInk-Tests-TheIntegrator.12.mczCodeExport-TheIntegrator.21.mczCodeImport-TheIntegrator.90.mczCodeImportCommandLineHandlers-TheIntegrator.15.mczCollections-Abstract-TheIntegrator.345.mczCollections-Arithmetic-TheIntegrator.22.mczCollections-Atomic-TheIntegrator.16.mczCollections-DoubleLinkedList-TheIntegrator.2.mczCollections-DoubleLinkedListTests-TheIntegrator.2.mczCollections-Native-TheIntegrator.19.mczCollections-Sequenceable-TheIntegrator.261.mczCollections-Stack-TheIntegrator.10.mczCollections-Streams-TheIntegrator.192.mczCollections-Strings-TheIntegrator.449.mczCollections-Support-TheIntegrator.67.mczCollections-Tests-TheIntegrator.101.mczCollections-Unordered-TheIntegrator.248.mczCollections-Weak-TheIntegrator.108.mczColors-TheIntegrator.3.mczCompiler-TheIntegrator.608.mczCompression-TheIntegrator.182.mczCompression-Tests-TheIntegrator.7.mczConfigurationCommandLineHandler-Core-TheIntegrator.29.mczConfigurationCommandLineHandler-Tests-MarcusDenker.11.mczContributingToTheCatalogHelp-TheIntegrator.9.mczDebugger-Tests-TheIntegrator.6.mczDebuggerActions-TheIntegrator.92.mczDebuggerFilters-TheIntegrator.9.mczDebuggerModel-TheIntegrator.130.mczDeprecated60-TheIntegrator.22.mczEmbeddedFreeType-TheIntegrator.30.mczEmbeddedFreeType-Tests-TheIntegrator.4.mczEmergencyEvaluator-TheIntegrator.35.mczEpicea-TheIntegrator.858.mczEpiceaBrowsers-MartinDias.180.mczEpiceaBrowsersTests-MartinDias.32.mczEpiceaTests-MartinDias.25.mczFFI-Kernel-EstebanLorenzano.45.mczFFI-Pools-TheIntegrator.5.mczFileSystem-Core-TheIntegrator.222.mczFileSystem-Disk-TheIntegrator.110.mczFileSystem-Memory-TheIntegrator.63.mczFileSystem-Tests-Core-TheIntegrator.103.mczFileSystem-Tests-Disk-StephaneDucasse.25.mczFileSystem-Tests-Memory-TheIntegrator.8.mczFileSystem-Zip-TheIntegrator.19.mczFiles-TheIntegrator.428.mczFiles-Tests-TheIntegrator.12.mczFlashback-Decompiler-EstebanLorenzano.21.mczFlashback-Decompiler-Tests-TheIntegrator.97.mczFontChooser-TheIntegrator.24.mczFontInfrastructure-TheIntegrator.18.mczFontInfrastructure-Tests-TheIntegrator.2.mczFreeType-TheIntegrator.756.mczFreeType-Tests-TheIntegrator.2.mczFuel-MartinDias.826.mczFuelCommandLineHandler-TheIntegrator.25.mczFuelPlatform-Core-MaxLeske.2.mczFuelPlatform-Pharo-06-MaxLeske.2.mczFuelPlatform-Pharo-Core-MaxLeske.1.mczFuelSystem-FileRegistry-TheIntegrator.4.mczFuelTests-MaxLeske.415.mczFuelTools-Debugger-MaxLeske.14.mczFuzzyMatcher-TheIntegrator.20.mczFuzzyMatcher-Tests-TheIntegrator.8.mczGT-BytecodeDebugger-AndreiChis.36.mczGT-Debugger-TheIntegrator.383.mczGT-EventRecorder-TheIntegrator.81.mczGT-EventRecorder-Tests-TheIntegrator.42.mczGT-Inspector-TheIntegrator.468.mczGT-InspectorExtensions-Core-AndreiChis.259.mczGT-Playground-TheIntegrator.148.mczGT-SUnitDebugger-TudorGirba.39.mczGT-Spotter-AliakseiSyrel.412.mczGT-Spotter-EventRecorder-AndreiChis.114.mczGT-SpotterExtensions-Core-TheIntegrator.224.mczGT-Tests-Debugger-AndreiChis.14.mczGT-Tests-Inspector-AndreiChis.60.mczGT-Tests-Playground-StefanReichhart.4.mczGT-Tests-Spotter-AndreiChis.31.mczGeneralRules-TheIntegrator.11.mczGlamour-Announcements-AndreiChis.11.mczGlamour-Browsers-AndreiChis.112.mczGlamour-Core-AndreiChis.338.mczGlamour-Examples-TheIntegrator.321.mczGlamour-FastTable-TheIntegrator.85.mczGlamour-Helpers-TudorGirba.40.mczGlamour-Morphic-Brick-TheIntegrator.448.mczGlamour-Morphic-Brick-Tests-TheIntegrator.16.mczGlamour-Morphic-Pager-AndreiChis.114.mczGlamour-Morphic-Renderer-AndreiChis.361.mczGlamour-Morphic-Theme-TheIntegrator.233.mczGlamour-Morphic-Widgets-TheIntegrator.209.mczGlamour-Presentations-AndreiChis.190.mczGlamour-Rubric-Presentations-AndreiChis.61.mczGlamour-SpecIntegration-TheIntegrator.6.mczGlamour-Tests-Core-TheIntegrator.115.mczGlamour-Tests-Morphic-TheIntegrator.140.mczGlamour-Tests-Resources-AndreiChis.5.mczGlamour-Tests-Rubric-AndreiChis.36.mczGofer-Core-TheIntegrator.237.mczGofer-Tests-TheIntegrator.164.mczGofer-UI-TheIntegrator.2.mczGraphics-Canvas-TheIntegrator.14.mczGraphics-Display Objects-TheIntegrator.188.mczGraphics-Files-TheIntegrator.78.mczGraphics-Fonts-TheIntegrator.109.mczGraphics-Primitives-TheIntegrator.203.mczGraphics-Shapes-TheIntegrator.4.mczGraphics-Tests-TheIntegrator.85.mczGraphics-Transformations-TheIntegrator.17.mczGrowl-TheIntegrator.47.mczHelpSystem-Core-TheIntegrator.178.mczHelpSystem-Tests-TheIntegrator.32.mczHiedra-MartinDias.146.mczHiedraTests-MartinDias.2.mczHowToContributeHelp-TheIntegrator.4.mczHudsonBuildTools20-TheIntegrator.100.mczIceberg-cypress.1.mczIceberg-Libgit-cypress.1.mczIceberg-Metacello-Integration-cypress.1.mczIceberg-Plugin-cypress.1.mczIceberg-UI-cypress.1.mczImportingResource-Help-TheIntegrator.6.mczIssueTracking-TheIntegrator.6.mczIssueTracking-Tests-TheIntegrator.3.mczJobs-TheIntegrator.30.mczJobsTests-TheIntegrator.2.mczKernel-TheIntegrator.2510.mczKernel-Rules-TheIntegrator.13.mczKernel-Tests-TheIntegrator.173.mczKernel-Tests-Rules-TheIntegrator.5.mczKeymapping-Core-TheIntegrator.204.mczKeymapping-KeyCombinations-TheIntegrator.66.mczKeymapping-Pragmas-TheIntegrator.62.mczKeymapping-Settings-StephaneDucasse.83.mczKeymapping-Tests-TheIntegrator.111.mczKeymapping-Tools-Spec-TheIntegrator.32.mczKomitter-TheIntegrator.192.mczLibGit-Core-cypress.1.mczManifest-Core-TheIntegrator.252.mczManifest-Resources-Tests-MarcusDenker.14.mczManifest-Tests-TheIntegrator.55.mczMenuRegistration-TheIntegrator.93.mczMessageBrowserRefactoringAddition-StephaneDucasse.2.mczMetacello-Base-EstebanLorenzano.126.mczMetacello-Bitbucket-EstebanLorenzano.8.mczMetacello-Core-TheIntegrator.838.mczMetacello-FileTree-EstebanLorenzano.38.mczMetacello-GitBasedRepository-TheIntegrator.24.mczMetacello-GitHub-TheIntegrator.56.mczMetacello-MC-TheIntegrator.741.mczMetacello-PharoCommonPlatform-TheIntegrator.26.mczMetacello-Platform-TheIntegrator.5.mczMetacello-ProfStef-TheIntegrator.22.mczMetacello-Reference-EstebanLorenzano.38.mczMetacello-TestsCommonMC-TheIntegrator.9.mczMetacello-TestsCore-EstebanLorenzano.41.mczMetacello-TestsMC-EstebanLorenzano.405.mczMetacello-TestsMCCore-EstebanLorenzano.8.mczMetacello-TestsMCResources-EstebanLorenzano.33.mczMetacello-TestsPlatform-TheIntegrator.25.mczMetacello-TestsReference-EstebanLorenzano.22.mczMetacello-ToolBox-TheIntegrator.154.mczMetacello-Tutorial-EstebanLorenzano.28.mczMonticello-TheIntegrator.1178.mczMonticello-OldDataStreamCompatibility-TheIntegrator.11.mczMonticello-Tests-TheIntegrator.43.mczMonticelloConfigurations-TheIntegrator.75.mczMonticelloFileServices-TheIntegrator.9.mczMonticelloFileTree-Core-TheIntegrator.152.mczMonticelloFileTree-FileSystem-Utilities-TheIntegrator.34.mczMonticelloGUI-TheIntegrator.437.mczMonticelloMocks-TheIntegrator.9.mczMonticelloRemoteRepositories-TheIntegrator.19.mczMoose-Algos-Graph-VincentBlondeau.33.mczMorphic-Base-TheIntegrator.615.mczMorphic-Core-TheIntegrator.313.mczMorphic-Examples-TheIntegrator.64.mczMorphic-Tests-TheIntegrator.13.mczMorphic-Widgets-Basic-TheIntegrator.110.mczMorphic-Widgets-ColorPicker-TheIntegrator.23.mczMorphic-Widgets-Extra-TheIntegrator.30.mczMorphic-Widgets-FastTable-TheIntegrator.222.mczMorphic-Widgets-List-TheIntegrator.23.mczMorphic-Widgets-Pluggable-TheIntegrator.79.mczMorphic-Widgets-PolyTabs-TheIntegrator.8.mczMorphic-Widgets-Scrolling-TheIntegrator.37.mczMorphic-Widgets-Tabs-TheIntegrator.54.mczMorphic-Widgets-Taskbar-TheIntegrator.27.mczMorphic-Widgets-TickList-TheIntegrator.2.mczMorphic-Widgets-Tree-TheIntegrator.66.mczMorphic-Widgets-Windows-TheIntegrator.117.mczMultilingual-Encodings-TheIntegrator.63.mczMultilingual-Languages-TheIntegrator.59.mczMultilingual-OtherLanguages-TheIntegrator.22.mczMultilingual-Tests-TheIntegrator.46.mczMultilingual-TextConversion-TheIntegrator.83.mczMultilingual-TextConverterOtherLanguages-TheIntegrator.4.mczNECompletion-TheIntegrator.257.mczNECompletion-Tests-TheIntegrator.10.mczNautilus-TheIntegrator.1366.mczNautilus-GroupManager-TheIntegrator.24.mczNautilus-GroupManagerUI-TheIntegrator.44.mczNautilus-Tests-TheIntegrator.52.mczNautilusCommon-TheIntegrator.327.mczNautilusGroupAutoBuilder-TheIntegrator.20.mczNautilusRefactoring-TheIntegrator.315.mczNetwork-Kernel-TheIntegrator.138.mczNetwork-MIME-TheIntegrator.75.mczNetwork-Mail-TheIntegrator.52.mczNetwork-Protocols-TheIntegrator.105.mczNetwork-Tests-TheIntegrator.28.mczNetwork-UUID-TheIntegrator.64.mczNetwork-Url-TheIntegrator.103.mczNewValueHolder-TheIntegrator.35.mczNodeNavigation-TheIntegrator.57.mczNodeNavigation-Tests-TheIntegrator.3.mczNonInteractiveTranscript-TheIntegrator.25.mczOSWindow-Core-TheIntegrator.125.mczOSWindow-SDL2-TheIntegrator.110.mczOSWindow-SDL2-Examples-TheIntegrator.16.mczOSWindow-Tests-RonieSalgado.3.mczOSWindow-VM-MerwanOuddane.4.mczOmbu-MartinDias.277.mczOmbuTests-MartinDias.33.mczOpalCompiler-Core-TheIntegrator.890.mczOpalCompiler-Tests-TheIntegrator.380.mczOpalTools-TheIntegrator.24.mczPharo-Help-TheIntegrator.49.mczPharoBootstrap-Initialization-TheIntegrator.7.mczPharoDocComment-StephaneDucasse.6.mczPolymorph-Widgets-TheIntegrator.1435.mczPolymorph-Widgets-Rules-TheIntegrator.11.mczPragmaCollector-TheIntegrator.18.mczProfStef-Core-TheIntegrator.85.mczProfStef-Help-TheIntegrator.18.mczProfStef-Tests-TheIntegrator.27.mczQualityAssistant-YuriyTymchuk.117.mczQualityAssistant-Test-YuriyTymchuk.2.mczQualityAssistantRecording-Uko.28.mczRPackage-Core-TheIntegrator.470.mczRPackage-Tests-TheIntegrator.199.mczRandom-Core-TheIntegrator.10.mczRandom-Tests-TheIntegrator.6.mczRecentSubmissions-TheIntegrator.246.mczRefactoring-Changes-TheIntegrator.70.mczRefactoring-Core-TheIntegrator.345.mczRefactoring-Critics-TheIntegrator.300.mczRefactoring-Environment-TheIntegrator.88.mczRefactoring-Help-TheIntegrator.7.mczRefactoring-Tests-Changes-TheIntegrator.40.mczRefactoring-Tests-Core-TheIntegrator.147.mczRefactoring-Tests-Critics-TheIntegrator.54.mczRefactoring-Tests-Environment-TheIntegrator.30.mczReflectionMirrors-Primitives-TheIntegrator.9.mczReflectionMirrors-Primitives-Tests-TheIntegrator.6.mczReflectivity-TheIntegrator.339.mczReflectivity-Examples-TheIntegrator.51.mczReflectivity-Tests-TheIntegrator.228.mczReflectivity-Tools-TheIntegrator.79.mczReflectivity-Tools-Tests-TheIntegrator.32.mczRegex-Core-TheIntegrator.40.mczRegex-Help-MarcusDenker.5.mczRegex-Tests-Core-TheIntegrator.11.mczReleaseTests-TheIntegrator.33.mczRenraku-YuriyTymchuk.150.mczRenraku-Help-YuriyTymchuk.3.mczRenraku-Test-YuriyTymchuk.23.mczRing-Core-Containers-TheIntegrator.45.mczRing-Core-Kernel-TheIntegrator.248.mczRing-Monticello-TheIntegrator.43.mczRing-Tests-Containers-MarcusDenker.18.mczRing-Tests-Kernel-TheIntegrator.95.mczRing-Tests-Monticello-MarcusDenker.19.mczRingChunkImporter-TheIntegrator.8.mczRubric-TheIntegrator.448.mczRubric-Rules-TheIntegrator.6.mczRubric-Styling-TheIntegrator.11.mczRubric-Tests-TheIntegrator.10.mczSTON-Core-TheIntegrator.86.mczSTON-Tests-TheIntegrator.77.mczSTON-Text support-TheIntegrator.2.mczSUnit-Core-TheIntegrator.221.mczSUnit-Help-MarcusDenker.9.mczSUnit-Rules-TheIntegrator.5.mczSUnit-Tests-TheIntegrator.68.mczSUnit-UI-TheIntegrator.153.mczSUnit-UITesting-TheIntegrator.36.mczScriptLoader-Tests-TheIntegrator.4.mczScriptingExtensions-TheIntegrator.6.mczScriptingExtensions-Tests-TheIntegrator.3.mczSettings-Graphics-TheIntegrator.34.mczSettings-Polymorph-TheIntegrator.98.mczSettings-System-TheIntegrator.43.mczShoreLine-Report-Core-TommasoDalSasso.11.mczShoreLine-Report-Settings-TheIntegrator.7.mczShoreLine-Report-UI-TheIntegrator.19.mczShout-TheIntegrator.313.mczShout-Tests-TheIntegrator.2.mczSlot-TheIntegrator.790.mczSlot-Tests-TheIntegrator.105.mczSmartSuggestions-TheIntegrator.269.mczSmartSuggestions-Tests-TheIntegrator.39.mczSortFunctions-Core-TheIntegrator.7.mczSortFunctions-Tests-TheIntegrator.6.mczSpec-Core-TheIntegrator.541.mczSpec-Debugger-TheIntegrator.284.mczSpec-Examples-TheIntegrator.133.mczSpec-Help-TheIntegrator.13.mczSpec-Inspector-TheIntegrator.289.mczSpec-Layout-TheIntegrator.75.mczSpec-MorphicAdapters-TheIntegrator.292.mczSpec-PolyWidgets-TheIntegrator.93.mczSpec-Tests-TheIntegrator.107.mczSpec-Tools-TheIntegrator.386.mczStartupPreferences-TheIntegrator.153.mczSystem-Announcements-TheIntegrator.138.mczSystem-BasicCommandLineHandler-TheIntegrator.21.mczSystem-Caching-TheIntegrator.29.mczSystem-CachingTests-TheIntegrator.19.mczSystem-Changes-TheIntegrator.309.mczSystem-Changes-FileServices-TheIntegrator.4.mczSystem-Clipboard-TheIntegrator.42.mczSystem-CommandLine-TheIntegrator.181.mczSystem-CommandLine-TextSupport-TheIntegrator.6.mczSystem-CommandLineHandler-TheIntegrator.26.mczSystem-FileRegistry-TheIntegrator.53.mczSystem-Finalization-TheIntegrator.44.mczSystem-Hashing-TheIntegrator.52.mczSystem-History-EstebanLorenzano.7.mczSystem-History-Tests-EstebanLorenzano.3.mczSystem-Identification-TheIntegrator.9.mczSystem-Identification-Tests-TheIntegrator.2.mczSystem-Installers-TheIntegrator.44.mczSystem-Localization-TheIntegrator.108.mczSystem-Localization-Tests-TheIntegrator.8.mczSystem-Model-TheIntegrator.13.mczSystem-OSEnvironments-TheIntegrator.40.mczSystem-Object Events-TheIntegrator.28.mczSystem-Platforms-TheIntegrator.85.mczSystem-Serial Port-StephaneDucasse.23.mczSystem-SessionManager-TheIntegrator.43.mczSystem-SessionManager-Tests-ChristopheDemarey.9.mczSystem-Settings-TheIntegrator.374.mczSystem-Settings-Rules-TheIntegrator.2.mczSystem-Settings-Tests-TheIntegrator.15.mczSystem-Sound-TheIntegrator.20.mczSystem-Sources-TheIntegrator.73.mczSystem-Support-TheIntegrator.1276.mczSystem-Support-Rules-TheIntegrator.2.mczSystem-SupportTests-TheIntegrator.7.mczSystem-VMEvents-TheIntegrator.19.mczTests-TheIntegrator.794.mczText-Core-TheIntegrator.66.mczText-Diff-TheIntegrator.6.mczText-Edition-TheIntegrator.128.mczText-Edition-Tests-EstebanLorenzano.3.mczText-Scanning-TheIntegrator.33.mczText-Tests-TheIntegrator.10.mczTool-Base-TheIntegrator.195.mczTool-Catalog-TheIntegrator.61.mczTool-CriticBrowser-TheIntegrator.67.mczTool-DependencyAnalyser-ChristopheDemarey.31.mczTool-DependencyAnalyser-Test-TheIntegrator.18.mczTool-DependencyAnalyser-Test-Data-ChristopheDemarey.2.mczTool-DependencyAnalyser-UI-ChristopheDemarey.54.mczTool-Diff-TheIntegrator.52.mczTool-ExternalBrowser-TheIntegrator.59.mczTool-FileList-TheIntegrator.99.mczTool-FileList-Tests-EstebanLorenzano.3.mczTool-Finder-TheIntegrator.78.mczTool-ImageCleaner-TheIntegrator.19.mczTool-ProcessBrowser-TheIntegrator.27.mczTool-Profilers-TheIntegrator.37.mczTool-SystemReporter-TheIntegrator.19.mczTool-Transcript-TheIntegrator.25.mczTool-Workspace-TheIntegrator.48.mczTools-TheIntegrator.1532.mczTools-Test-TheIntegrator.26.mczTraits-TheIntegrator.988.mczTranscript-TheIntegrator.56.mczTravisIntegrationHelp-TheIntegrator.8.mczTxText-Athens-EstebanLorenzano.58.mczTxText-AthensTests-HenrikNergaard.13.mczTxText-Model-MarcusDenker.67.mczTxText-Styler-HenrikNergaard.18.mczTxTextTests-Model-SeanDeNigris.29.mczUIManager-TheIntegrator.195.mczUnicode-Initialization-TheIntegrator.17.mczUnifiedFFI-TheIntegrator.109.mczUnifiedFFI-Legacy-TheIntegrator.4.mczUnifiedFFI-Tests-TheIntegrator.42.mczUpdateStreamer-Core-TheIntegrator.34.mczUpdateStreamer-Tests-TheIntegrator.9.mczVersionner-Commit-TheIntegrator.34.mczVersionner-Core-Announcements-ChristopheDemarey.6.mczVersionner-Core-Commands-MarcusDenker.65.mczVersionner-Core-DependenciesModel-MarcusDenker.106.mczVersionner-Core-Model-PabloTesone.57.mczVersionner-Nautilus-PavelKrivanek.1.mczVersionner-Spec-Browser-PabloTesone.212.mczVersionner-Tests-Core-Commands-MarcusDenker.21.mczVersionner-Tests-Core-DependenciesModel-ChristopheDemarey.46.mczVersionner-Tests-Core-Model-TheIntegrator.36.mczVersionner-Tests-Resources-MarcusDenker.18.mczWorldMenuHelp-TheIntegrator.2.mczWriteBarrierTests-TheIntegrator.20.mczZinc-Character-Encoding-Core-SvenVanCaekenberghe.46.mczZinc-Character-Encoding-Tests-TheIntegrator.31.mczZinc-FileSystem-TheIntegrator.15.mczZinc-HTTP-TheIntegrator.459.mczZinc-Resource-Meta-Core-SvenVanCaekenberghe.61.mczZinc-Resource-Meta-FileSystem-SvenVanCaekenberghe.8.mczZinc-Resource-Meta-Tests-SvenVanCaekenberghe.37.mczZinc-Tests-SvenVanCaekenberghe.238.mczZinc-Zodiac-TheIntegrator.38.mczZodiac-Core-TheIntegrator.46.mczZodiac-Extra-StephaneDucasse.10.mczZodiac-Tests-TheIntegrator.17.mcz'findTokens: String lf , String cr! !!ScriptLoader methodsFor: 'pharo - updates' stamp: 'TheIntegrator 5/23/2017 11:30'!update60496	"self new update60496"	self withUpdateLog: '20068 Change sources file name for bootstrapped image	https://pharo.fogbugz.com/f/cases/20068'.	self loadTogether: self script60496 merge: false.	self flushCaches.! !ScriptLoader removeSelector: #update60495!ScriptLoader removeSelector: #script60495!"ScriptLoader60"!!PharoBootstrapInitialization class methodsFor: 'public api' stamp: 'PavelKrivanek 5/18/2017 15:54' prior: 54387033!initializeCommandLineHandlerAndErrorHandling	"This method is run before the new bootstrapped image is saved!!"	ProcessorScheduler initialize.		Delay initialize.	SmallInteger initialize.		ProcessorScheduler startUp.		OSPlatform startUp: true.		"2 following lines are used to initialize Unicode tag constants.	Must be replaced by an uptodate version of Unicode class>>#initializeTagConstants and a call to it"	#(#Cc #Cf #Co #Cs #Ll #Lm #Lo #Lt #Lu #Mc #Me #Mn #Nd #Nl #No #Pc #Pd #Pe #Pf #Pi #Po #Ps #Sc #Sk #Sm #So #Zl #Zp #Zs)			doWithIndex: [ :each :index | Unicode classPool at: each put: index ].Unicode classPool at: #Cn put: 0.	UnicodeDefinitions initializeUnicodeClass.	EncodedCharSet initialize.	String initialize.	ByteString initialize. "needed by TextConverter to install LineEnd convention (called by Smalltalk openLog)"	ZnUTF8Encoder initialize.			"Weak array class initialization 2 lines"	Smalltalk specialObjectsArray at: 42 put: Semaphore new."to put in EPObjectSpace>>#createSpecialObjectsArray?"	WeakArray restartFinalizationProcess.		DiskStore useFilePlugin "initialize".	FileStream initialize.	FileStream classVarNamed: 'TheStdioHandles' put: FileStream stdioHandles. "FileStream startup"	ByteTextConverter initialize.	MultiByteFileStream initialize.	ASTCache default: ASTCache new. "ASTCache initialize, neeeded to print stack on error"	FileLocator startUp: true. "FileLocator initialize"	Smalltalk globals 		at: #Transcript		put: (NonInteractiveTranscript stdout install).	CompilationContext initialize.	Float initialize.	ZipConstants initialize.	ZipWriteStream initialize.	"Initialize classes related to compiler"	InflateStream initialize.	ByteTextConverter initialize.	ZipWriteStream initialize.	SetElement initialize.	ExternalSemaphoreTable initialize.	MacRomanTextConverter initialize.	Collection initialize.	ISOLanguageDefinition initialize.	CompiledMethod initialize.	MD5NonPrimitive initialize.	DangerousClassNotifier initialize.	Categorizer initialize.	Slot initialize.	CP1252TextConverter initialize.	SHA1 initialize.	TraitBehavior initialize.	RPackage initialize.	CompilationContext initialize.	OCASTTranslator initialize.	UIManager classVarNamed: 'Default' put: NonInteractiveUIManager new.	UIManager default activate.	Smalltalk sourceFileVersionString: 'PharoV60'.	(Smalltalk class classVariableNamed: 'LastImagePath') value: Smalltalk imagePath. "set the default value"	SourceFiles := SourceFileArray new ensureOpen. "needed to get source from a compiled method, used to log an error."	Smalltalk openSourceFiles.		BasicCommandLineHandler new activate. "BasicCommandLineHandler startUp:"	Processor terminateActive.! !"PharoBootstrap-Initialization"!"Postscript:Leave the line above, and replace the rest of this comment by a useful one.Executable statements should follow this comment, and shouldbe separated by periods, with no exclamation points (!!).Be sure to put any further comments in double-quotes, like this one."|repository|repository := MCHttpRepository                location: 'http://smalltalkhub.com/mc/Pharo/Pharo60/main'                user: ''                password: ''.(repository loadVersionFromFileNamed:'ScriptLoader60-TheIntegrator.572.mcz') load.ScriptLoader new update60496.!----End fileIn----!----QUIT----2017-05-23T11:33:20.381382+02:00 Pharo.image priorSource: 40428!----QUIT----2017-05-23T11:33:30.825145+02:00 Pharo.image priorSource: 62354!!ScriptLoader methodsFor: 'public' stamp: 'TheIntegrator 5/23/2017 15:34' prior: 33595030!commentForCurrentUpdate ^ '20084 Highlight Message Send is not enabled by default in bootstrapped/reloaded image	https://pharo.fogbugz.com/f/cases/2008420072 Importing Resource Help needs improvement	https://pharo.fogbugz.com/f/cases/2007219809 Failing test: WeakAnnouncerTest>>#testNoDeadWeakSubscriptions	https://pharo.fogbugz.com/f/cases/19809'! !!ScriptLoader methodsFor: 'pharo - scripts' stamp: 'TheIntegrator 5/23/2017 15:34'!script60497	^ 'AST-Core-TheIntegrator.494.mczAST-Tests-Core-TheIntegrator.134.mczAlien-RonieSalgado.40.mczAnnouncements-Core-TheIntegrator.84.mczAnnouncements-Help-TheIntegrator.12.mczAnnouncements-Tests-Core-TheIntegrator.39.mczAthens-Balloon-MarcusDenker.20.mczAthens-Cairo-TheIntegrator.144.mczAthens-CairoPools-NicolaiHess.14.mczAthens-Core-AliakseiSyrel.57.mczAthens-Examples-TheIntegrator.47.mczAthens-Morphic-TheIntegrator.69.mczAthens-Text-HenrikNergaard.17.mczBalloon-TheIntegrator.139.mczBalloon-Tests-TheIntegrator.2.mczBaselineOfBasicTools-TheIntegrator.8.mczBaselineOfDisplay-TheIntegrator.4.mczBaselineOfIDE-TheIntegrator.55.mczBaselineOfIceberg-cypress.1.mczBaselineOfLibGit-cypress.1.mczBaselineOfMetacello-EstebanLorenzano.89.mczBaselineOfMorphic-TheIntegrator.34.mczBaselineOfMorphicCore-TheIntegrator.7.mczBaselineOfPharoBootstrap-TheIntegrator.4.mczBaselineOfSUnit-TheIntegrator.4.mczBaselineOfUI-TheIntegrator.11.mczBaselineOfUnifiedFFI-TheIntegrator.4.mczBlueInk-Core-TheIntegrator.29.mczBlueInk-Extras-TheIntegrator.12.mczBlueInk-Tests-TheIntegrator.12.mczCodeExport-TheIntegrator.21.mczCodeImport-TheIntegrator.90.mczCodeImportCommandLineHandlers-TheIntegrator.15.mczCollections-Abstract-TheIntegrator.345.mczCollections-Arithmetic-TheIntegrator.22.mczCollections-Atomic-TheIntegrator.16.mczCollections-DoubleLinkedList-TheIntegrator.2.mczCollections-DoubleLinkedListTests-TheIntegrator.2.mczCollections-Native-TheIntegrator.19.mczCollections-Sequenceable-TheIntegrator.261.mczCollections-Stack-TheIntegrator.10.mczCollections-Streams-TheIntegrator.192.mczCollections-Strings-TheIntegrator.449.mczCollections-Support-TheIntegrator.67.mczCollections-Tests-TheIntegrator.101.mczCollections-Unordered-TheIntegrator.248.mczCollections-Weak-TheIntegrator.108.mczColors-TheIntegrator.3.mczCompiler-TheIntegrator.608.mczCompression-TheIntegrator.182.mczCompression-Tests-TheIntegrator.7.mczConfigurationCommandLineHandler-Core-TheIntegrator.29.mczConfigurationCommandLineHandler-Tests-MarcusDenker.11.mczContributingToTheCatalogHelp-TheIntegrator.9.mczDebugger-Tests-TheIntegrator.6.mczDebuggerActions-TheIntegrator.92.mczDebuggerFilters-TheIntegrator.9.mczDebuggerModel-TheIntegrator.130.mczDeprecated60-TheIntegrator.22.mczEmbeddedFreeType-TheIntegrator.30.mczEmbeddedFreeType-Tests-TheIntegrator.4.mczEmergencyEvaluator-TheIntegrator.35.mczEpicea-TheIntegrator.858.mczEpiceaBrowsers-MartinDias.180.mczEpiceaBrowsersTests-MartinDias.32.mczEpiceaTests-MartinDias.25.mczFFI-Kernel-EstebanLorenzano.45.mczFFI-Pools-TheIntegrator.5.mczFileSystem-Core-TheIntegrator.222.mczFileSystem-Disk-TheIntegrator.110.mczFileSystem-Memory-TheIntegrator.63.mczFileSystem-Tests-Core-TheIntegrator.103.mczFileSystem-Tests-Disk-StephaneDucasse.25.mczFileSystem-Tests-Memory-TheIntegrator.8.mczFileSystem-Zip-TheIntegrator.19.mczFiles-TheIntegrator.428.mczFiles-Tests-TheIntegrator.12.mczFlashback-Decompiler-EstebanLorenzano.21.mczFlashback-Decompiler-Tests-TheIntegrator.97.mczFontChooser-TheIntegrator.24.mczFontInfrastructure-TheIntegrator.18.mczFontInfrastructure-Tests-TheIntegrator.2.mczFreeType-TheIntegrator.756.mczFreeType-Tests-TheIntegrator.2.mczFuel-MartinDias.826.mczFuelCommandLineHandler-TheIntegrator.25.mczFuelPlatform-Core-MaxLeske.2.mczFuelPlatform-Pharo-06-MaxLeske.2.mczFuelPlatform-Pharo-Core-MaxLeske.1.mczFuelSystem-FileRegistry-TheIntegrator.4.mczFuelTests-MaxLeske.415.mczFuelTools-Debugger-MaxLeske.14.mczFuzzyMatcher-TheIntegrator.20.mczFuzzyMatcher-Tests-TheIntegrator.8.mczGT-BytecodeDebugger-AndreiChis.36.mczGT-Debugger-TheIntegrator.383.mczGT-EventRecorder-TheIntegrator.81.mczGT-EventRecorder-Tests-TheIntegrator.42.mczGT-Inspector-TheIntegrator.468.mczGT-InspectorExtensions-Core-AndreiChis.259.mczGT-Playground-TheIntegrator.148.mczGT-SUnitDebugger-TudorGirba.39.mczGT-Spotter-AliakseiSyrel.412.mczGT-Spotter-EventRecorder-AndreiChis.114.mczGT-SpotterExtensions-Core-TheIntegrator.224.mczGT-Tests-Debugger-AndreiChis.14.mczGT-Tests-Inspector-AndreiChis.60.mczGT-Tests-Playground-StefanReichhart.4.mczGT-Tests-Spotter-AndreiChis.31.mczGeneralRules-TheIntegrator.11.mczGlamour-Announcements-AndreiChis.11.mczGlamour-Browsers-AndreiChis.112.mczGlamour-Core-AndreiChis.338.mczGlamour-Examples-TheIntegrator.321.mczGlamour-FastTable-TheIntegrator.85.mczGlamour-Helpers-TudorGirba.40.mczGlamour-Morphic-Brick-TheIntegrator.448.mczGlamour-Morphic-Brick-Tests-TheIntegrator.16.mczGlamour-Morphic-Pager-AndreiChis.114.mczGlamour-Morphic-Renderer-AndreiChis.361.mczGlamour-Morphic-Theme-TheIntegrator.233.mczGlamour-Morphic-Widgets-TheIntegrator.209.mczGlamour-Presentations-AndreiChis.190.mczGlamour-Rubric-Presentations-AndreiChis.61.mczGlamour-SpecIntegration-TheIntegrator.6.mczGlamour-Tests-Core-TheIntegrator.115.mczGlamour-Tests-Morphic-TheIntegrator.140.mczGlamour-Tests-Resources-AndreiChis.5.mczGlamour-Tests-Rubric-AndreiChis.36.mczGofer-Core-TheIntegrator.237.mczGofer-Tests-TheIntegrator.164.mczGofer-UI-TheIntegrator.2.mczGraphics-Canvas-TheIntegrator.14.mczGraphics-Display Objects-TheIntegrator.188.mczGraphics-Files-TheIntegrator.78.mczGraphics-Fonts-TheIntegrator.109.mczGraphics-Primitives-TheIntegrator.203.mczGraphics-Shapes-TheIntegrator.4.mczGraphics-Tests-TheIntegrator.85.mczGraphics-Transformations-TheIntegrator.17.mczGrowl-TheIntegrator.47.mczHelpSystem-Core-TheIntegrator.178.mczHelpSystem-Tests-TheIntegrator.32.mczHiedra-MartinDias.146.mczHiedraTests-MartinDias.2.mczHowToContributeHelp-TheIntegrator.4.mczHudsonBuildTools20-TheIntegrator.100.mczIceberg-cypress.1.mczIceberg-Libgit-cypress.1.mczIceberg-Metacello-Integration-cypress.1.mczIceberg-Plugin-cypress.1.mczIceberg-UI-cypress.1.mczImportingResource-Help-TheIntegrator.8.mczIssueTracking-TheIntegrator.6.mczIssueTracking-Tests-TheIntegrator.3.mczJobs-TheIntegrator.30.mczJobsTests-TheIntegrator.2.mczKernel-TheIntegrator.2510.mczKernel-Rules-TheIntegrator.13.mczKernel-Tests-TheIntegrator.173.mczKernel-Tests-Rules-TheIntegrator.5.mczKeymapping-Core-TheIntegrator.204.mczKeymapping-KeyCombinations-TheIntegrator.66.mczKeymapping-Pragmas-TheIntegrator.62.mczKeymapping-Settings-StephaneDucasse.83.mczKeymapping-Tests-TheIntegrator.111.mczKeymapping-Tools-Spec-TheIntegrator.32.mczKomitter-TheIntegrator.192.mczLibGit-Core-cypress.1.mczManifest-Core-TheIntegrator.252.mczManifest-Resources-Tests-MarcusDenker.14.mczManifest-Tests-TheIntegrator.55.mczMenuRegistration-TheIntegrator.93.mczMessageBrowserRefactoringAddition-StephaneDucasse.2.mczMetacello-Base-EstebanLorenzano.126.mczMetacello-Bitbucket-EstebanLorenzano.8.mczMetacello-Core-TheIntegrator.838.mczMetacello-FileTree-EstebanLorenzano.38.mczMetacello-GitBasedRepository-TheIntegrator.24.mczMetacello-GitHub-TheIntegrator.56.mczMetacello-MC-TheIntegrator.741.mczMetacello-PharoCommonPlatform-TheIntegrator.26.mczMetacello-Platform-TheIntegrator.5.mczMetacello-ProfStef-TheIntegrator.22.mczMetacello-Reference-EstebanLorenzano.38.mczMetacello-TestsCommonMC-TheIntegrator.9.mczMetacello-TestsCore-EstebanLorenzano.41.mczMetacello-TestsMC-EstebanLorenzano.405.mczMetacello-TestsMCCore-EstebanLorenzano.8.mczMetacello-TestsMCResources-EstebanLorenzano.33.mczMetacello-TestsPlatform-TheIntegrator.25.mczMetacello-TestsReference-EstebanLorenzano.22.mczMetacello-ToolBox-TheIntegrator.154.mczMetacello-Tutorial-EstebanLorenzano.28.mczMonticello-TheIntegrator.1178.mczMonticello-OldDataStreamCompatibility-TheIntegrator.11.mczMonticello-Tests-TheIntegrator.43.mczMonticelloConfigurations-TheIntegrator.75.mczMonticelloFileServices-TheIntegrator.9.mczMonticelloFileTree-Core-TheIntegrator.152.mczMonticelloFileTree-FileSystem-Utilities-TheIntegrator.34.mczMonticelloGUI-TheIntegrator.437.mczMonticelloMocks-TheIntegrator.9.mczMonticelloRemoteRepositories-TheIntegrator.19.mczMoose-Algos-Graph-VincentBlondeau.33.mczMorphic-Base-TheIntegrator.615.mczMorphic-Core-TheIntegrator.313.mczMorphic-Examples-TheIntegrator.64.mczMorphic-Tests-TheIntegrator.13.mczMorphic-Widgets-Basic-TheIntegrator.110.mczMorphic-Widgets-ColorPicker-TheIntegrator.23.mczMorphic-Widgets-Extra-TheIntegrator.30.mczMorphic-Widgets-FastTable-TheIntegrator.222.mczMorphic-Widgets-List-TheIntegrator.23.mczMorphic-Widgets-Pluggable-TheIntegrator.79.mczMorphic-Widgets-PolyTabs-TheIntegrator.8.mczMorphic-Widgets-Scrolling-TheIntegrator.37.mczMorphic-Widgets-Tabs-TheIntegrator.54.mczMorphic-Widgets-Taskbar-TheIntegrator.27.mczMorphic-Widgets-TickList-TheIntegrator.2.mczMorphic-Widgets-Tree-TheIntegrator.66.mczMorphic-Widgets-Windows-TheIntegrator.117.mczMultilingual-Encodings-TheIntegrator.63.mczMultilingual-Languages-TheIntegrator.59.mczMultilingual-OtherLanguages-TheIntegrator.22.mczMultilingual-Tests-TheIntegrator.46.mczMultilingual-TextConversion-TheIntegrator.83.mczMultilingual-TextConverterOtherLanguages-TheIntegrator.4.mczNECompletion-TheIntegrator.257.mczNECompletion-Tests-TheIntegrator.10.mczNautilus-TheIntegrator.1366.mczNautilus-GroupManager-TheIntegrator.24.mczNautilus-GroupManagerUI-TheIntegrator.44.mczNautilus-Tests-TheIntegrator.52.mczNautilusCommon-TheIntegrator.327.mczNautilusGroupAutoBuilder-TheIntegrator.20.mczNautilusRefactoring-TheIntegrator.315.mczNetwork-Kernel-TheIntegrator.138.mczNetwork-MIME-TheIntegrator.75.mczNetwork-Mail-TheIntegrator.52.mczNetwork-Protocols-TheIntegrator.105.mczNetwork-Tests-TheIntegrator.28.mczNetwork-UUID-TheIntegrator.64.mczNetwork-Url-TheIntegrator.103.mczNewValueHolder-TheIntegrator.35.mczNodeNavigation-TheIntegrator.57.mczNodeNavigation-Tests-TheIntegrator.3.mczNonInteractiveTranscript-TheIntegrator.25.mczOSWindow-Core-TheIntegrator.125.mczOSWindow-SDL2-TheIntegrator.110.mczOSWindow-SDL2-Examples-TheIntegrator.16.mczOSWindow-Tests-RonieSalgado.3.mczOSWindow-VM-MerwanOuddane.4.mczOmbu-MartinDias.277.mczOmbuTests-MartinDias.33.mczOpalCompiler-Core-TheIntegrator.890.mczOpalCompiler-Tests-TheIntegrator.380.mczOpalTools-TheIntegrator.24.mczPharo-Help-TheIntegrator.49.mczPharoBootstrap-Initialization-TheIntegrator.7.mczPharoDocComment-StephaneDucasse.6.mczPolymorph-Widgets-TheIntegrator.1435.mczPolymorph-Widgets-Rules-TheIntegrator.11.mczPragmaCollector-TheIntegrator.18.mczProfStef-Core-TheIntegrator.85.mczProfStef-Help-TheIntegrator.18.mczProfStef-Tests-TheIntegrator.27.mczQualityAssistant-YuriyTymchuk.117.mczQualityAssistant-Test-YuriyTymchuk.2.mczQualityAssistantRecording-Uko.28.mczRPackage-Core-TheIntegrator.470.mczRPackage-Tests-TheIntegrator.199.mczRandom-Core-TheIntegrator.10.mczRandom-Tests-TheIntegrator.6.mczRecentSubmissions-TheIntegrator.246.mczRefactoring-Changes-TheIntegrator.70.mczRefactoring-Core-TheIntegrator.345.mczRefactoring-Critics-TheIntegrator.300.mczRefactoring-Environment-TheIntegrator.88.mczRefactoring-Help-TheIntegrator.7.mczRefactoring-Tests-Changes-TheIntegrator.40.mczRefactoring-Tests-Core-TheIntegrator.147.mczRefactoring-Tests-Critics-TheIntegrator.54.mczRefactoring-Tests-Environment-TheIntegrator.30.mczReflectionMirrors-Primitives-TheIntegrator.9.mczReflectionMirrors-Primitives-Tests-TheIntegrator.6.mczReflectivity-TheIntegrator.339.mczReflectivity-Examples-TheIntegrator.51.mczReflectivity-Tests-TheIntegrator.228.mczReflectivity-Tools-TheIntegrator.79.mczReflectivity-Tools-Tests-TheIntegrator.32.mczRegex-Core-TheIntegrator.40.mczRegex-Help-MarcusDenker.5.mczRegex-Tests-Core-TheIntegrator.11.mczReleaseTests-TheIntegrator.33.mczRenraku-YuriyTymchuk.150.mczRenraku-Help-YuriyTymchuk.3.mczRenraku-Test-YuriyTymchuk.23.mczRing-Core-Containers-TheIntegrator.45.mczRing-Core-Kernel-TheIntegrator.248.mczRing-Monticello-TheIntegrator.43.mczRing-Tests-Containers-MarcusDenker.18.mczRing-Tests-Kernel-TheIntegrator.95.mczRing-Tests-Monticello-MarcusDenker.19.mczRingChunkImporter-TheIntegrator.8.mczRubric-TheIntegrator.448.mczRubric-Rules-TheIntegrator.6.mczRubric-Styling-TheIntegrator.11.mczRubric-Tests-TheIntegrator.10.mczSTON-Core-TheIntegrator.86.mczSTON-Tests-TheIntegrator.77.mczSTON-Text support-TheIntegrator.2.mczSUnit-Core-TheIntegrator.221.mczSUnit-Help-MarcusDenker.9.mczSUnit-Rules-TheIntegrator.5.mczSUnit-Tests-TheIntegrator.68.mczSUnit-UI-TheIntegrator.153.mczSUnit-UITesting-TheIntegrator.36.mczScriptLoader-Tests-TheIntegrator.4.mczScriptingExtensions-TheIntegrator.6.mczScriptingExtensions-Tests-TheIntegrator.3.mczSettings-Graphics-TheIntegrator.34.mczSettings-Polymorph-TheIntegrator.98.mczSettings-System-TheIntegrator.43.mczShoreLine-Report-Core-TommasoDalSasso.11.mczShoreLine-Report-Settings-TheIntegrator.7.mczShoreLine-Report-UI-TheIntegrator.19.mczShout-TheIntegrator.313.mczShout-Tests-TheIntegrator.2.mczSlot-TheIntegrator.790.mczSlot-Tests-TheIntegrator.105.mczSmartSuggestions-TheIntegrator.269.mczSmartSuggestions-Tests-TheIntegrator.39.mczSortFunctions-Core-TheIntegrator.7.mczSortFunctions-Tests-TheIntegrator.6.mczSpec-Core-TheIntegrator.541.mczSpec-Debugger-TheIntegrator.284.mczSpec-Examples-TheIntegrator.133.mczSpec-Help-TheIntegrator.13.mczSpec-Inspector-TheIntegrator.289.mczSpec-Layout-TheIntegrator.75.mczSpec-MorphicAdapters-TheIntegrator.292.mczSpec-PolyWidgets-TheIntegrator.93.mczSpec-Tests-TheIntegrator.107.mczSpec-Tools-TheIntegrator.386.mczStartupPreferences-TheIntegrator.153.mczSystem-Announcements-TheIntegrator.138.mczSystem-BasicCommandLineHandler-TheIntegrator.21.mczSystem-Caching-TheIntegrator.29.mczSystem-CachingTests-TheIntegrator.19.mczSystem-Changes-TheIntegrator.309.mczSystem-Changes-FileServices-TheIntegrator.4.mczSystem-Clipboard-TheIntegrator.42.mczSystem-CommandLine-TheIntegrator.181.mczSystem-CommandLine-TextSupport-TheIntegrator.6.mczSystem-CommandLineHandler-TheIntegrator.26.mczSystem-FileRegistry-TheIntegrator.53.mczSystem-Finalization-TheIntegrator.44.mczSystem-Hashing-TheIntegrator.52.mczSystem-History-EstebanLorenzano.7.mczSystem-History-Tests-EstebanLorenzano.3.mczSystem-Identification-TheIntegrator.9.mczSystem-Identification-Tests-TheIntegrator.2.mczSystem-Installers-TheIntegrator.44.mczSystem-Localization-TheIntegrator.108.mczSystem-Localization-Tests-TheIntegrator.8.mczSystem-Model-TheIntegrator.13.mczSystem-OSEnvironments-TheIntegrator.40.mczSystem-Object Events-TheIntegrator.28.mczSystem-Platforms-TheIntegrator.85.mczSystem-Serial Port-StephaneDucasse.23.mczSystem-SessionManager-TheIntegrator.43.mczSystem-SessionManager-Tests-ChristopheDemarey.9.mczSystem-Settings-TheIntegrator.374.mczSystem-Settings-Rules-TheIntegrator.2.mczSystem-Settings-Tests-TheIntegrator.15.mczSystem-Sound-TheIntegrator.20.mczSystem-Sources-TheIntegrator.73.mczSystem-Support-TheIntegrator.1276.mczSystem-Support-Rules-TheIntegrator.2.mczSystem-SupportTests-TheIntegrator.7.mczSystem-VMEvents-TheIntegrator.19.mczTests-TheIntegrator.794.mczText-Core-TheIntegrator.66.mczText-Diff-TheIntegrator.6.mczText-Edition-TheIntegrator.128.mczText-Edition-Tests-EstebanLorenzano.3.mczText-Scanning-TheIntegrator.33.mczText-Tests-TheIntegrator.10.mczTool-Base-TheIntegrator.195.mczTool-Catalog-TheIntegrator.61.mczTool-CriticBrowser-TheIntegrator.67.mczTool-DependencyAnalyser-ChristopheDemarey.31.mczTool-DependencyAnalyser-Test-TheIntegrator.18.mczTool-DependencyAnalyser-Test-Data-ChristopheDemarey.2.mczTool-DependencyAnalyser-UI-ChristopheDemarey.54.mczTool-Diff-TheIntegrator.52.mczTool-ExternalBrowser-TheIntegrator.59.mczTool-FileList-TheIntegrator.99.mczTool-FileList-Tests-EstebanLorenzano.3.mczTool-Finder-TheIntegrator.78.mczTool-ImageCleaner-TheIntegrator.19.mczTool-ProcessBrowser-TheIntegrator.27.mczTool-Profilers-TheIntegrator.37.mczTool-SystemReporter-TheIntegrator.19.mczTool-Transcript-TheIntegrator.25.mczTool-Workspace-TheIntegrator.48.mczTools-TheIntegrator.1532.mczTools-Test-TheIntegrator.26.mczTraits-TheIntegrator.988.mczTranscript-TheIntegrator.56.mczTravisIntegrationHelp-TheIntegrator.8.mczTxText-Athens-EstebanLorenzano.58.mczTxText-AthensTests-HenrikNergaard.13.mczTxText-Model-MarcusDenker.67.mczTxText-Styler-HenrikNergaard.18.mczTxTextTests-Model-SeanDeNigris.29.mczUIManager-TheIntegrator.195.mczUnicode-Initialization-TheIntegrator.17.mczUnifiedFFI-TheIntegrator.109.mczUnifiedFFI-Legacy-TheIntegrator.4.mczUnifiedFFI-Tests-TheIntegrator.42.mczUpdateStreamer-Core-TheIntegrator.34.mczUpdateStreamer-Tests-TheIntegrator.9.mczVersionner-Commit-TheIntegrator.34.mczVersionner-Core-Announcements-ChristopheDemarey.6.mczVersionner-Core-Commands-MarcusDenker.65.mczVersionner-Core-DependenciesModel-MarcusDenker.106.mczVersionner-Core-Model-PabloTesone.57.mczVersionner-Nautilus-PavelKrivanek.1.mczVersionner-Spec-Browser-PabloTesone.212.mczVersionner-Tests-Core-Commands-MarcusDenker.21.mczVersionner-Tests-Core-DependenciesModel-ChristopheDemarey.46.mczVersionner-Tests-Core-Model-TheIntegrator.36.mczVersionner-Tests-Resources-MarcusDenker.18.mczWorldMenuHelp-TheIntegrator.2.mczWriteBarrierTests-TheIntegrator.20.mczZinc-Character-Encoding-Core-SvenVanCaekenberghe.46.mczZinc-Character-Encoding-Tests-TheIntegrator.31.mczZinc-FileSystem-TheIntegrator.15.mczZinc-HTTP-TheIntegrator.459.mczZinc-Resource-Meta-Core-SvenVanCaekenberghe.61.mczZinc-Resource-Meta-FileSystem-SvenVanCaekenberghe.8.mczZinc-Resource-Meta-Tests-SvenVanCaekenberghe.37.mczZinc-Tests-SvenVanCaekenberghe.238.mczZinc-Zodiac-TheIntegrator.38.mczZodiac-Core-TheIntegrator.46.mczZodiac-Extra-StephaneDucasse.10.mczZodiac-Tests-TheIntegrator.17.mcz'findTokens: String lf , String cr! !!ScriptLoader methodsFor: 'pharo - updates' stamp: 'TheIntegrator 5/23/2017 15:34'!update60497	"self new update60497"	self withUpdateLog: '20084 Highlight Message Send is not enabled by default in bootstrapped/reloaded image	https://pharo.fogbugz.com/f/cases/2008420072 Importing Resource Help needs improvement	https://pharo.fogbugz.com/f/cases/2007219809 Failing test: WeakAnnouncerTest>>#testNoDeadWeakSubscriptions	https://pharo.fogbugz.com/f/cases/19809'.	self loadTogether: self script60497 merge: false.	(SystemAnnouncer uniqueInstance subscriptions glmSubscriptions select: [:sub | sub subscriber isNil]) do: #finalize. 3 timesRepeat: [Smalltalk garbageCollect ].	self flushCaches.! !ScriptLoader removeSelector: #update60496!ScriptLoader removeSelector: #script60496!"ScriptLoader60"!!ImportingResourceHelp class methodsFor: 'documentation' stamp: 'AlexandreBergel 5/19/2017 15:40' prior: 29378986!encodingAndDecoding	^ HelpTopic 		title: 'Encoding and Decoding'		contents: (self heading: 'Encoding and Decoding'),'The basic mechanism to encode and decode data is provided by the class Base64MimeConverter. Consider the following example:mimeEncoded := ''Hello World'' asByteArray base64Encoded.(Base64MimeConverter mimeDecodeToBytes: mimeEncoded readStream) contents asStringThe variable mimeEncoded contains an encoding of the Hello World string using the mime64 encoding. The method #mimeDecodeToBytes: reads mime64 strings from a stream. The example uses a string, but it could refers to any objects. You essentially need a ReadStream. '! !!ImportingResourceHelp class methodsFor: 'documentation' stamp: 'AlexandreBergel 5/19/2017 15:48'!encodingAndDecodingImage	^ HelpTopic 		title: 'Encoding and Decoding Image'		contents: (self heading: 'Encoding and Decoding Image'),'Embedding pictures in plan source code is often the reason why one need to encode resources. The following script loads an image located in the filesystem, create a string-friendly representation, and store it in a method. You probably want to keep the image in a class variable or a hash table.',(self bold: 'form := PNGReadWriter formFromStream: ''/Users/alexandrebergel/Dropbox/Screenshots/Screenshot 2017-05-19 15.25.44.png'' asFileReference readStream."Write the stream on a stream"w := WriteStream on: ByteArray new.PNGReadWriter putForm: form onStream: w.w contents."Convert the byteArray into mime 64. It takes less space in the image"encodedContent := w contents base64Encoded."The following code converts the stream content "PNGReadWriter formFromStream: (Base64MimeConverter mimeDecodeToBytes: encodedContent readStream)."We encode the image as a method"Object compile: ''imageSource  ^ '''',  encodedContent, ''''.Object compile: ''image ^ PNGReadWriter formFromStream: (Base64MimeConverter mimeDecodeToBytes: self imageSource readStream). ''."A better implementation is to cache the image in an instance or class variable""The following expression return the image initially encoded"Object new image '),''! !!ImportingResourceHelp class methodsFor: 'documentation' stamp: 'AlexandreBergel 5/19/2017 15:39' prior: 29378243!overview	^ HelpTopic 		title: 'Overview'		contents: (self heading: 'Overview'),'Non trivial applications often rely on resources that may be externally provided such as icons, pictures, sounds. Such resources are typically defined as external files. Naturally, you can make your application depends on external files, however, importing resource files within the Pharo image and make it integrally part of you code has a number of advantages:- you can simply deploy your application by downloading it from smalltalkhub. - having less dependencies on external files is always good to avoid technical subtilities such as file path containing weird characters. '! !!ImportingResourceHelp class methodsFor: 'accessing' stamp: 'AlexandreBergel 5/19/2017 15:40' prior: 29380828!pages	^#(overview encodingAndDecoding encodingAndDecodingImage)! !!BaselineOfIDE methodsFor: 'actions' stamp: 'PavelKrivanek 5/23/2017 12:47' prior: 18109028!additionalInitialization	self class environment at: #GTGenericStackDebugger ifPresent: [	  Smalltalk tools register: GTGenericStackDebugger as: #debugger.	  Smalltalk tools registeredDebuggersWithRanks.	  Smalltalk tools debuggers add: ((self class environment at: #GTGenericStackDebugger)->3).	  Smalltalk tools debuggers add: ((self class environment at: #GTSUnitDebugger)->70).	  Smalltalk tools debuggers add: ((self class environment at: #GTBytecodeDebugger)->5).].	  	self class environment at: #GTPlayground ifPresent: [:playground | 	  Smalltalk tools register: playground as: #workspace.].	self class environment at: #GTInspector ifPresent: [:inspector | 	  Smalltalk tools register: inspector as: #inspector.].	  Smalltalk tools register: ExternalChangesBrowser as: #changeList.	Smalltalk tools register: FileList as: #fileList.	Smalltalk tools register: Finder as: #finder.	Smalltalk tools register: ProcessBrowser as: #processBrowser.	Smalltalk tools register: RecentMessageList as: #recentMessageList.	Smalltalk tools register: SyntaxErrorDebugger as: #syntaxErrorDebugger.	Smalltalk tools register: TimeProfiler as: #timeProfiler.	(MorphicCoreUIManager classPool at: #UIProcess) ifNotNil: [ :proc | proc terminate ].	MorphicCoreUIManager classPool at: #UIProcess put: nil.	PolymorphSystemSettings desktopColor:  Color veryVeryLightGray lighter.	SourceCodeFonts setSourceCodeFonts: 10.	FreeTypeSystemSettings loadFt2Library: true.	FreeTypeSettings current monitorType: #LCD.	FreeTypeSettings current glyphContrast: 55.		CatalogSettings displayCatalogProjectsInSpotter: false.	RealEstateAgent usedStrategy: #cascadeFor:initialExtent:world:.	GrowlMorph position: #bottomLeft.	ShortcutReminder enabled: true.	self class environment at: #QASettings ifPresent: [:qaSettings |	  qaSettings nautilusPlugin: true].	KMRepository reset.	Morph shortcutsHandler: KMShortcutHandler new.	"because of Komitter"	MCSaveVersionDialog previousMessages add: String new.	RBProgramNode formatterClass: BIConfigurableFormatter.	Color flushCache.	ASTTransformExamplePluginActive recompile.	PharoCommandLineHandler recompile.	SmalltalkImage recompile.		RubCharacterScanner initialize.		RubAbstractTextArea highlightMessageSend: true.		Pharo3DarkTheme beCurrent.		Smalltalk ui theme settings secondarySelectionColor: (Color r: 0.31 g: 0.31 b: 0.36 alpha: 1.0).		3 timesRepeat: [		Smalltalk garbageCollect.		Undeclared removeUnreferencedKeys.].		self loadIceberg.! !"BaselineOfIDE"!"ImportingResource-Help"!"Postscript:Leave the line above, and replace the rest of this comment by a useful one.Executable statements should follow this comment, and shouldbe separated by periods, with no exclamation points (!!).Be sure to put any further comments in double-quotes, like this one."|repository|repository := MCHttpRepository                location: 'http://smalltalkhub.com/mc/Pharo/Pharo60/main'                user: ''                password: ''.(repository loadVersionFromFileNamed:'ScriptLoader60-TheIntegrator.573.mcz') load.ScriptLoader new update60497.!----End fileIn----!----QUIT----2017-05-23T15:38:14.333294+02:00 Pharo.image priorSource: 62432!----QUIT----2017-05-23T15:38:24.907147+02:00 Pharo.image priorSource: 87995!!ScriptLoader methodsFor: 'public' stamp: 'TheIntegrator 6/1/2017 15:55' prior: 33617034!commentForCurrentUpdate ^ '20095 SystemProgressMorph should call doOneCycleNow on refresh only when active process is UIProcess	https://pharo.fogbugz.com/f/cases/2009520099 Cairo fonts crashing on 64bits	https://pharo.fogbugz.com/f/cases/20099'! !!ScriptLoader methodsFor: 'pharo - scripts' stamp: 'TheIntegrator 6/1/2017 15:55'!script60498	^ 'AST-Core-TheIntegrator.494.mczAST-Tests-Core-TheIntegrator.134.mczAlien-RonieSalgado.40.mczAnnouncements-Core-TheIntegrator.84.mczAnnouncements-Help-TheIntegrator.12.mczAnnouncements-Tests-Core-TheIntegrator.39.mczAthens-Balloon-MarcusDenker.20.mczAthens-Cairo-TheIntegrator.147.mczAthens-CairoPools-NicolaiHess.14.mczAthens-Core-AliakseiSyrel.57.mczAthens-Examples-TheIntegrator.47.mczAthens-Morphic-TheIntegrator.69.mczAthens-Text-HenrikNergaard.17.mczBalloon-TheIntegrator.139.mczBalloon-Tests-TheIntegrator.2.mczBaselineOfBasicTools-TheIntegrator.8.mczBaselineOfDisplay-TheIntegrator.4.mczBaselineOfIDE-TheIntegrator.55.mczBaselineOfIceberg-cypress.1.mczBaselineOfLibGit-cypress.1.mczBaselineOfMetacello-EstebanLorenzano.89.mczBaselineOfMorphic-TheIntegrator.34.mczBaselineOfMorphicCore-TheIntegrator.7.mczBaselineOfPharoBootstrap-TheIntegrator.4.mczBaselineOfSUnit-TheIntegrator.4.mczBaselineOfUI-TheIntegrator.11.mczBaselineOfUnifiedFFI-TheIntegrator.4.mczBlueInk-Core-TheIntegrator.29.mczBlueInk-Extras-TheIntegrator.12.mczBlueInk-Tests-TheIntegrator.12.mczCodeExport-TheIntegrator.21.mczCodeImport-TheIntegrator.90.mczCodeImportCommandLineHandlers-TheIntegrator.15.mczCollections-Abstract-TheIntegrator.345.mczCollections-Arithmetic-TheIntegrator.22.mczCollections-Atomic-TheIntegrator.16.mczCollections-DoubleLinkedList-TheIntegrator.2.mczCollections-DoubleLinkedListTests-TheIntegrator.2.mczCollections-Native-TheIntegrator.19.mczCollections-Sequenceable-TheIntegrator.261.mczCollections-Stack-TheIntegrator.10.mczCollections-Streams-TheIntegrator.192.mczCollections-Strings-TheIntegrator.449.mczCollections-Support-TheIntegrator.67.mczCollections-Tests-TheIntegrator.101.mczCollections-Unordered-TheIntegrator.248.mczCollections-Weak-TheIntegrator.108.mczColors-TheIntegrator.3.mczCompiler-TheIntegrator.608.mczCompression-TheIntegrator.182.mczCompression-Tests-TheIntegrator.7.mczConfigurationCommandLineHandler-Core-TheIntegrator.29.mczConfigurationCommandLineHandler-Tests-MarcusDenker.11.mczContributingToTheCatalogHelp-TheIntegrator.9.mczDebugger-Tests-TheIntegrator.6.mczDebuggerActions-TheIntegrator.92.mczDebuggerFilters-TheIntegrator.9.mczDebuggerModel-TheIntegrator.130.mczDeprecated60-TheIntegrator.22.mczEmbeddedFreeType-TheIntegrator.30.mczEmbeddedFreeType-Tests-TheIntegrator.4.mczEmergencyEvaluator-TheIntegrator.35.mczEpicea-TheIntegrator.858.mczEpiceaBrowsers-MartinDias.180.mczEpiceaBrowsersTests-MartinDias.32.mczEpiceaTests-MartinDias.25.mczFFI-Kernel-EstebanLorenzano.45.mczFFI-Pools-TheIntegrator.5.mczFileSystem-Core-TheIntegrator.222.mczFileSystem-Disk-TheIntegrator.110.mczFileSystem-Memory-TheIntegrator.63.mczFileSystem-Tests-Core-TheIntegrator.103.mczFileSystem-Tests-Disk-StephaneDucasse.25.mczFileSystem-Tests-Memory-TheIntegrator.8.mczFileSystem-Zip-TheIntegrator.19.mczFiles-TheIntegrator.428.mczFiles-Tests-TheIntegrator.12.mczFlashback-Decompiler-EstebanLorenzano.21.mczFlashback-Decompiler-Tests-TheIntegrator.97.mczFontChooser-TheIntegrator.24.mczFontInfrastructure-TheIntegrator.18.mczFontInfrastructure-Tests-TheIntegrator.2.mczFreeType-TheIntegrator.756.mczFreeType-Tests-TheIntegrator.2.mczFuel-MartinDias.826.mczFuelCommandLineHandler-TheIntegrator.25.mczFuelPlatform-Core-MaxLeske.2.mczFuelPlatform-Pharo-06-MaxLeske.2.mczFuelPlatform-Pharo-Core-MaxLeske.1.mczFuelSystem-FileRegistry-TheIntegrator.4.mczFuelTests-MaxLeske.415.mczFuelTools-Debugger-MaxLeske.14.mczFuzzyMatcher-TheIntegrator.20.mczFuzzyMatcher-Tests-TheIntegrator.8.mczGT-BytecodeDebugger-AndreiChis.36.mczGT-Debugger-TheIntegrator.383.mczGT-EventRecorder-TheIntegrator.81.mczGT-EventRecorder-Tests-TheIntegrator.42.mczGT-Inspector-TheIntegrator.468.mczGT-InspectorExtensions-Core-AndreiChis.259.mczGT-Playground-TheIntegrator.148.mczGT-SUnitDebugger-TudorGirba.39.mczGT-Spotter-AliakseiSyrel.412.mczGT-Spotter-EventRecorder-AndreiChis.114.mczGT-SpotterExtensions-Core-TheIntegrator.224.mczGT-Tests-Debugger-AndreiChis.14.mczGT-Tests-Inspector-AndreiChis.60.mczGT-Tests-Playground-StefanReichhart.4.mczGT-Tests-Spotter-AndreiChis.31.mczGeneralRules-TheIntegrator.11.mczGlamour-Announcements-AndreiChis.11.mczGlamour-Browsers-AndreiChis.112.mczGlamour-Core-AndreiChis.338.mczGlamour-Examples-TheIntegrator.321.mczGlamour-FastTable-TheIntegrator.85.mczGlamour-Helpers-TudorGirba.40.mczGlamour-Morphic-Brick-TheIntegrator.448.mczGlamour-Morphic-Brick-Tests-TheIntegrator.16.mczGlamour-Morphic-Pager-AndreiChis.114.mczGlamour-Morphic-Renderer-AndreiChis.361.mczGlamour-Morphic-Theme-TheIntegrator.233.mczGlamour-Morphic-Widgets-TheIntegrator.209.mczGlamour-Presentations-AndreiChis.190.mczGlamour-Rubric-Presentations-AndreiChis.61.mczGlamour-SpecIntegration-TheIntegrator.6.mczGlamour-Tests-Core-TheIntegrator.115.mczGlamour-Tests-Morphic-TheIntegrator.140.mczGlamour-Tests-Resources-AndreiChis.5.mczGlamour-Tests-Rubric-AndreiChis.36.mczGofer-Core-TheIntegrator.237.mczGofer-Tests-TheIntegrator.164.mczGofer-UI-TheIntegrator.2.mczGraphics-Canvas-TheIntegrator.14.mczGraphics-Display Objects-TheIntegrator.188.mczGraphics-Files-TheIntegrator.78.mczGraphics-Fonts-TheIntegrator.109.mczGraphics-Primitives-TheIntegrator.203.mczGraphics-Shapes-TheIntegrator.4.mczGraphics-Tests-TheIntegrator.85.mczGraphics-Transformations-TheIntegrator.17.mczGrowl-TheIntegrator.47.mczHelpSystem-Core-TheIntegrator.178.mczHelpSystem-Tests-TheIntegrator.32.mczHiedra-MartinDias.146.mczHiedraTests-MartinDias.2.mczHowToContributeHelp-TheIntegrator.4.mczHudsonBuildTools20-TheIntegrator.100.mczIceberg-cypress.1.mczIceberg-Libgit-cypress.1.mczIceberg-Metacello-Integration-cypress.1.mczIceberg-Plugin-cypress.1.mczIceberg-UI-cypress.1.mczImportingResource-Help-TheIntegrator.8.mczIssueTracking-TheIntegrator.6.mczIssueTracking-Tests-TheIntegrator.3.mczJobs-TheIntegrator.30.mczJobsTests-TheIntegrator.2.mczKernel-TheIntegrator.2510.mczKernel-Rules-TheIntegrator.13.mczKernel-Tests-TheIntegrator.173.mczKernel-Tests-Rules-TheIntegrator.5.mczKeymapping-Core-TheIntegrator.204.mczKeymapping-KeyCombinations-TheIntegrator.66.mczKeymapping-Pragmas-TheIntegrator.62.mczKeymapping-Settings-StephaneDucasse.83.mczKeymapping-Tests-TheIntegrator.111.mczKeymapping-Tools-Spec-TheIntegrator.32.mczKomitter-TheIntegrator.192.mczLibGit-Core-cypress.1.mczManifest-Core-TheIntegrator.252.mczManifest-Resources-Tests-MarcusDenker.14.mczManifest-Tests-TheIntegrator.55.mczMenuRegistration-TheIntegrator.93.mczMessageBrowserRefactoringAddition-StephaneDucasse.2.mczMetacello-Base-EstebanLorenzano.126.mczMetacello-Bitbucket-EstebanLorenzano.8.mczMetacello-Core-TheIntegrator.838.mczMetacello-FileTree-EstebanLorenzano.38.mczMetacello-GitBasedRepository-TheIntegrator.24.mczMetacello-GitHub-TheIntegrator.56.mczMetacello-MC-TheIntegrator.741.mczMetacello-PharoCommonPlatform-TheIntegrator.26.mczMetacello-Platform-TheIntegrator.5.mczMetacello-ProfStef-TheIntegrator.22.mczMetacello-Reference-EstebanLorenzano.38.mczMetacello-TestsCommonMC-TheIntegrator.9.mczMetacello-TestsCore-EstebanLorenzano.41.mczMetacello-TestsMC-EstebanLorenzano.405.mczMetacello-TestsMCCore-EstebanLorenzano.8.mczMetacello-TestsMCResources-EstebanLorenzano.33.mczMetacello-TestsPlatform-TheIntegrator.25.mczMetacello-TestsReference-EstebanLorenzano.22.mczMetacello-ToolBox-TheIntegrator.154.mczMetacello-Tutorial-EstebanLorenzano.28.mczMonticello-TheIntegrator.1178.mczMonticello-OldDataStreamCompatibility-TheIntegrator.11.mczMonticello-Tests-TheIntegrator.43.mczMonticelloConfigurations-TheIntegrator.75.mczMonticelloFileServices-TheIntegrator.9.mczMonticelloFileTree-Core-TheIntegrator.152.mczMonticelloFileTree-FileSystem-Utilities-TheIntegrator.34.mczMonticelloGUI-TheIntegrator.437.mczMonticelloMocks-TheIntegrator.9.mczMonticelloRemoteRepositories-TheIntegrator.19.mczMoose-Algos-Graph-VincentBlondeau.33.mczMorphic-Base-TheIntegrator.618.mczMorphic-Core-TheIntegrator.313.mczMorphic-Examples-TheIntegrator.64.mczMorphic-Tests-TheIntegrator.13.mczMorphic-Widgets-Basic-TheIntegrator.110.mczMorphic-Widgets-ColorPicker-TheIntegrator.23.mczMorphic-Widgets-Extra-TheIntegrator.30.mczMorphic-Widgets-FastTable-TheIntegrator.222.mczMorphic-Widgets-List-TheIntegrator.23.mczMorphic-Widgets-Pluggable-TheIntegrator.79.mczMorphic-Widgets-PolyTabs-TheIntegrator.8.mczMorphic-Widgets-Scrolling-TheIntegrator.37.mczMorphic-Widgets-Tabs-TheIntegrator.54.mczMorphic-Widgets-Taskbar-TheIntegrator.27.mczMorphic-Widgets-TickList-TheIntegrator.2.mczMorphic-Widgets-Tree-TheIntegrator.66.mczMorphic-Widgets-Windows-TheIntegrator.117.mczMultilingual-Encodings-TheIntegrator.63.mczMultilingual-Languages-TheIntegrator.59.mczMultilingual-OtherLanguages-TheIntegrator.22.mczMultilingual-Tests-TheIntegrator.46.mczMultilingual-TextConversion-TheIntegrator.83.mczMultilingual-TextConverterOtherLanguages-TheIntegrator.4.mczNECompletion-TheIntegrator.257.mczNECompletion-Tests-TheIntegrator.10.mczNautilus-TheIntegrator.1366.mczNautilus-GroupManager-TheIntegrator.24.mczNautilus-GroupManagerUI-TheIntegrator.44.mczNautilus-Tests-TheIntegrator.52.mczNautilusCommon-TheIntegrator.327.mczNautilusGroupAutoBuilder-TheIntegrator.20.mczNautilusRefactoring-TheIntegrator.315.mczNetwork-Kernel-TheIntegrator.138.mczNetwork-MIME-TheIntegrator.75.mczNetwork-Mail-TheIntegrator.52.mczNetwork-Protocols-TheIntegrator.105.mczNetwork-Tests-TheIntegrator.28.mczNetwork-UUID-TheIntegrator.64.mczNetwork-Url-TheIntegrator.103.mczNewValueHolder-TheIntegrator.35.mczNodeNavigation-TheIntegrator.57.mczNodeNavigation-Tests-TheIntegrator.3.mczNonInteractiveTranscript-TheIntegrator.25.mczOSWindow-Core-TheIntegrator.125.mczOSWindow-SDL2-TheIntegrator.110.mczOSWindow-SDL2-Examples-TheIntegrator.16.mczOSWindow-Tests-RonieSalgado.3.mczOSWindow-VM-MerwanOuddane.4.mczOmbu-MartinDias.277.mczOmbuTests-MartinDias.33.mczOpalCompiler-Core-TheIntegrator.890.mczOpalCompiler-Tests-TheIntegrator.380.mczOpalTools-TheIntegrator.24.mczPharo-Help-TheIntegrator.49.mczPharoBootstrap-Initialization-TheIntegrator.7.mczPharoDocComment-StephaneDucasse.6.mczPolymorph-Widgets-TheIntegrator.1435.mczPolymorph-Widgets-Rules-TheIntegrator.11.mczPragmaCollector-TheIntegrator.18.mczProfStef-Core-TheIntegrator.85.mczProfStef-Help-TheIntegrator.18.mczProfStef-Tests-TheIntegrator.27.mczQualityAssistant-YuriyTymchuk.117.mczQualityAssistant-Test-YuriyTymchuk.2.mczQualityAssistantRecording-Uko.28.mczRPackage-Core-TheIntegrator.470.mczRPackage-Tests-TheIntegrator.199.mczRandom-Core-TheIntegrator.10.mczRandom-Tests-TheIntegrator.6.mczRecentSubmissions-TheIntegrator.246.mczRefactoring-Changes-TheIntegrator.70.mczRefactoring-Core-TheIntegrator.345.mczRefactoring-Critics-TheIntegrator.300.mczRefactoring-Environment-TheIntegrator.88.mczRefactoring-Help-TheIntegrator.7.mczRefactoring-Tests-Changes-TheIntegrator.40.mczRefactoring-Tests-Core-TheIntegrator.147.mczRefactoring-Tests-Critics-TheIntegrator.54.mczRefactoring-Tests-Environment-TheIntegrator.30.mczReflectionMirrors-Primitives-TheIntegrator.9.mczReflectionMirrors-Primitives-Tests-TheIntegrator.6.mczReflectivity-TheIntegrator.339.mczReflectivity-Examples-TheIntegrator.51.mczReflectivity-Tests-TheIntegrator.228.mczReflectivity-Tools-TheIntegrator.79.mczReflectivity-Tools-Tests-TheIntegrator.32.mczRegex-Core-TheIntegrator.40.mczRegex-Help-MarcusDenker.5.mczRegex-Tests-Core-TheIntegrator.11.mczReleaseTests-TheIntegrator.33.mczRenraku-YuriyTymchuk.150.mczRenraku-Help-YuriyTymchuk.3.mczRenraku-Test-YuriyTymchuk.23.mczRing-Core-Containers-TheIntegrator.45.mczRing-Core-Kernel-TheIntegrator.248.mczRing-Monticello-TheIntegrator.43.mczRing-Tests-Containers-MarcusDenker.18.mczRing-Tests-Kernel-TheIntegrator.95.mczRing-Tests-Monticello-MarcusDenker.19.mczRingChunkImporter-TheIntegrator.8.mczRubric-TheIntegrator.448.mczRubric-Rules-TheIntegrator.6.mczRubric-Styling-TheIntegrator.11.mczRubric-Tests-TheIntegrator.10.mczSTON-Core-TheIntegrator.86.mczSTON-Tests-TheIntegrator.77.mczSTON-Text support-TheIntegrator.2.mczSUnit-Core-TheIntegrator.221.mczSUnit-Help-MarcusDenker.9.mczSUnit-Rules-TheIntegrator.5.mczSUnit-Tests-TheIntegrator.68.mczSUnit-UI-TheIntegrator.153.mczSUnit-UITesting-TheIntegrator.36.mczScriptLoader-Tests-TheIntegrator.4.mczScriptingExtensions-TheIntegrator.6.mczScriptingExtensions-Tests-TheIntegrator.3.mczSettings-Graphics-TheIntegrator.34.mczSettings-Polymorph-TheIntegrator.98.mczSettings-System-TheIntegrator.43.mczShoreLine-Report-Core-TommasoDalSasso.11.mczShoreLine-Report-Settings-TheIntegrator.7.mczShoreLine-Report-UI-TheIntegrator.19.mczShout-TheIntegrator.313.mczShout-Tests-TheIntegrator.2.mczSlot-TheIntegrator.790.mczSlot-Tests-TheIntegrator.105.mczSmartSuggestions-TheIntegrator.269.mczSmartSuggestions-Tests-TheIntegrator.39.mczSortFunctions-Core-TheIntegrator.7.mczSortFunctions-Tests-TheIntegrator.6.mczSpec-Core-TheIntegrator.541.mczSpec-Debugger-TheIntegrator.284.mczSpec-Examples-TheIntegrator.133.mczSpec-Help-TheIntegrator.13.mczSpec-Inspector-TheIntegrator.289.mczSpec-Layout-TheIntegrator.75.mczSpec-MorphicAdapters-TheIntegrator.292.mczSpec-PolyWidgets-TheIntegrator.93.mczSpec-Tests-TheIntegrator.107.mczSpec-Tools-TheIntegrator.386.mczStartupPreferences-TheIntegrator.153.mczSystem-Announcements-TheIntegrator.138.mczSystem-BasicCommandLineHandler-TheIntegrator.21.mczSystem-Caching-TheIntegrator.29.mczSystem-CachingTests-TheIntegrator.19.mczSystem-Changes-TheIntegrator.309.mczSystem-Changes-FileServices-TheIntegrator.4.mczSystem-Clipboard-TheIntegrator.42.mczSystem-CommandLine-TheIntegrator.181.mczSystem-CommandLine-TextSupport-TheIntegrator.6.mczSystem-CommandLineHandler-TheIntegrator.26.mczSystem-FileRegistry-TheIntegrator.53.mczSystem-Finalization-TheIntegrator.44.mczSystem-Hashing-TheIntegrator.52.mczSystem-History-EstebanLorenzano.7.mczSystem-History-Tests-EstebanLorenzano.3.mczSystem-Identification-TheIntegrator.9.mczSystem-Identification-Tests-TheIntegrator.2.mczSystem-Installers-TheIntegrator.44.mczSystem-Localization-TheIntegrator.108.mczSystem-Localization-Tests-TheIntegrator.8.mczSystem-Model-TheIntegrator.13.mczSystem-OSEnvironments-TheIntegrator.40.mczSystem-Object Events-TheIntegrator.28.mczSystem-Platforms-TheIntegrator.85.mczSystem-Serial Port-StephaneDucasse.23.mczSystem-SessionManager-TheIntegrator.43.mczSystem-SessionManager-Tests-ChristopheDemarey.9.mczSystem-Settings-TheIntegrator.374.mczSystem-Settings-Rules-TheIntegrator.2.mczSystem-Settings-Tests-TheIntegrator.15.mczSystem-Sound-TheIntegrator.20.mczSystem-Sources-TheIntegrator.73.mczSystem-Support-TheIntegrator.1276.mczSystem-Support-Rules-TheIntegrator.2.mczSystem-SupportTests-TheIntegrator.7.mczSystem-VMEvents-TheIntegrator.19.mczTests-TheIntegrator.794.mczText-Core-TheIntegrator.66.mczText-Diff-TheIntegrator.6.mczText-Edition-TheIntegrator.128.mczText-Edition-Tests-EstebanLorenzano.3.mczText-Scanning-TheIntegrator.33.mczText-Tests-TheIntegrator.10.mczTool-Base-TheIntegrator.195.mczTool-Catalog-TheIntegrator.61.mczTool-CriticBrowser-TheIntegrator.67.mczTool-DependencyAnalyser-ChristopheDemarey.31.mczTool-DependencyAnalyser-Test-TheIntegrator.18.mczTool-DependencyAnalyser-Test-Data-ChristopheDemarey.2.mczTool-DependencyAnalyser-UI-ChristopheDemarey.54.mczTool-Diff-TheIntegrator.52.mczTool-ExternalBrowser-TheIntegrator.59.mczTool-FileList-TheIntegrator.99.mczTool-FileList-Tests-EstebanLorenzano.3.mczTool-Finder-TheIntegrator.78.mczTool-ImageCleaner-TheIntegrator.19.mczTool-ProcessBrowser-TheIntegrator.27.mczTool-Profilers-TheIntegrator.37.mczTool-SystemReporter-TheIntegrator.19.mczTool-Transcript-TheIntegrator.25.mczTool-Workspace-TheIntegrator.48.mczTools-TheIntegrator.1532.mczTools-Test-TheIntegrator.26.mczTraits-TheIntegrator.988.mczTranscript-TheIntegrator.56.mczTravisIntegrationHelp-TheIntegrator.8.mczTxText-Athens-EstebanLorenzano.58.mczTxText-AthensTests-HenrikNergaard.13.mczTxText-Model-MarcusDenker.67.mczTxText-Styler-HenrikNergaard.18.mczTxTextTests-Model-SeanDeNigris.29.mczUIManager-TheIntegrator.195.mczUnicode-Initialization-TheIntegrator.17.mczUnifiedFFI-TheIntegrator.109.mczUnifiedFFI-Legacy-TheIntegrator.4.mczUnifiedFFI-Tests-TheIntegrator.42.mczUpdateStreamer-Core-TheIntegrator.34.mczUpdateStreamer-Tests-TheIntegrator.9.mczVersionner-Commit-TheIntegrator.34.mczVersionner-Core-Announcements-ChristopheDemarey.6.mczVersionner-Core-Commands-MarcusDenker.65.mczVersionner-Core-DependenciesModel-MarcusDenker.106.mczVersionner-Core-Model-PabloTesone.57.mczVersionner-Nautilus-PavelKrivanek.1.mczVersionner-Spec-Browser-PabloTesone.212.mczVersionner-Tests-Core-Commands-MarcusDenker.21.mczVersionner-Tests-Core-DependenciesModel-ChristopheDemarey.46.mczVersionner-Tests-Core-Model-TheIntegrator.36.mczVersionner-Tests-Resources-MarcusDenker.18.mczWorldMenuHelp-TheIntegrator.2.mczWriteBarrierTests-TheIntegrator.20.mczZinc-Character-Encoding-Core-SvenVanCaekenberghe.46.mczZinc-Character-Encoding-Tests-TheIntegrator.31.mczZinc-FileSystem-TheIntegrator.15.mczZinc-HTTP-TheIntegrator.459.mczZinc-Resource-Meta-Core-SvenVanCaekenberghe.61.mczZinc-Resource-Meta-FileSystem-SvenVanCaekenberghe.8.mczZinc-Resource-Meta-Tests-SvenVanCaekenberghe.37.mczZinc-Tests-SvenVanCaekenberghe.238.mczZinc-Zodiac-TheIntegrator.38.mczZodiac-Core-TheIntegrator.46.mczZodiac-Extra-StephaneDucasse.10.mczZodiac-Tests-TheIntegrator.17.mcz'findTokens: String lf , String cr! !!ScriptLoader methodsFor: 'pharo - updates' stamp: 'TheIntegrator 6/1/2017 15:55'!update60498	"self new update60498"	self withUpdateLog: '20095 SystemProgressMorph should call doOneCycleNow on refresh only when active process is UIProcess	https://pharo.fogbugz.com/f/cases/2009520099 Cairo fonts crashing on 64bits	https://pharo.fogbugz.com/f/cases/20099'.	self loadTogether: self script60498 merge: false.	self flushCaches.! !ScriptLoader removeSelector: #update60497!ScriptLoader removeSelector: #script60497!"ScriptLoader60"!!SystemProgressMorph methodsFor: 'updating' stamp: 'DenisKudryashov 5/30/2017 18:12' prior: 63149702!refresh	"We may be blocking the UI thread, and thus have to draw the world ourselves when necessary"	lastRefresh := Time millisecondClockValue.	UIManager default uiProcess == Processor activeProcess		ifTrue: [ self currentWorld doOneCycleNow]! !!CairoFontFace class methodsFor: 'instance creation' stamp: 'EstebanLorenzano 6/1/2017 12:10' prior: 18768599!fromFreetypeFace: aFace	| handle cairoFace |		handle := aFace handle pointerAt: 1. 	cairoFace := self primFtFace: handle loadFlags: ( LoadNoHinting | LoadTargetLCD | LoadNoAutohint | LoadNoBitmap). 		^ cairoFace initializeWithFreetypeFace: aFace! !!CairoFontFace class methodsFor: 'instance creation' stamp: 'EstebanLorenzano 6/1/2017 12:10' prior: 18768082!primFtFace: aFace loadFlags: flags"cairo_font_face_t * cairo_ft_font_face_create_for_ft_face                                                        (FT_Face face,                                                         int load_flags);"	<primitive: #primitiveNativeCall module: #NativeBoostPlugin error: errorCode>		^ self nbCall: #( CairoFontFace cairo_ft_font_face_create_for_ft_face(void * aFace , int flags )) ! !!CairoScaledFont class methodsFor: 'instance creation' stamp: 'EstebanLorenzano 6/1/2017 12:09' prior: 18799108!fromFreetypeFont: aFont	| ftFace face |	^ CairoBackendCache soleInstance at: aFont ifAbsentPut: [ | emphasis |			emphasis := aFont simulatedEmphasis.			ftFace := aFont face.			face := CairoBackendCache soleInstance 				at: {ftFace.	emphasis} 				ifAbsentPut: [ | cff |					cff := CairoFontFace fromFreetypeFace: ftFace.					emphasis ifNotNil: [ cff synthesizeEmphasis: emphasis ].					cff ].			self fromFreetypeFont: aFont cairoFace: face ]! !!AthensCairoMatrix class methodsFor: 'field definition' stamp: 'EstebanLorenzano 6/1/2017 15:34' prior: 17537657!fieldsDesc	"self rebuildFieldAccessors"	^ #(   double sx; double shx;   double shy; double sy;   double x; double y;	)! !!SystemProgressItemMorph methodsFor: 'private' stamp: 'DenisKudryashov 5/30/2017 18:12' prior: 63145033!refresh	lastRefresh := Time millisecondClockValue.	UIManager default uiProcess == Processor activeProcess		ifTrue: [ self currentWorld doOneCycleNow ]! !"Athens-Cairo"!"Morphic-Base"!"Postscript:Leave the line above, and replace the rest of this comment by a useful one.Executable statements should follow this comment, and shouldbe separated by periods, with no exclamation points (!!).Be sure to put any further comments in double-quotes, like this one."|repository|repository := MCHttpRepository                location: 'http://smalltalkhub.com/mc/Pharo/Pharo60/main'                user: ''                password: ''.(repository loadVersionFromFileNamed:'ScriptLoader60-TheIntegrator.574.mcz') load.ScriptLoader new update60498.!----End fileIn----!----QUIT----2017-06-01T15:57:07.284048+02:00 Pharo.image priorSource: 88073!----QUIT----2017-06-01T15:57:17.746509+02:00 Pharo.image priorSource: 109737!!ScriptLoader methodsFor: 'public' stamp: 'TheIntegrator 6/6/2017 15:11' prior: 33642674!commentForCurrentUpdate ^ '20102 SmallInteger>>#digitAt: not ready for 64-bit - Some Kernel-Tests-Numbers fail to take 64-bit into account	https://pharo.fogbugz.com/f/cases/2010220070 terminal color not reset after a error message	https://pharo.fogbugz.com/f/cases/2007019949 ensureEndsWith: does not handle start of stream case	https://pharo.fogbugz.com/f/cases/1994920101 Typos and general writing of release welcome text	https://pharo.fogbugz.com/f/cases/20101'! !!ScriptLoader methodsFor: 'pharo - scripts' stamp: 'TheIntegrator 6/6/2017 15:11'!script60499	^ 'AST-Core-TheIntegrator.494.mczAST-Tests-Core-TheIntegrator.134.mczAlien-RonieSalgado.40.mczAnnouncements-Core-TheIntegrator.84.mczAnnouncements-Help-TheIntegrator.12.mczAnnouncements-Tests-Core-TheIntegrator.39.mczAthens-Balloon-MarcusDenker.20.mczAthens-Cairo-TheIntegrator.147.mczAthens-CairoPools-NicolaiHess.14.mczAthens-Core-AliakseiSyrel.57.mczAthens-Examples-TheIntegrator.47.mczAthens-Morphic-TheIntegrator.69.mczAthens-Text-HenrikNergaard.17.mczBalloon-TheIntegrator.139.mczBalloon-Tests-TheIntegrator.2.mczBaselineOfBasicTools-TheIntegrator.8.mczBaselineOfDisplay-TheIntegrator.4.mczBaselineOfIDE-TheIntegrator.55.mczBaselineOfIceberg-cypress.1.mczBaselineOfLibGit-cypress.1.mczBaselineOfMetacello-EstebanLorenzano.89.mczBaselineOfMorphic-TheIntegrator.34.mczBaselineOfMorphicCore-TheIntegrator.7.mczBaselineOfPharoBootstrap-TheIntegrator.4.mczBaselineOfSUnit-TheIntegrator.4.mczBaselineOfUI-TheIntegrator.11.mczBaselineOfUnifiedFFI-TheIntegrator.4.mczBlueInk-Core-TheIntegrator.29.mczBlueInk-Extras-TheIntegrator.12.mczBlueInk-Tests-TheIntegrator.12.mczCodeExport-TheIntegrator.21.mczCodeImport-TheIntegrator.90.mczCodeImportCommandLineHandlers-TheIntegrator.17.mczCollections-Abstract-TheIntegrator.345.mczCollections-Arithmetic-TheIntegrator.22.mczCollections-Atomic-TheIntegrator.16.mczCollections-DoubleLinkedList-TheIntegrator.2.mczCollections-DoubleLinkedListTests-TheIntegrator.2.mczCollections-Native-TheIntegrator.19.mczCollections-Sequenceable-TheIntegrator.261.mczCollections-Stack-TheIntegrator.10.mczCollections-Streams-TheIntegrator.194.mczCollections-Strings-TheIntegrator.449.mczCollections-Support-TheIntegrator.67.mczCollections-Tests-TheIntegrator.103.mczCollections-Unordered-TheIntegrator.248.mczCollections-Weak-TheIntegrator.108.mczColors-TheIntegrator.3.mczCompiler-TheIntegrator.608.mczCompression-TheIntegrator.182.mczCompression-Tests-TheIntegrator.7.mczConfigurationCommandLineHandler-Core-TheIntegrator.29.mczConfigurationCommandLineHandler-Tests-MarcusDenker.11.mczContributingToTheCatalogHelp-TheIntegrator.9.mczDebugger-Tests-TheIntegrator.6.mczDebuggerActions-TheIntegrator.92.mczDebuggerFilters-TheIntegrator.9.mczDebuggerModel-TheIntegrator.130.mczDeprecated60-TheIntegrator.22.mczEmbeddedFreeType-TheIntegrator.30.mczEmbeddedFreeType-Tests-TheIntegrator.4.mczEmergencyEvaluator-TheIntegrator.35.mczEpicea-TheIntegrator.858.mczEpiceaBrowsers-MartinDias.180.mczEpiceaBrowsersTests-MartinDias.32.mczEpiceaTests-MartinDias.25.mczFFI-Kernel-EstebanLorenzano.45.mczFFI-Pools-TheIntegrator.5.mczFileSystem-Core-TheIntegrator.222.mczFileSystem-Disk-TheIntegrator.110.mczFileSystem-Memory-TheIntegrator.63.mczFileSystem-Tests-Core-TheIntegrator.103.mczFileSystem-Tests-Disk-StephaneDucasse.25.mczFileSystem-Tests-Memory-TheIntegrator.8.mczFileSystem-Zip-TheIntegrator.19.mczFiles-TheIntegrator.428.mczFiles-Tests-TheIntegrator.12.mczFlashback-Decompiler-EstebanLorenzano.21.mczFlashback-Decompiler-Tests-TheIntegrator.97.mczFontChooser-TheIntegrator.24.mczFontInfrastructure-TheIntegrator.18.mczFontInfrastructure-Tests-TheIntegrator.2.mczFreeType-TheIntegrator.756.mczFreeType-Tests-TheIntegrator.2.mczFuel-MartinDias.826.mczFuelCommandLineHandler-TheIntegrator.25.mczFuelPlatform-Core-MaxLeske.2.mczFuelPlatform-Pharo-06-MaxLeske.2.mczFuelPlatform-Pharo-Core-MaxLeske.1.mczFuelSystem-FileRegistry-TheIntegrator.4.mczFuelTests-MaxLeske.415.mczFuelTools-Debugger-MaxLeske.14.mczFuzzyMatcher-TheIntegrator.20.mczFuzzyMatcher-Tests-TheIntegrator.8.mczGT-BytecodeDebugger-AndreiChis.36.mczGT-Debugger-TheIntegrator.383.mczGT-EventRecorder-TheIntegrator.81.mczGT-EventRecorder-Tests-TheIntegrator.42.mczGT-Inspector-TheIntegrator.468.mczGT-InspectorExtensions-Core-AndreiChis.259.mczGT-Playground-TheIntegrator.148.mczGT-SUnitDebugger-TudorGirba.39.mczGT-Spotter-AliakseiSyrel.412.mczGT-Spotter-EventRecorder-AndreiChis.114.mczGT-SpotterExtensions-Core-TheIntegrator.224.mczGT-Tests-Debugger-AndreiChis.14.mczGT-Tests-Inspector-AndreiChis.60.mczGT-Tests-Playground-StefanReichhart.4.mczGT-Tests-Spotter-AndreiChis.31.mczGeneralRules-TheIntegrator.11.mczGlamour-Announcements-AndreiChis.11.mczGlamour-Browsers-AndreiChis.112.mczGlamour-Core-AndreiChis.338.mczGlamour-Examples-TheIntegrator.321.mczGlamour-FastTable-TheIntegrator.85.mczGlamour-Helpers-TudorGirba.40.mczGlamour-Morphic-Brick-TheIntegrator.448.mczGlamour-Morphic-Brick-Tests-TheIntegrator.16.mczGlamour-Morphic-Pager-AndreiChis.114.mczGlamour-Morphic-Renderer-AndreiChis.361.mczGlamour-Morphic-Theme-TheIntegrator.233.mczGlamour-Morphic-Widgets-TheIntegrator.209.mczGlamour-Presentations-AndreiChis.190.mczGlamour-Rubric-Presentations-AndreiChis.61.mczGlamour-SpecIntegration-TheIntegrator.6.mczGlamour-Tests-Core-TheIntegrator.115.mczGlamour-Tests-Morphic-TheIntegrator.140.mczGlamour-Tests-Resources-AndreiChis.5.mczGlamour-Tests-Rubric-AndreiChis.36.mczGofer-Core-TheIntegrator.237.mczGofer-Tests-TheIntegrator.164.mczGofer-UI-TheIntegrator.2.mczGraphics-Canvas-TheIntegrator.14.mczGraphics-Display Objects-TheIntegrator.188.mczGraphics-Files-TheIntegrator.78.mczGraphics-Fonts-TheIntegrator.109.mczGraphics-Primitives-TheIntegrator.203.mczGraphics-Shapes-TheIntegrator.4.mczGraphics-Tests-TheIntegrator.85.mczGraphics-Transformations-TheIntegrator.17.mczGrowl-TheIntegrator.47.mczHelpSystem-Core-TheIntegrator.178.mczHelpSystem-Tests-TheIntegrator.32.mczHiedra-MartinDias.146.mczHiedraTests-MartinDias.2.mczHowToContributeHelp-TheIntegrator.4.mczHudsonBuildTools20-TheIntegrator.100.mczIceberg-cypress.1.mczIceberg-Libgit-cypress.1.mczIceberg-Metacello-Integration-cypress.1.mczIceberg-Plugin-cypress.1.mczIceberg-UI-cypress.1.mczImportingResource-Help-TheIntegrator.8.mczIssueTracking-TheIntegrator.6.mczIssueTracking-Tests-TheIntegrator.3.mczJobs-TheIntegrator.30.mczJobsTests-TheIntegrator.2.mczKernel-TheIntegrator.2513.mczKernel-Rules-TheIntegrator.13.mczKernel-Tests-TheIntegrator.175.mczKernel-Tests-Rules-TheIntegrator.5.mczKeymapping-Core-TheIntegrator.204.mczKeymapping-KeyCombinations-TheIntegrator.66.mczKeymapping-Pragmas-TheIntegrator.62.mczKeymapping-Settings-StephaneDucasse.83.mczKeymapping-Tests-TheIntegrator.111.mczKeymapping-Tools-Spec-TheIntegrator.32.mczKomitter-TheIntegrator.192.mczLibGit-Core-cypress.1.mczManifest-Core-TheIntegrator.252.mczManifest-Resources-Tests-MarcusDenker.14.mczManifest-Tests-TheIntegrator.55.mczMenuRegistration-TheIntegrator.93.mczMessageBrowserRefactoringAddition-StephaneDucasse.2.mczMetacello-Base-EstebanLorenzano.126.mczMetacello-Bitbucket-EstebanLorenzano.8.mczMetacello-Core-TheIntegrator.838.mczMetacello-FileTree-EstebanLorenzano.38.mczMetacello-GitBasedRepository-TheIntegrator.24.mczMetacello-GitHub-TheIntegrator.56.mczMetacello-MC-TheIntegrator.741.mczMetacello-PharoCommonPlatform-TheIntegrator.26.mczMetacello-Platform-TheIntegrator.5.mczMetacello-ProfStef-TheIntegrator.22.mczMetacello-Reference-EstebanLorenzano.38.mczMetacello-TestsCommonMC-TheIntegrator.9.mczMetacello-TestsCore-EstebanLorenzano.41.mczMetacello-TestsMC-EstebanLorenzano.405.mczMetacello-TestsMCCore-EstebanLorenzano.8.mczMetacello-TestsMCResources-EstebanLorenzano.33.mczMetacello-TestsPlatform-TheIntegrator.25.mczMetacello-TestsReference-EstebanLorenzano.22.mczMetacello-ToolBox-TheIntegrator.154.mczMetacello-Tutorial-EstebanLorenzano.28.mczMonticello-TheIntegrator.1178.mczMonticello-OldDataStreamCompatibility-TheIntegrator.11.mczMonticello-Tests-TheIntegrator.43.mczMonticelloConfigurations-TheIntegrator.75.mczMonticelloFileServices-TheIntegrator.9.mczMonticelloFileTree-Core-TheIntegrator.152.mczMonticelloFileTree-FileSystem-Utilities-TheIntegrator.34.mczMonticelloGUI-TheIntegrator.437.mczMonticelloMocks-TheIntegrator.9.mczMonticelloRemoteRepositories-TheIntegrator.19.mczMoose-Algos-Graph-VincentBlondeau.33.mczMorphic-Base-TheIntegrator.618.mczMorphic-Core-TheIntegrator.313.mczMorphic-Examples-TheIntegrator.64.mczMorphic-Tests-TheIntegrator.13.mczMorphic-Widgets-Basic-TheIntegrator.110.mczMorphic-Widgets-ColorPicker-TheIntegrator.23.mczMorphic-Widgets-Extra-TheIntegrator.30.mczMorphic-Widgets-FastTable-TheIntegrator.222.mczMorphic-Widgets-List-TheIntegrator.23.mczMorphic-Widgets-Pluggable-TheIntegrator.79.mczMorphic-Widgets-PolyTabs-TheIntegrator.8.mczMorphic-Widgets-Scrolling-TheIntegrator.37.mczMorphic-Widgets-Tabs-TheIntegrator.54.mczMorphic-Widgets-Taskbar-TheIntegrator.27.mczMorphic-Widgets-TickList-TheIntegrator.2.mczMorphic-Widgets-Tree-TheIntegrator.66.mczMorphic-Widgets-Windows-TheIntegrator.117.mczMultilingual-Encodings-TheIntegrator.63.mczMultilingual-Languages-TheIntegrator.59.mczMultilingual-OtherLanguages-TheIntegrator.22.mczMultilingual-Tests-TheIntegrator.46.mczMultilingual-TextConversion-TheIntegrator.83.mczMultilingual-TextConverterOtherLanguages-TheIntegrator.4.mczNECompletion-TheIntegrator.257.mczNECompletion-Tests-TheIntegrator.10.mczNautilus-TheIntegrator.1366.mczNautilus-GroupManager-TheIntegrator.24.mczNautilus-GroupManagerUI-TheIntegrator.44.mczNautilus-Tests-TheIntegrator.52.mczNautilusCommon-TheIntegrator.327.mczNautilusGroupAutoBuilder-TheIntegrator.20.mczNautilusRefactoring-TheIntegrator.315.mczNetwork-Kernel-TheIntegrator.138.mczNetwork-MIME-TheIntegrator.75.mczNetwork-Mail-TheIntegrator.52.mczNetwork-Protocols-TheIntegrator.105.mczNetwork-Tests-TheIntegrator.28.mczNetwork-UUID-TheIntegrator.64.mczNetwork-Url-TheIntegrator.103.mczNewValueHolder-TheIntegrator.35.mczNodeNavigation-TheIntegrator.57.mczNodeNavigation-Tests-TheIntegrator.3.mczNonInteractiveTranscript-TheIntegrator.25.mczOSWindow-Core-TheIntegrator.125.mczOSWindow-SDL2-TheIntegrator.110.mczOSWindow-SDL2-Examples-TheIntegrator.16.mczOSWindow-Tests-RonieSalgado.3.mczOSWindow-VM-MerwanOuddane.4.mczOmbu-MartinDias.277.mczOmbuTests-MartinDias.33.mczOpalCompiler-Core-TheIntegrator.890.mczOpalCompiler-Tests-TheIntegrator.380.mczOpalTools-TheIntegrator.24.mczPharo-Help-TheIntegrator.52.mczPharoBootstrap-Initialization-TheIntegrator.7.mczPharoDocComment-StephaneDucasse.6.mczPolymorph-Widgets-TheIntegrator.1435.mczPolymorph-Widgets-Rules-TheIntegrator.11.mczPragmaCollector-TheIntegrator.18.mczProfStef-Core-TheIntegrator.85.mczProfStef-Help-TheIntegrator.18.mczProfStef-Tests-TheIntegrator.27.mczQualityAssistant-YuriyTymchuk.117.mczQualityAssistant-Test-YuriyTymchuk.2.mczQualityAssistantRecording-Uko.28.mczRPackage-Core-TheIntegrator.470.mczRPackage-Tests-TheIntegrator.199.mczRandom-Core-TheIntegrator.10.mczRandom-Tests-TheIntegrator.6.mczRecentSubmissions-TheIntegrator.246.mczRefactoring-Changes-TheIntegrator.70.mczRefactoring-Core-TheIntegrator.345.mczRefactoring-Critics-TheIntegrator.300.mczRefactoring-Environment-TheIntegrator.88.mczRefactoring-Help-TheIntegrator.7.mczRefactoring-Tests-Changes-TheIntegrator.40.mczRefactoring-Tests-Core-TheIntegrator.147.mczRefactoring-Tests-Critics-TheIntegrator.54.mczRefactoring-Tests-Environment-TheIntegrator.30.mczReflectionMirrors-Primitives-TheIntegrator.9.mczReflectionMirrors-Primitives-Tests-TheIntegrator.6.mczReflectivity-TheIntegrator.339.mczReflectivity-Examples-TheIntegrator.51.mczReflectivity-Tests-TheIntegrator.228.mczReflectivity-Tools-TheIntegrator.79.mczReflectivity-Tools-Tests-TheIntegrator.32.mczRegex-Core-TheIntegrator.40.mczRegex-Help-MarcusDenker.5.mczRegex-Tests-Core-TheIntegrator.11.mczReleaseTests-TheIntegrator.33.mczRenraku-YuriyTymchuk.150.mczRenraku-Help-YuriyTymchuk.3.mczRenraku-Test-YuriyTymchuk.23.mczRing-Core-Containers-TheIntegrator.45.mczRing-Core-Kernel-TheIntegrator.248.mczRing-Monticello-TheIntegrator.43.mczRing-Tests-Containers-MarcusDenker.18.mczRing-Tests-Kernel-TheIntegrator.95.mczRing-Tests-Monticello-MarcusDenker.19.mczRingChunkImporter-TheIntegrator.8.mczRubric-TheIntegrator.448.mczRubric-Rules-TheIntegrator.6.mczRubric-Styling-TheIntegrator.11.mczRubric-Tests-TheIntegrator.10.mczSTON-Core-TheIntegrator.86.mczSTON-Tests-TheIntegrator.77.mczSTON-Text support-TheIntegrator.2.mczSUnit-Core-TheIntegrator.221.mczSUnit-Help-MarcusDenker.9.mczSUnit-Rules-TheIntegrator.5.mczSUnit-Tests-TheIntegrator.68.mczSUnit-UI-TheIntegrator.153.mczSUnit-UITesting-TheIntegrator.36.mczScriptLoader-Tests-TheIntegrator.4.mczScriptingExtensions-TheIntegrator.6.mczScriptingExtensions-Tests-TheIntegrator.3.mczSettings-Graphics-TheIntegrator.34.mczSettings-Polymorph-TheIntegrator.98.mczSettings-System-TheIntegrator.43.mczShoreLine-Report-Core-TommasoDalSasso.11.mczShoreLine-Report-Settings-TheIntegrator.7.mczShoreLine-Report-UI-TheIntegrator.19.mczShout-TheIntegrator.313.mczShout-Tests-TheIntegrator.2.mczSlot-TheIntegrator.790.mczSlot-Tests-TheIntegrator.105.mczSmartSuggestions-TheIntegrator.269.mczSmartSuggestions-Tests-TheIntegrator.39.mczSortFunctions-Core-TheIntegrator.7.mczSortFunctions-Tests-TheIntegrator.6.mczSpec-Core-TheIntegrator.541.mczSpec-Debugger-TheIntegrator.284.mczSpec-Examples-TheIntegrator.133.mczSpec-Help-TheIntegrator.13.mczSpec-Inspector-TheIntegrator.289.mczSpec-Layout-TheIntegrator.75.mczSpec-MorphicAdapters-TheIntegrator.292.mczSpec-PolyWidgets-TheIntegrator.93.mczSpec-Tests-TheIntegrator.107.mczSpec-Tools-TheIntegrator.386.mczStartupPreferences-TheIntegrator.153.mczSystem-Announcements-TheIntegrator.138.mczSystem-BasicCommandLineHandler-TheIntegrator.21.mczSystem-Caching-TheIntegrator.29.mczSystem-CachingTests-TheIntegrator.19.mczSystem-Changes-TheIntegrator.309.mczSystem-Changes-FileServices-TheIntegrator.4.mczSystem-Clipboard-TheIntegrator.42.mczSystem-CommandLine-TheIntegrator.183.mczSystem-CommandLine-TextSupport-TheIntegrator.6.mczSystem-CommandLineHandler-TheIntegrator.26.mczSystem-FileRegistry-TheIntegrator.53.mczSystem-Finalization-TheIntegrator.44.mczSystem-Hashing-TheIntegrator.52.mczSystem-History-EstebanLorenzano.7.mczSystem-History-Tests-EstebanLorenzano.3.mczSystem-Identification-TheIntegrator.9.mczSystem-Identification-Tests-TheIntegrator.2.mczSystem-Installers-TheIntegrator.44.mczSystem-Localization-TheIntegrator.108.mczSystem-Localization-Tests-TheIntegrator.8.mczSystem-Model-TheIntegrator.13.mczSystem-OSEnvironments-TheIntegrator.40.mczSystem-Object Events-TheIntegrator.28.mczSystem-Platforms-TheIntegrator.85.mczSystem-Serial Port-StephaneDucasse.23.mczSystem-SessionManager-TheIntegrator.43.mczSystem-SessionManager-Tests-ChristopheDemarey.9.mczSystem-Settings-TheIntegrator.374.mczSystem-Settings-Rules-TheIntegrator.2.mczSystem-Settings-Tests-TheIntegrator.15.mczSystem-Sound-TheIntegrator.20.mczSystem-Sources-TheIntegrator.73.mczSystem-Support-TheIntegrator.1276.mczSystem-Support-Rules-TheIntegrator.2.mczSystem-SupportTests-TheIntegrator.7.mczSystem-VMEvents-TheIntegrator.19.mczTests-TheIntegrator.794.mczText-Core-TheIntegrator.66.mczText-Diff-TheIntegrator.6.mczText-Edition-TheIntegrator.128.mczText-Edition-Tests-EstebanLorenzano.3.mczText-Scanning-TheIntegrator.33.mczText-Tests-TheIntegrator.10.mczTool-Base-TheIntegrator.195.mczTool-Catalog-TheIntegrator.61.mczTool-CriticBrowser-TheIntegrator.67.mczTool-DependencyAnalyser-ChristopheDemarey.31.mczTool-DependencyAnalyser-Test-TheIntegrator.18.mczTool-DependencyAnalyser-Test-Data-ChristopheDemarey.2.mczTool-DependencyAnalyser-UI-ChristopheDemarey.54.mczTool-Diff-TheIntegrator.52.mczTool-ExternalBrowser-TheIntegrator.59.mczTool-FileList-TheIntegrator.99.mczTool-FileList-Tests-EstebanLorenzano.3.mczTool-Finder-TheIntegrator.78.mczTool-ImageCleaner-TheIntegrator.19.mczTool-ProcessBrowser-TheIntegrator.27.mczTool-Profilers-TheIntegrator.37.mczTool-SystemReporter-TheIntegrator.19.mczTool-Transcript-TheIntegrator.25.mczTool-Workspace-TheIntegrator.48.mczTools-TheIntegrator.1532.mczTools-Test-TheIntegrator.26.mczTraits-TheIntegrator.988.mczTranscript-TheIntegrator.56.mczTravisIntegrationHelp-TheIntegrator.8.mczTxText-Athens-EstebanLorenzano.58.mczTxText-AthensTests-HenrikNergaard.13.mczTxText-Model-MarcusDenker.67.mczTxText-Styler-HenrikNergaard.18.mczTxTextTests-Model-SeanDeNigris.29.mczUIManager-TheIntegrator.195.mczUnicode-Initialization-TheIntegrator.17.mczUnifiedFFI-TheIntegrator.109.mczUnifiedFFI-Legacy-TheIntegrator.4.mczUnifiedFFI-Tests-TheIntegrator.42.mczUpdateStreamer-Core-TheIntegrator.34.mczUpdateStreamer-Tests-TheIntegrator.9.mczVersionner-Commit-TheIntegrator.34.mczVersionner-Core-Announcements-ChristopheDemarey.6.mczVersionner-Core-Commands-MarcusDenker.65.mczVersionner-Core-DependenciesModel-MarcusDenker.106.mczVersionner-Core-Model-PabloTesone.57.mczVersionner-Nautilus-PavelKrivanek.1.mczVersionner-Spec-Browser-PabloTesone.212.mczVersionner-Tests-Core-Commands-MarcusDenker.21.mczVersionner-Tests-Core-DependenciesModel-ChristopheDemarey.46.mczVersionner-Tests-Core-Model-TheIntegrator.36.mczVersionner-Tests-Resources-MarcusDenker.18.mczWorldMenuHelp-TheIntegrator.2.mczWriteBarrierTests-TheIntegrator.20.mczZinc-Character-Encoding-Core-SvenVanCaekenberghe.46.mczZinc-Character-Encoding-Tests-TheIntegrator.31.mczZinc-FileSystem-TheIntegrator.15.mczZinc-HTTP-TheIntegrator.459.mczZinc-Resource-Meta-Core-SvenVanCaekenberghe.61.mczZinc-Resource-Meta-FileSystem-SvenVanCaekenberghe.8.mczZinc-Resource-Meta-Tests-SvenVanCaekenberghe.37.mczZinc-Tests-SvenVanCaekenberghe.238.mczZinc-Zodiac-TheIntegrator.38.mczZodiac-Core-TheIntegrator.46.mczZodiac-Extra-StephaneDucasse.10.mczZodiac-Tests-TheIntegrator.17.mcz'findTokens: String lf , String cr! !!ScriptLoader methodsFor: 'pharo - updates' stamp: 'TheIntegrator 6/6/2017 15:11'!update60499	"self new update60499"	self withUpdateLog: '20102 SmallInteger>>#digitAt: not ready for 64-bit - Some Kernel-Tests-Numbers fail to take 64-bit into account	https://pharo.fogbugz.com/f/cases/2010220070 terminal color not reset after a error message	https://pharo.fogbugz.com/f/cases/2007019949 ensureEndsWith: does not handle start of stream case	https://pharo.fogbugz.com/f/cases/1994920101 Typos and general writing of release welcome text	https://pharo.fogbugz.com/f/cases/20101'.	self loadTogether: self script60499 merge: false.	self flushCaches.! !ScriptLoader removeSelector: #update60498!ScriptLoader removeSelector: #script60498!"ScriptLoader60"!!WelcomeHelp class methodsFor: 'pages' stamp: 'PhilippeBack 6/1/2017 18:10' prior: 84508630!changeLog	^ HelpTopic 		title: 'ChangeLog'		contents: (self heading: 'Highlights (aka New Stuff) in Pharo 6.0'),'- The PharoVM and image are also provided in a 64-bit version in Linux and macOS/OSX and bring even better performance and stability- A new code changes management system named Epicea for reviewing and recovering of your code easily- Integrated support for Git through an easy-to-use tool for repositories and commits management named Iceberg (as a preview in Pharo 6, it will be the default in Pharo 7)- The unified foreign function interface (UnifiedFFI) for interfacing with the outside world is significantly improved- The PharoVM is now part of OpenSmalltalk initiative- Introduction of object immutability, alternative bytecode sets and block closures independent of outer context- Pharo can now be bootstrapped from source code managed by Git- Pharo modularity is improved- Pharo is faster- The Dark Theme was improved and set as default color theme of Pharo', (self heading: 'All Issues'), 'Over 1400 fixes and enhancements were integrated in this release.As the complete list of fixed issues is too large to be placed here, you can review it on the FogBugz issue tracker (', (self url: 'https://pharo.fogbugz.com'), ') (requires account).', (self subheading: 'Tools'),'- Epicea provides a code changes manager- Iceberg provides a Git repositories manager- GTInspector, GTDebugger and other tools are now based on FastTable (long lists of items are rendered much faster)- GToolkit and GTools have been updated- Quality Assistant has been improved- Interrupt key (Cmd+ /, Ctrl+.) has been made more reliable- Playground variables are now visible from debugger- Debugger temp names mapping is fixed- There is a "Close all debuggers"  in the taskbar context menu- GTDebugger has a "Run to here" feature- Results and critiques can be filtered in the MessageBrowser- Dependency Analyzer has been improved- Nautilus enhancements        - Splitting of large variable entries in the Variables menu        - Deprecated methods are shown with strikethrough emphasis        - Abstract classes are shown in italics with a slight color adjustment', (self subheading: 'VM related'), '- 64-bits support- Improvement of host platforms management (32-bit/64-bit)- Improved UnifiedFFI- The PharoVM is now part of OpenSmalltalk initiative- Introduction of object immutability- Introduction of FullBlockClosure which will help in future evolutions of Pharo- Ephemerons support, introduction of the EphemeronRegistry- Support of alternative bytecode sets and introduction of Sista Encoder, the encoder for the SistaV1 bytecode set. This will be the bedrock on which Pharo will improve',(self subheading: 'Reflectivity'), '- General improvements- haltOnce is active by default per method. It does not require global turning on (enable haltOnce) and it is managed from the source code area in Nautilus- Execution counter for message nodes in the source code area in Nautilus- API for Metalinks on AST nodes- Mirror primitives (Those are reflection primitives which access object state without messaging them, see MirrorPrimitives class)- Inlined method const can be implemented by Metalinks', (self subheading: 'Other'), '- Dark Theme improvements- Improvement of theme change while windows are open- Support of two double quotes inside comments- Standalone Morphic worlds in separate windows- Fix of several memory leaks- Improvement of working directory structure (introduction of a ''pharo-local'' directory to include Pharo directories such as ''package-cache'')- Better autocategorization of methods- Introduction of a FuzzyMatcher for approximate string matching- Glamour integration in Spec- Renaming (Cmd+R / Ctrl+R) in Nautilus supports more AST nodes- anObject asMethodConst to cache expressions dynamically- GlobalIdentifier for computer identification- NeoUUIDGenerator replaces the old UUIDGenerator- STON was improved and is now used by Monticello FileTree- Storage of suspended announcements- Improved newAnonymousSubclass- Inheritable process specific variables- Fuel improvements- Enablement of <example> methods so that they can be executed easily- Support for <sampleInstance>- New class and method API for tags as replacement for categories and protocols- TabMorph improvements- Unification of Dictionary APIs (including an OrderedDictionary)- Package manifests improvements- Improvement of RadioButton groups', (self subheading: 'Cleanups'), '- Object>>#name is now deprecated and will be removed in Pharo 7- Better system modularization- Ability for the system to be fully bootstrapped from source code- Turn off of catalog search in Spotter by default (This improves the stability of Pharo when used with poor Internet connections)- Removal of Chroma-CubeHelix and TxWorkspace- Rename of Pragma>>#selector to Pragma>>#methodSelector- Improvement of icons management (#iconNamed: introduced in order to replace DNU-based icons)- Limit use of #asClass in order to rely on an environment- It is now possible to give a rewrite rule when deprecating a method to automatically rewrite code with deprecation (#deprecated:transformWith:)- Deprecation of the following:        Object>>name        ShortRunArray class        Object>>confirm:orCancel:        Object>>ifNil:ifNotNilDo:        Object>>ifNotNilDo:        Object>>ifNotNilDo:ifNil:        Collection>>ifEmpty:ifNotEmptyDo:        Collection>>ifNotEmptyDo:        Collection>>ifNotEmptyDo:ifEmpty:        SequenceableCollection>>copyLast:        Integer>>asBytesDescription        Pragma>>method:', (self subheading: 'Unit testing/Documentation'), '- RecursionStopper provides an easy way to check if we are in a recursion and execute code just once in a recursion- New process specific variable ''CurrentExecutionEnvironment'' with value DefaultExecutionEnvironment by default and TestExecutionEnvironment during a test run- SUnit is improved by introducing a time limit for tests, preventing "forked debuggers"- New assert extension to compare floats with #closeTo:- More class comments and documentation', (self subheading: 'Network'), '- Support Server Name Indication (SNI) in Zodiac/SSLPlugin- Zinc/Zodiac updateYou can see the Pharo 6.0 changelog at: ', (self url: 'https://github.com/pharo-project/pharo-changelogs/blob/master/Pharo60ChangeLogs.md')! !!WelcomeHelp class methodsFor: 'pages' stamp: 'PhilippeBack 6/1/2017 17:54' prior: 84516114!documentation	^ HelpTopic 		title: 'More Documentation'		contents: (self heading: 'More Documentation'), 			'The most important documentation is the one you can get by exploring the system, reading class comments and looking for examples. You can find "in image" help by clicking on the following expression:', (self doItFrom: 'HelpBrowser open.'), 'This browser is also accessible from the World>Help>Help Browser menu (just click the desktop, select Help, and then Help Browser).A compendium of Pharo documentation can be found at: ', (self url: 'http://pharo.org/documentation'), 'There you can find:- Pharo books: ', (self url: 'http://books.pharo.org'), '- Screencasts: ', (self url: 'https://www.youtube.com/channel/UCp3mNigANqkesFzdm058bvw'), '- Presentations: ', (self url: 'http://www.slideshare.net/pharoproject/')! !!WelcomeHelp class methodsFor: 'pages' stamp: 'PhilippeBack 6/1/2017 17:54' prior: 84519806!exploreEnvironment	^ HelpTopic 		title: 'Explore the Pharo Environment'		contents: (self heading: 'Explore the Pharo Environment'), 				'The best way to learn Pharo is to explore it by yourself. This is live objects all the way down: they can be inspected, browsed, changed... everything in the environment you have in your hands.But sometimes it can be hard to get started with the tools and capabilities the environment provides.The most complete and updated guide for the Pharo environment can be found in the "Updated Pharo by Example" free book. It is still a work in progress, but most of it is already done. You can find the book here: ', (self url: 'https://github.com/SquareBracketAssociates/UpdatedPharoByExample'), 'One chapter of particular interest is the one that provides a quick tour of the environment: ', (self url: 'https://ci.inria.fr/pharo-contribution/job/UpdatedPharoByExample/lastSuccessfulBuild/artifact/book-result/PharoTour/PharoTour.pdf')! !!WelcomeHelp class methodsFor: 'pages' stamp: 'PhilippeBack 6/1/2017 17:55' prior: 84515442!gettingHelp	^ HelpTopic 		title: 'Getting Help'		contents: (self heading: 'Getting Help'),		'Pharo has a vibrant community that shares knowledge in different ways: - The "Pharo Users" mailing list: 	', (self url: 'http://lists.pharo.org/mailman/listinfo/pharo-users_lists.pharo.org'), '- The "Pharo Discord channel": 	', 	(self url: 'http://discord.gg/Sj2rhxn'), '- The "Pharo IRC Channel": 	', (self url: 'irc.freenode.net, #pharo channel '), 'You can find more information, lists to browse/suscribe and places to share code at: ', (self url: 'http://pharo.org/community')! !!WelcomeHelp class methodsFor: 'pages' stamp: 'PhilippeBack 6/1/2017 18:11' prior: 84518270!learn	^ HelpTopic 		title: 'Learn Pharo'		contents: (self heading: 'Learn Pharo'), 		'You can learn Pharo by clicking on the following expression: 	', (self doItFrom: 'ProfStef go.'), (self subheading: 'MOOC'), 'Pharo has an excellent MOOC (Massive Open Online Course). You can find more information here: ', (self url: 'http://mooc.pharo.org'), (self subheading: 'Books'), 'There are several free Pharo books that can be download here: ', (self url: 'http://books.pharo.org'), 'A very interesting starting point would be looking into the "Updated Pharo by Example" free book. It is still a work in progress, but most of it is already done. You can find the book here: ', (self url: 'https://github.com/SquareBracketAssociates/UpdatedPharoByExample'), ''! !!WelcomeHelp class methodsFor: 'showing' stamp: 'PhilippeBack 6/1/2017 17:23' prior: 84517046!open	<script>	^ (HelpBrowser openOn: self) next! !!WelcomeHelp class methodsFor: 'showing' stamp: 'PhilippeBack 6/1/2017 17:24' prior: 84515001!openForRelease	<script>	| browser window findBlock |		findBlock := [ :each | (each isKindOf: SystemWindow) and: [ each label = self bookName ] ]. 	World submorphs 		detect: findBlock 		ifFound: [ :oldWindow | oldWindow delete ].	browser := self open.	window := browser dependents detect: findBlock.	window extent: 700@400.	window center: Display extent / 2! !!WelcomeHelp class methodsFor: 'pages' stamp: 'PhilippeBack 6/1/2017 18:13' prior: 84517171!useExternalPackages	^ HelpTopic 		title: 'Using Eternal Packages'		contents: (self heading: 'Using External Packages'), 'Pharo already comes pre-loaded with a rich set of packages that you can use to explore the system and develop your own applications. However there is also a huge library of user contributed projects that you can also load using the "Catalog Browser". To open it click on the following expression:		', (self doItFrom: 'CatalogBrowser open.'), 'This browser is also accessible from the World>Tools>Catalog Browser menu (just click the desktop, select Tools, and then Catalog Browser).Catalog projects can be browsed online: ', (self url: 'http://catalog.pharo.org'), 'You can also a rough list (not very friendly) of many packages available stored in smalltalkhub repository:', (self url: 'http://smalltalkhub.com/list'), '(this list is not a compendium of packages for Pharo but is a good place to start looking for something in particular and which happens to not be present in the catalog).The catalog can be enabled in Spotter by enabling the "Display catalog projects in Spotter" system preference.'! !!WelcomeHelp class methodsFor: 'pages' stamp: 'PhilippeBack 6/1/2017 17:58' prior: 84519159!welcome	^ HelpTopic 		title: 'Welcome to Pharo 6.0'		contents: (self heading: 'Pharo 6.0'), 		'Welcome to Pharo, an immersive live programming environment.Pharo is a pure object-oriented programming language and a powerful environment, focused on simplicity and immediate feedback (think IDE and OS rolled into one).For more information, please visit here: ', (self url: 'http://pharo.org'),(self subheading: 'Color themes'),'White theme: ', (self doItFrom: 'Pharo3Theme beCurrent. '), ' Dark theme: ', (self doItFrom: 'Pharo3DarkTheme beCurrent. ').! !!WriteStreamTest methodsFor: 'tests' stamp: 'KKSubbu 6/2/2017 21:03' prior: 84725775!testEnsureEndsWith	"self debug: #testEnsureEndsWith"	| stream |	stream := self newStream.	stream nextPutAll: 'this is a test'.	stream ensureEndsWith: Character cr.	stream nextPutAll: 'for WriteStreamTest'.	self assert: stream contents equals: (('this is a test' copyWith: Character cr), 'for WriteStreamTest').		"Manually put a new line and verify there are no 2 new lines"	stream := self newStream.	stream nextPutAll: ('this is a test' copyWith: Character cr).	stream ensureEndsWith: Character cr.	stream nextPutAll: 'for WriteStreamTest'.	self assert: stream contents equals: (('this is a test' copyWith: Character cr), 'for WriteStreamTest').		"Test with a empty stream"	stream := self newStream.	stream ensureEndsWith: Character cr.	self assert: stream contents equals: ''.! !!IntegerTest methodsFor: 'tests - bitLogic' stamp: 'SvenVanCaekenberghe 6/1/2017 20:45' prior: 29635981!testBitString	"self debug: #testBitString"		Smalltalk vm wordSize = 4		ifTrue: [			self assert: 2 bitString equals: '0000000000000000000000000000010'.			self assert: -1 bitString equals: '1111111111111111111111111111111'.			self assert: -2 bitString equals: '1111111111111111111111111111110'.			self assert: 2 bitStringLength equals: 31 ]. 	Smalltalk vm wordSize = 8		ifTrue: [			self assert: 2 bitString equals: '0000000000000000000000000000000000000000000000000000000000010'.			self assert: -1 bitString equals: '1111111111111111111111111111111111111111111111111111111111111'.			self assert: -2 bitString equals: '1111111111111111111111111111111111111111111111111111111111110'.			self assert: 2 bitStringLength equals: 61 ]. 	"32 minus 1 for immediate encoding = 31 = 30 for number + 1 for sign"	"64 minus 3 for immediate encoding = 61 = 60 for number + 1 for sign"	self assert: 2 bitStringLength equals: (SmallInteger maxVal highBit + 1).! !!IntegerTest methodsFor: 'tests - instance creation' stamp: 'SvenVanCaekenberghe 6/1/2017 21:07' prior: 29639619!testCreationFromBytes1	"self run: #testCreationFromBytes1"	"it is illegal for a LargeInteger to be less than SmallInteger maxVal." 	"here we test that Integer>>byte!!byte2:byte3:byte4: resconstructs SmallInteger maxVal as an instance of SmallInteger. "  	| maxSmallInt hexString byte1 byte2 byte3 byte4 builtInteger |	Smalltalk vm wordSize = 4 ifFalse: [ ^ self skip ].	maxSmallInt := SmallInteger maxVal.	hexString := maxSmallInt printStringHex.	self assert: hexString size = 8.	byte4 := Number readFrom: (hexString copyFrom: 1 to: 2) base: 16.	byte3 := Number readFrom: (hexString copyFrom: 3 to: 4) base: 16.	byte2 := Number readFrom: (hexString copyFrom: 5 to: 6) base: 16.	byte1 := Number readFrom: (hexString copyFrom: 7 to: 8) base: 16.	builtInteger := Integer byte1: byte1 byte2: byte2 byte3: byte3 byte4: byte4.	self assert: builtInteger = maxSmallInt.	self assert: builtInteger class = SmallInteger! !!IntegerTest methodsFor: 'tests - instance creation' stamp: 'SvenVanCaekenberghe 6/1/2017 21:07' prior: 29640579!testCreationFromBytes2 	"self run: #testCreationFromBytes2"	"it is illegal for a LargeInteger to be less than SmallInteger maxVal." 	"here we test that Integer>>byte!!byte2:byte3:byte4: resconstructs (SmallInteger maxVal + 1) as an instance of LargePositiveInteger. "	| maxSmallInt hexString byte1 byte2 byte3 byte4 builtInteger |	Smalltalk vm wordSize = 4 ifFalse: [ ^ self skip ].	maxSmallInt := SmallInteger maxVal.	hexString := (maxSmallInt + 1) printStringHex.	self assert: hexString size = 8.	byte4 := Number readFrom: (hexString copyFrom: 1 to: 2) base: 16.	byte3 := Number readFrom: (hexString copyFrom: 3 to: 4) base: 16.	byte2 := Number readFrom: (hexString copyFrom: 5 to: 6) base: 16.	byte1 := Number readFrom: (hexString copyFrom: 7 to: 8) base: 16.	builtInteger := Integer byte1: byte1 byte2: byte2 byte3: byte3 byte4: byte4.	self assert: builtInteger = (maxSmallInt + 1).	self deny: builtInteger class = SmallInteger! !!IntegerTest methodsFor: 'tests - instance creation' stamp: 'SvenVanCaekenberghe 6/1/2017 21:07' prior: 29625524!testCreationFromBytes3	"self run: #testCreationFromBytes3"	"it is illegal for a LargeInteger to be less than SmallInteger maxVal." 	"here we test that Integer>>byte!!byte2:byte3:byte4: resconstructs (SmallInteger maxVal - 1) as an instance of SmallInteger. "	| maxSmallInt hexString byte1 byte2 byte3 byte4 builtInteger |	Smalltalk vm wordSize = 4 ifFalse: [ ^ self skip ].	maxSmallInt := SmallInteger maxVal.	hexString := (maxSmallInt - 1) printStringHex.	self assert: hexString size = 8.	byte4 := Number readFrom: (hexString copyFrom: 1 to: 2) base: 16.	byte3 := Number readFrom: (hexString copyFrom: 3 to: 4) base: 16.	byte2 := Number readFrom: (hexString copyFrom: 5 to: 6) base: 16.	byte1 := Number readFrom: (hexString copyFrom: 7 to: 8) base: 16.	builtInteger := Integer byte1: byte1 byte2: byte2 byte3: byte3 byte4: byte4.	self assert: builtInteger = (maxSmallInt - 1).	self assert: builtInteger class = SmallInteger! !!VTermOutputDriver methodsFor: 'coloring' stamp: 'kks 5/19/2017 19:58' prior: 84236066!errorColor 	self red! !!STCommandLineHandler class methodsFor: 'printing' stamp: 'kks 5/19/2017 20:01' prior: 59101401!printCompilerWarning: aSyntaxErrorNotification	| stderr position contents errorLine errorMessage maxLineNumberSize lineNumber |		"format the error"	position := aSyntaxErrorNotification location.	contents := aSyntaxErrorNotification errorCode.	errorLine := contents lineNumberCorrespondingToIndex: position.	stderr := VTermOutputDriver stderr.			"first gather the error title to be able to underline it properly"	errorMessage := String streamContents: [ :s|		s nextPutAll: 'Syntax Error on line '; 			print: errorLine; nextPutAll: ': '; 			print: aSyntaxErrorNotification errorMessage].		 stderr red;		nextPutAll: errorMessage; lf;		nextPutAll: ('' padLeftTo: errorMessage size with: $=); lf;		clear.		"print each source line and mark the found syntax error"	maxLineNumberSize := contents lines size asString size.	lineNumber := 0.	contents lineIndicesDo: [:start :endWithoutDelimiters :end |		lineNumber := lineNumber + 1.		lineNumber == errorLine ifTrue: [ stderr errorColor ].		"0 pad the line numbers to the same size"		stderr 			nextPutAll: (lineNumber asString padLeftTo: maxLineNumberSize with: $0);			nextPutAll: ': ';			nextPutAll: (contents copyFrom: start to: endWithoutDelimiters);			lf.			"print the marker under the error line"		(lineNumber == errorLine)			ifTrue: [					stderr nextPutAll:( '_^_' padLeftTo: position - start + maxLineNumberSize + 4);							 lf;							 clear]	]! !!PharoWelcomePage class methodsFor: 'opening' stamp: 'PhilippeBack 6/1/2017 17:22' prior: 54501828!open	<script>	| group welcome help zen about window |	welcome := WelcomeHelp open.	help := HelpBrowser open.	zen := TextModel new			text: ProfStef pharoZenValuesContents;			title: 'Pharo Zen';			aboutText: ProfStef aboutPharoZen;			beForText;			openWithSpec.				about := TextModel new			text: Smalltalk systemInformationString withCRs;			title: 'About Pharo';			beForText;			openWithSpec.	group := GroupWindowMorph new.	group addWindow: welcome window.	group addWindow: help window.	group addWindow: SettingBrowser open.	group addWindow: KeymapBrowser new openWithSpec window.	group addWindow: zen window.	group addWindow: about window.	window := (group openInWindowLabeled: self title translated)		extent: welcome window extent;		yourself.			group tabGroup selectedPageIndex: 1.	^ window! !!PharoWelcomePage class methodsFor: 'opening' stamp: 'PhilippeBack 6/1/2017 17:22' prior: 54502733!openForRelease	<script>	| window |		World submorphs 		detect: [ :each | (each isKindOf: SystemWindow) and: [ each label = self title ] ] 		ifFound: [ :oldWindow | oldWindow delete ].	window := self open.	window extent: 750@400.	window center: Display extent / 2! !!SmallIntegerTest methodsFor: 'tests - Class Methods' stamp: 'SvenVanCaekenberghe 6/1/2017 20:03' prior: 60216021!testMaxVal	Smalltalk vm wordSize = 4		ifTrue: [ self assert: SmallInteger maxVal = 16r3FFFFFFF ].	Smalltalk vm wordSize = 8		ifTrue: [ self assert: SmallInteger maxVal = 16rFFFFFFFFFFFFFFF ]! !!SmallIntegerTest methodsFor: 'tests - Class Methods' stamp: 'SvenVanCaekenberghe 6/1/2017 20:04' prior: 60215871!testMinVal	Smalltalk vm wordSize = 4		ifTrue: [ self assert: SmallInteger minVal = -16r40000000 ].	Smalltalk vm wordSize = 8		ifTrue: [ self assert: SmallInteger minVal = -16r1000000000000000 ]! !!SmallIntegerTest methodsFor: 'tests - printing' stamp: 'SvenVanCaekenberghe 6/1/2017 20:08' prior: 60217483!testPrintString	self assert: 1 printString equals: '1'.	self assert: -1 printString equals: '-1'.	Smalltalk vm wordSize = 4		ifTrue: [ 			self assert: SmallInteger minVal printString equals: '-1073741824'.			self assert: SmallInteger maxVal printString equals: '1073741823' ].	Smalltalk vm wordSize = 8		ifTrue: [ 			self assert: SmallInteger minVal printString equals: '-1152921504606846976'.			self assert: SmallInteger maxVal printString equals: '1152921504606846975' ].	self assert: 12345 printString equals: '12345'.	self assert: -54321 printString equals: '-54321'.		self assert: 0 decimalDigitLength equals: 1.	self assert: 4 decimalDigitLength equals: 1.	self assert: 12 decimalDigitLength equals: 2.	self assert: 123 decimalDigitLength equals: 3.	self assert: 1234 decimalDigitLength equals: 4.	self assert: 56789 decimalDigitLength equals: 5.	self assert: 657483 decimalDigitLength equals: 6.	self assert: 6571483 decimalDigitLength equals: 7.	self assert: 65174383 decimalDigitLength equals: 8.	self assert: 625744831 decimalDigitLength equals: 9.	self assert: 1000001111 decimalDigitLength equals: 10.	Smalltalk vm wordSize = 4		ifTrue: [ self assert: SmallInteger maxVal decimalDigitLength equals: 10 ].	Smalltalk vm wordSize = 8		ifTrue: [ self assert: SmallInteger maxVal decimalDigitLength equals: 19 ].! !!SmallInteger methodsFor: 'system primitives' stamp: 'SvenVanCaekenberghe 6/2/2017 09:42' prior: 60213036!digitAt: n	"Answer the value of an apparent byte-indexable field in the receiver,	 analogous to the large integers, which are organized as bytes."	n = 1		ifTrue: [ 			"Negate carefully in case the receiver is SmallInteger minVal"			^ self < 0				ifTrue: [ -256 - self bitAnd: 255 ]				ifFalse: [ self bitAnd: 255 ] ].	^ self < 0		ifTrue: [ (-256 - self bitShift: -8) + 1 digitAt: n - 1 ]		ifFalse: [ (self bitShift: 8 - (n bitShift: 3)) bitAnd: 255 ]! !!WriteStream methodsFor: 'accessing' stamp: 'kks 4/18/2017 22:42' prior: 84716398!ensureEndsWith: anObject	"Append anObject to the receiver IFF it is non-empty and there is not one on the end."	(position == 0 or: [(collection at: position) = anObject]) ifTrue: [^self].	self nextPut: anObject! !"CodeImportCommandLineHandlers"!"Collections-Streams"!"Collections-Tests"!"Kernel"!"Kernel-Tests"!"Pharo-Help"!"System-CommandLine"!"Postscript:Leave the line above, and replace the rest of this comment by a useful one.Executable statements should follow this comment, and shouldbe separated by periods, with no exclamation points (!!).Be sure to put any further comments in double-quotes, like this one."|repository|repository := MCHttpRepository                location: 'http://smalltalkhub.com/mc/Pharo/Pharo60/main'                user: ''                password: ''.(repository loadVersionFromFileNamed:'ScriptLoader60-TheIntegrator.575.mcz') load.ScriptLoader new update60499.!----End fileIn----!----QUIT----2017-06-06T15:14:03.768117+02:00 Pharo.image priorSource: 109815!----QUIT----2017-06-06T15:14:14.551317+02:00 Pharo.image priorSource: 153371!----SNAPSHOT----2017-06-13T18:48:53.324761+02:00 Pharo6.1.image priorSource: 153450!----SNAPSHOT----2017-06-13T18:49:03.471761+02:00 Pharo6.1.image priorSource: 153529!Object subclass: #Game	instanceVariableNames: ''	classVariableNames: ''	package: 'Snake_Game'!!Game methodsFor: 'as yet unclassified' stamp: 'Patrick 6/13/2017 18:55'!messageSelectorAndArgumentNames	"TODO this should read my keyboar input and pass it to the gui"! !Object subclass: #Game	instanceVariableNames: ''	classVariableNames: ''	package: 'Snake_Game'!!Game methodsFor: 'as yet unclassified' stamp: 'Patrick 6/13/2017 18:57' prior: 33708307!messageSelectorAndArgumentNames	"handles input"		^'handle input'.! !!Game methodsFor: 'as yet unclassified' stamp: 'Patrick 6/13/2017 19:01'!doOneCycleNow"Do one cycle of the interactive loop. This method is called repeatedlywhen the world is running.""process user input events"! !!ManifestSnakeGame commentStamp: '<historical>' prior: 0!I store metadata for this package. These meta data are used by other tools such as the SmalllintManifestChecker and the critics Browser!!ManifestSnakeGame class methodsFor: 'code-critics' stamp: 'Patrick 6/13/2017 19:01'!ruleRBUnclassifiedMethodsRuleV1FalsePositive	^ #()! !!ManifestSnakeGame class methodsFor: 'code-critics' stamp: 'Patrick 6/13/2017 19:01' prior: 33709168!ruleRBUnclassifiedMethodsRuleV1FalsePositive	^ #(#(#(#RGMethodDefinition #(#Game #messageSelectorAndArgumentNames #false)) #'2017-06-13T19:01:47.719761+02:00') )! !Game removeSelector: #messageSelectorAndArgumentNames!!Game methodsFor: 'interaction loop' stamp: 'Patrick 6/13/2017 19:03' prior: 33708742!doOneCycleNow"Do one cycle of the interactive loop. This method is called repeatedlywhen the world is running.""process user input events"self handsDo: [:h |self activeHand: h.h processEvents.self activeHand: nil].self runStepMethods.self displayWorldSafely.! !Object subclass: #NameOfSubclass	instanceVariableNames: ''	classVariableNames: ''	package: 'Snake_Game'!----SNAPSHOT----2017-06-15T15:04:20.531971+02:00 Pharo6.1.image priorSource: 153615!Object subclass: #Game	instanceVariableNames: ''	classVariableNames: ''	package: 'Snake_Game'!Smalltalk globals removeClassNamed: #AnObsoleteNameOfSubclass!----SNAPSHOT----2017-06-15T15:04:54.108971+02:00 Pharo6.1.image priorSource: 155581!Smalltalk globals removeClassNamed: #AnObsoleteGame!----SNAPSHOT----2017-06-15T15:06:50.520734+02:00 Pharo6.1.image priorSource: 155830!----SNAPSHOT----2017-06-15T15:06:53.082734+02:00 Pharo6.1.image priorSource: 155970!Object subclass: #BlankCell	instanceVariableNames: ''	classVariableNames: ''	package: 'Snake_Game_Model'!Object subclass: #ArtifactCell	instanceVariableNames: ''	classVariableNames: ''	package: 'Snake_Game_Model'!Object subclass: #SnakeCell	instanceVariableNames: ''	classVariableNames: ''	package: 'Snake_Game_Model'!Object subclass: #Grid	instanceVariableNames: ''	classVariableNames: ''	package: 'Snake_Game_Model'!----SNAPSHOT----2017-06-15T15:08:28.286734+02:00 Pharo6.1.image priorSource: 156056!Object subclass: #BlankCellTest	instanceVariableNames: ''	classVariableNames: ''	package: 'Snake_Game_Test'!!BlankCellTest methodsFor: 'test' stamp: 'Patrick 6/15/2017 15:11'!testCellOnState! !!BlankCellTest methodsFor: 'test' stamp: 'Patrick 6/15/2017 15:13' prior: 33711280!testCellOnState	| cell |	cell := BlankCell new.	self shoud: [ cell isOff ].	self shoudnt: [ cell isOn ].! !Smalltalk globals removeClassNamed: #AnObsoleteSnakeCell!Object subclass: #BlankCell	instanceVariableNames: 'activeSegments'	classVariableNames: ''	package: 'Snake_Game_Model'!Object subclass: #BlankCell	instanceVariableNames: 'snakeActive'	classVariableNames: ''	package: 'Snake_Game_Model'!!BlankCell methodsFor: 'accessing' stamp: 'Patrick 6/15/2017 15:16'!snakeActive	^ snakeActive! !!BlankCell methodsFor: 'accessing' stamp: 'Patrick 6/15/2017 15:16'!snakeActive: anObject	snakeActive := anObject! !!BlankCell methodsFor: 'initialize-release' stamp: 'Patrick 6/15/2017 15:19'!initializeSnakeActive	self ! !!BlankCell methodsFor: 'initialize-release' stamp: 'Patrick 6/15/2017 15:20' prior: 33712095!initializeSnakeActive	self snakeActive: Dictionary new.	self snakeActive at: #redPlayer put: false.	self snakeAttive at: #bluePlayer put: false.! !----SNAPSHOT----2017-06-15T15:20:31.922734+02:00 Pharo6.1.image priorSource: 156580!!BlankCell methodsFor: 'initialize' stamp: 'Patrick 6/15/2017 15:22'!initialize	super initialize.	self initializeSnakeActive.! !!BlankCell methodsFor: 'initialize-release' stamp: 'Patrick 6/15/2017 15:23' prior: 33712221!initializeSnakeActive	self snakeActive: Dictionary new.	self snakeActive at: #redPlayer put: false.	self snakeActive at: #bluePlayer put: false.! !----SNAPSHOT----2017-06-15T15:23:16.195734+02:00 Pharo6.1.image priorSource: 157939!!BlankCell methodsFor: 'testing' stamp: 'Patrick 6/15/2017 15:24'!isOn	^false! !!BlankCell methodsFor: 'testing' stamp: 'Patrick 6/15/2017 15:24'!isOff	^false! !----SNAPSHOT----2017-06-15T15:24:48.648734+02:00 Pharo6.1.image priorSource: 158402!TestCase subclass: #BlankCellTest	instanceVariableNames: ''	classVariableNames: ''	package: 'Snake_Game_Test'!----SNAPSHOT----2017-06-15T15:28:43.168734+02:00 Pharo6.1.image priorSource: 158655!!BlankCellTest methodsFor: 'test' stamp: 'Patrick 6/15/2017 15:30' prior: 33711383!testCellOnState	| cell |	cell := BlankCell new.	self should: [ cell isOff ].	self shoudnt: [ cell isOn ].! !----SNAPSHOT----2017-06-15T15:30:15.952734+02:00 Pharo6.1.image priorSource: 158856!!BlankCellTest methodsFor: 'test' stamp: 'Patrick 6/15/2017 15:30' prior: 33713459!testCellOnState	| cell |	cell := BlankCell new.	self should: [ cell isOff ].	self shouldnt: [ cell isOn ].! !----SNAPSHOT----2017-06-15T15:30:58.590734+02:00 Pharo6.1.image priorSource: 159139!!BlankCell methodsFor: 'testing' stamp: 'Patrick 6/15/2017 15:31' prior: 33713071!isOff	^true! !!BlankCell methodsFor: 'testing' stamp: 'Patrick 6/15/2017 15:32' prior: 33714025!isOff	^self isOn not! !!BlankCell methodsFor: 'testing' stamp: 'Patrick 6/15/2017 15:33' prior: 33712988!isOn	^self activeSnake values anySatisfy: [ :each | each = true ].! !!BlankCell methodsFor: 'testing' stamp: 'Patrick 6/15/2017 15:33' prior: 33714232!isOn	^self activeSnake values anySatisfy: [ :each | each = true ]! !!BlankCell methodsFor: 'testing' stamp: 'Patrick 6/15/2017 15:33' prior: 33714386!isOn	^self activeSnake values anySatisfy: [ :each | each]! !!BlankCell methodsFor: 'testing' stamp: 'Patrick 6/15/2017 15:33' prior: 33714539!isOn	^self activeSnake values anySatisfy: [ :each | each ]! !!BlankCell methodsFor: 'testing' stamp: 'Patrick 6/15/2017 15:33' prior: 33714684!isOn	^self activeSnake values anySatisfy: [ :each | each ] "comment"! !!BlankCell methodsFor: 'testing' stamp: 'Patrick 6/15/2017 15:33' prior: 33714830!isOn	^self activeSnake values anySatisfy: [ :each | each ]! !!BlankCell methodsFor: 'testing' stamp: 'Patrick 6/15/2017 15:33' prior: 33714986!isOn	^self activeSnake values anySatisfy: [ :each | each = true]! !!ManifestSnakeGameModel commentStamp: '<historical>' prior: 0!I store metadata for this package. These meta data are used by other tools such as the SmalllintManifestChecker and the critics Browser!!ManifestSnakeGameModel class methodsFor: 'code-critics' stamp: 'Patrick 6/15/2017 15:34'!ruleRBEqualsTrueRuleV1FalsePositive	^ #()! !!ManifestSnakeGameModel class methodsFor: 'code-critics' stamp: 'Patrick 6/15/2017 15:34' prior: 33715492!ruleRBEqualsTrueRuleV1FalsePositive	^ #(#(#(#RGMethodDefinition #(#BlankCell #isOn #false)) #'2017-06-15T15:34:04.980734+02:00') )! !!BlankCell methodsFor: 'testing' stamp: 'Patrick 6/15/2017 15:35' prior: 33715132!isOn	^self snakeActive values anySatisfy: [ :each | each = true]! !!BlankCellTest methodsFor: 'test' stamp: 'Patrick 6/15/2017 15:38'!testCellSnakeState	| cell |	cell := BlankCell new.	self shouldnt: [ cell isPlayerActive: #redPlayer ]	self shouldnt: [ cell isPlayerActive: #bluePlayer ]! !!BlankCellTest methodsFor: 'test' stamp: 'Patrick 6/15/2017 15:39' prior: 33716000!testCellSnakeState	| cell |	cell := BlankCell new.	self shouldnt: [ cell isPlayerActive: #redPlayer ].	self shouldnt: [ cell isPlayerActive: #bluePlayer ].! !!BlankCell methodsFor: 'testing' stamp: 'Patrick 6/15/2017 15:40'!isPlayerActive: player	^self snakeActive at: player! !----SNAPSHOT----2017-06-15T15:40:15.524734+02:00 Pharo6.1.image priorSource: 159423!----SNAPSHOT----2017-06-15T15:57:30.998734+02:00 Pharo6.1.image priorSource: 162098!Object subclass: #BlankCell	instanceVariableNames: 'snakeActive playerPresent'	classVariableNames: ''	package: 'Snake_Game_Model'!Object subclass: #BlankCell	instanceVariableNames: 'snakeActive playerHead'	classVariableNames: ''	package: 'Snake_Game_Model'!!BlankCell methodsFor: 'accessing' stamp: 'Patrick 6/16/2017 14:29'!playerHead	^ playerHead! !!BlankCell methodsFor: 'accessing' stamp: 'Patrick 6/16/2017 14:29'!playerHead: anObject	playerHead := anObject! !!BlankCell methodsFor: 'initialize-release' stamp: 'Patrick 6/16/2017 14:30'!initializePlayerHead	self ! !!BlankCell methodsFor: 'initialize-release' stamp: 'Patrick 6/16/2017 14:31' prior: 33717262!initializePlayerHead	self playerHead Dictionary new.	! !!BlankCell methodsFor: 'initialize-release' stamp: 'Patrick 6/16/2017 14:31' prior: 33717387!initializePlayerHead	self playerHead: Dictionary new.	self playerHead put at: #red false.! !!BlankCell methodsFor: 'initialize-release' stamp: 'Patrick 6/16/2017 14:31' prior: 33717540!initializePlayerHead	self playerHead: Dictionary new.	self playerHead at: #red put: false.! !!BlankCell methodsFor: 'initialize-release' stamp: 'Patrick 6/16/2017 14:32' prior: 33717729!initializePlayerHead	self playerHead: Dictionary new.	self playerHead at: #red put: false.	self playerHead at: #blue put: false.! !!BlankCell methodsFor: 'initialize-release' stamp: 'Patrick 6/16/2017 14:32'!initializeSnakeHead	self playerHead: Dictionary new.	self playerHead at: #red put: false.	self playerHead at: #blue put: false.! !BlankCell removeSelector: #initializePlayerHead!Object subclass: #BlankCell	instanceVariableNames: 'snakeActive snakeHead'	classVariableNames: ''	package: 'Snake_Game_Model'!!BlankCell methodsFor: 'accessing' stamp: 'Patrick 6/16/2017 14:33'!snakeHead: anObject	snakeHead := anObject! !!BlankCell methodsFor: 'accessing' stamp: 'Patrick 6/16/2017 14:33'!snakeHead	^ snakeHead! !BlankCell removeSelector: #playerHead!BlankCell removeSelector: #playerHead:!!BlankCell methodsFor: 'initialize-release' stamp: 'Patrick 6/16/2017 14:34' prior: 33712528!initialize	super initialize.	self initializeSnakeActive.	self initializeSnakeHead.! !!BlankCellTest methodsFor: 'as yet unclassified' stamp: 'Patrick 6/16/2017 14:36'!testCellSnakeHead	| cell |	cell := BlankCell new.	self shouldnt: [ cell isSnakeHead: #red ].	self shouldnt: [ cell isSnakeHead: #blue ].! !!BlankCell methodsFor: 'testing' stamp: 'Patrick 6/16/2017 14:36'!isSnakeHead: player	^self snakeHead at: player! !!BlankCell methodsFor: 'initialize-release' stamp: 'Patrick 6/16/2017 14:38' prior: 33718132!initializeSnakeHead	self snakeHead: Dictionary new.	self snakeHead at: #red put: false.	self snakeHead at: #blue put: false.! !!BlankCellTest methodsFor: 'as yet unclassified' stamp: 'Patrick 6/16/2017 14:42'!testCellSnakeEnteredFrom	| cell |	cell := BlankCell new.	cell snakeEnteredFrom: #north	self should: [ cell isOn ].	self should: [ cell previousSegment: #north ].! !!BlankCellTest methodsFor: 'tests' stamp: 'Patrick 6/16/2017 14:43' prior: 33719574!testCellSnakeEnteredFrom	| cell |	cell := BlankCell new.	cell snakeEnteredFrom: #north	self should: [ cell isOn ].	self should: [ cell previousSegment: #north ].	self shouldnt: [ cell previousSegment: #south ].	self shouldnt: [ cell previousSegment: #east ].	self shouldnt: [ cell previousSegment: #west ].! !----SNAPSHOT----2017-06-16T14:44:04.098311+02:00 Pharo6.1.image priorSource: 162184!Object subclass: #BlankCell	instanceVariableNames: 'snakeActive snakeHead previousSegment'	classVariableNames: ''	package: 'Snake_Game_Model'!!BlankCell methodsFor: 'accessing' stamp: 'Patrick 6/16/2017 14:44'!previousSegment	^ previousSegment! !!BlankCell methodsFor: 'accessing' stamp: 'Patrick 6/16/2017 14:44'!previousSegment: anObject	previousSegment := anObject! !!BlankCellTest methodsFor: 'tests' stamp: 'Patrick 6/16/2017 14:45' prior: 33719829!testCellSnakeEnteredFrom	| cell |	cell := BlankCell new.	cell snakeEnteredFrom: #north	self should: [ cell isOn ].	self should: [ cell previousSegment: #north ].	self shouldnt: [ cell previousSegment: #south ].	self shouldnt: [ cell previousSegment: #east ].	self shouldnt: [ cell previousSegment: #west ].! !!BlankCell methodsFor: 'accessing' stamp: 'Patrick 6/16/2017 14:53'!enteredFrom: anObject	| entered |	self isOn.	previousSegment := anObject! !!BlankCell methodsFor: 'accessing' stamp: 'Patrick 6/16/2017 14:56' prior: 33721086!enteredFrom: player	self isOn.	self snakeActive at: player put: true.! !!BlankCell methodsFor: 'accessing' stamp: 'Patrick 6/16/2017 14:57' prior: 33721250!enteredFrom: player from	self isOn.	self snakeActive at: player put: true.	self previousSegment put: from.! !Object subclass: #BlankCell	instanceVariableNames: 'snakeActive snakeHead previousSegment'	classVariableNames: ''	package: 'Snake_Game_Model'!!BlankCellTest methodsFor: 'tests' stamp: 'Patrick 6/16/2017 14:59' prior: 33720699!testCellSnakeEnteredFrom	| cell |	cell := BlankCell new.	cell snakeEnteredFrom: #north	self should: [ cell isOn ].	self should: [ cell previousSegment: #north ].	self shouldnt: [ cell previousSegment: #south ].	self shouldnt: [ cell previousSegment: #east ].	self shouldnt: [ cell previousSegment: #west ].! !!BlankCell methodsFor: 'accessing' stamp: 'Patrick 6/16/2017 15:00' prior: 33721410!enteredFrom: from	self isOn.	self snakeActive at: previousSegment put: from.! !!BlankCell methodsFor: 'accessing' stamp: 'Patrick 6/16/2017 15:00' prior: 33722158!enteredFrom: from	self isOn put: true.	self snakeActive at: previousSegment put: from.! !----SNAPSHOT----2017-06-16T15:00:51.576311+02:00 Pharo6.1.image priorSource: 165714!!BlankCellTest methodsFor: 'tests' stamp: 'Patrick 6/16/2017 15:01' prior: 33721755!testCellSnakeEnteredFrom	| cell |	cell := BlankCell new.	cell enteredFrom: #north	self should: [ cell isOn ].	self should: [ cell previousSegment: #north ].	self shouldnt: [ cell previousSegment: #south ].	self shouldnt: [ cell previousSegment: #east ].	self shouldnt: [ cell previousSegment: #west ].! !!BlankCellTest methodsFor: 'tests' stamp: 'Patrick 6/16/2017 15:02' prior: 33722588!testCellSnakeEnteredFrom	| cell |	cell := BlankCell new.	cell enteredFrom: #north.	self should: [ cell isOn ].	self should: [ cell previousSegment: #north ].	self shouldnt: [ cell previousSegment: #south ].	self shouldnt: [ cell previousSegment: #east ].	self shouldnt: [ cell previousSegment: #west ].! !!BlankCell methodsFor: 'accessing' stamp: 'Patrick 6/16/2017 15:03' prior: 33722325!enteredFrom: from	self isOn put: true.	self previousSegment put: from.! !!BlankCell methodsFor: 'accessing' stamp: 'Patrick 6/16/2017 15:04' prior: 33723385!enteredFrom: from	self previousSegment put: from.! !BlankCell removeSelector: #enteredFrom:!!BlankCellTest methodsFor: 'tests' stamp: 'Patrick 6/16/2017 15:05' prior: 33722986!testCellSnakeEnteredFrom	| cell |	cell := BlankCell new.	cell prevousSegment: #north.	self should: [ cell isOn ].	self should: [ cell previousSegment: #north ].	self shouldnt: [ cell previousSegment: #south ].	self shouldnt: [ cell previousSegment: #east ].	self shouldnt: [ cell previousSegment: #west ].! !!BlankCellTest methodsFor: 'tests' stamp: 'Patrick 6/16/2017 15:05' prior: 33723727!testCellSnakeEnteredFrom	| cell |	cell := BlankCell new.	cell prevousSegment: #north.	self should: [ cell previousSegment: #north ].	self shouldnt: [ cell previousSegment: #south ].	self shouldnt: [ cell previousSegment: #east ].	self shouldnt: [ cell previousSegment: #west ].! !!BlankCellTest methodsFor: 'tests' stamp: 'Patrick 6/16/2017 15:05' prior: 33724129!testCellSnakeEnteredFrom	| cell |	cell := BlankCell new.	cell previousSegment: #north.	self should: [ cell previousSegment: #north ].	self shouldnt: [ cell previousSegment: #south ].	self shouldnt: [ cell previousSegment: #east ].	self shouldnt: [ cell previousSegment: #west ].! !!BlankCellTest methodsFor: 'tests' stamp: 'Patrick 6/16/2017 15:07' prior: 33724502!testCellSnakeEnteredFrom	| cell |	cell := BlankCell new.	cell previousSegment: #north.	self should: [ cell previousSegment = #north ].	self shouldnt: [ cell previousSegment = #south ].	self shouldnt: [ cell previousSegment = #east ].	self shouldnt: [ cell previousSegment = #west ].! !!BlankCellTest methodsFor: 'tests' stamp: 'Patrick 6/16/2017 15:07' prior: 33724876!testCellSnakeEnteredFrom	| cell |	cell := BlankCell new.	cell previousSegment: #north.	self should: [ cell previousSegment = #north ].	cell previousSegment: #south.	self should: [ cell previousSegment = #south ].	cell previousSegment: #east.	self should: [ cell previousSegment = #east ].	cell previousSegment: #west.	self should: [ cell previousSegment = #west ].! !Smalltalk globals removeClassNamed: #AnObsoleteArtifactCell!!BlankCell methodsFor: 'initialize-release' stamp: 'Patrick 6/16/2017 15:09'!initializeArtifact	self artifact: Dictionary new.	self artifact at: #type put: #none.! !Object subclass: #BlankCell	instanceVariableNames: 'snakeActive snakeHead previousSegment artifact'	classVariableNames: ''	package: 'Snake_Game_Model'!!BlankCell methodsFor: 'accessing' stamp: 'Patrick 6/16/2017 15:10'!artifact	^ artifact! !!BlankCell methodsFor: 'accessing' stamp: 'Patrick 6/16/2017 15:10'!artifact: anObject	artifact := anObject! !----SNAPSHOT----2017-06-16T15:10:28.349311+02:00 Pharo6.1.image priorSource: 167984!!BlankCellTest methodsFor: 'as yet unclassified' stamp: 'Patrick 6/16/2017 15:11'!testCellArtifact	| cell |	cell := BlankCell new.	self shouldnt: [ cell isPlayerActive: #speedUp ].	self should: [ cell isPlayerActive: #none ].! !!BlankCell methodsFor: 'initialize-release' stamp: 'Patrick 6/16/2017 15:11' prior: 33718832!initialize	super initialize.	self initializeSnakeActive.	self initializeSnakeHead.	self initializeArtifact.! !!BlankCellTest methodsFor: 'tests' stamp: 'Patrick 6/16/2017 15:12' prior: 33726394!testCellArtifact	| cell |	cell := BlankCell new.	self shouldnt: [ cell isPlayerActive = #speedUp ].	self should: [ cell isPlayerActive = #none ].! !!BlankCellTest methodsFor: 'tests' stamp: 'Patrick 6/16/2017 15:13' prior: 33726839!testCellArtifact	| cell |	cell := BlankCell new.	self shouldnt: [ cell isArtifact = #speedUp ].	self should: [ cell isArtifact = #none ].! !!BlankCellTest methodsFor: 'tests' stamp: 'Patrick 6/16/2017 15:13' prior: 33727077!testCellArtifact	| cell |	cell := BlankCell new.	self shouldnt: [ cell artifact = #speedUp ].	self should: [ cell artifact = #none ].! !!BlankCellTest methodsFor: 'tests' stamp: 'Patrick 6/16/2017 15:13' prior: 33727307!testCellArtifact	| cell |	cell := BlankCell new.	cell artifact = #none.	self shouldnt: [ cell artifact = #speedUp ].	self should: [ cell artifact = #none ].! !!BlankCellTest methodsFor: 'tests' stamp: 'Patrick 6/16/2017 15:14' prior: 33727533!testCellArtifact	| cell |	cell := BlankCell new.	cell artifact: #none.	self shouldnt: [ cell artifact = #speedUp ].	self should: [ cell artifact = #none ].! !!BlankCell methodsFor: 'testing' stamp: 'Patrick 6/16/2017 15:16'!isArtifact	^self artifact! !!BlankCell methodsFor: 'testing' stamp: 'Patrick 6/16/2017 15:19' prior: 33728014!isArtifact	artifact = #none		ifTrue: [ ^false ]		ifFalse: [ ^true ]! !!BlankCellTest methodsFor: 'tests' stamp: 'Patrick 6/16/2017 15:19' prior: 33727783!testCellArtifact	| cell |	cell := BlankCell new.	cell artifact: #none.	self shouldnt: [ cell artifact = #speedUp ].	self shouldnt: [ cell isArtifact ].! !!BlankCell methodsFor: 'testing' stamp: 'Patrick 6/16/2017 15:22'!somePlayerActive	snakeActive = #bluePlayer or snakeActive = #redPlayer		ifTrue: [ ^true ]		ifFalse: [ ^false ]! !!BlankCell methodsFor: 'testing' stamp: 'Patrick 6/16/2017 15:23' prior: 33728513!somePlayerActive	snakeActive at: #bluePlayer or snakeActive at: #redPlayer		ifTrue: [ ^true ]		ifFalse: [ ^false ]! !!BlankCell methodsFor: 'testing' stamp: 'Patrick 6/16/2017 15:23' prior: 33728713!somePlayerActive	snakeActive at: #bluePlayer = true or snakeActive at: #redPlayer = true		ifTrue: [ ^true ]		ifFalse: [ ^false ]! !!BlankCell methodsFor: 'testing' stamp: 'Patrick 6/16/2017 15:23' prior: 33728917!somePlayerActive	self snakeActive at: #bluePlayer = true or snakeActive at: #redPlayer = true		ifTrue: [ ^true ]		ifFalse: [ ^false ]! !!BlankCell methodsFor: 'testing' stamp: 'Patrick 6/16/2017 15:23' prior: 33729135!somePlayerActive	self snakeActive at: #bluePlayer = true or self snakeActive at: #redPlayer = true		ifTrue: [ ^true ]		ifFalse: [ ^false ]! !!BlankCell methodsFor: 'testing' stamp: 'Patrick 6/16/2017 15:23' prior: 33729358!somePlayerActive	self snakeActive at: #bluePlayer = true or self snakeActive at: #redPlayer = true		ifTrue: [ ^true ]		ifFalse: [ ^false ]! !!BlankCell methodsFor: 'testing' stamp: 'Patrick 6/16/2017 15:23' prior: 33729586!somePlayerActive	self snakeActive = #bluePlayer or self snakeActive at: #redPlayer = true		ifTrue: [ ^true ]		ifFalse: [ ^false ]! !!BlankCell methodsFor: 'testing' stamp: 'Patrick 6/16/2017 15:24' prior: 33729814!somePlayerActive	self snakeActive = #bluePlayer or self snakeActive = #redPlayer		ifTrue: [ ^true ]		ifFalse: [ ^false ]! !!BlankCell methodsFor: 'testing' stamp: 'Patrick 6/16/2017 15:24' prior: 33730033!somePlayerActive	snakeActive = #bluePlayer or self snakeActive = #redPlayer		ifTrue: [ ^true ]		ifFalse: [ ^false ]! !!BlankCell methodsFor: 'testing' stamp: 'Patrick 6/16/2017 15:24' prior: 33730243!somePlayerActive	snakeActive = #bluePlayer or snakeActive = #redPlayer		ifTrue: [ ^true ]		ifFalse: [ ^false ]! !!BlankCell methodsFor: 'testing' stamp: 'Patrick 6/16/2017 15:26' prior: 33730448!somePlayerActive	| blue red |	blue := self isPlayerActive: #bluePlayer.	red := self sPlayerActive: #redPlayer.	red or blue		ifTrue: [ ^true ]		ifFalse: [ ^false ]! !!BlankCell methodsFor: 'testing' stamp: 'Patrick 6/16/2017 15:26' prior: 33730648!somePlayerActive	| blue red |	blue := self isPlayerActive: #bluePlayer.	red := self isPlayerActive: #redPlayer.	red or blue		ifTrue: [ ^true ]		ifFalse: [ ^false ]! !!BlankCell methodsFor: 'testing' stamp: 'Patrick 6/16/2017 15:26' prior: 33730903!somePlayerActive	| blue red |	blue := self isPlayerActive: #bluePlayer.	red := self isPlayerActive: #redPlayer.	red = true or blue = true		ifTrue: [ ^true ]		ifFalse: [ ^false ]! !!BlankCell methodsFor: 'testing' stamp: 'Patrick 6/16/2017 15:27' prior: 33731159!somePlayerActive	| blue red |	blue := self isPlayerActive: #bluePlayer.	red := self isPlayerActive: #redPlayer.	red or blue		ifTrue: [ ^true ]		ifFalse: [ ^false ]! !!BlankCell methodsFor: 'testing' stamp: 'Patrick 6/16/2017 15:27' prior: 33731429!somePlayerActive	| blue red |	blue := self isPlayerActive: #bluePlayer.	red := self isPlayerActive: #redPlayer.	red | blue		ifTrue: [ ^true ]		ifFalse: [ ^false ]! !!BlankCellTest methodsFor: 'as yet unclassified' stamp: 'Patrick 6/16/2017 15:28'!testCellSomePlayerActive	| cell |	cell := BlankCell new.	self shouldnt: [ cell isPlayerActive: #redPlayer ].	self shouldnt: [ cell isPlayerActive: #bluePlayer ].! !!BlankCellTest methodsFor: 'tests' stamp: 'Patrick 6/16/2017 15:28' prior: 33731940!testCellSomePlayerActive	| cell |	cell := BlankCell new.	cell playerActive at: #redPlayer put: true.	self shouldnt: [ cell isPlayerActive: #redPlayer ].	self shouldnt: [ cell isPlayerActive: #bluePlayer ].! !!BlankCellTest methodsFor: 'tests' stamp: 'Patrick 6/16/2017 15:28' prior: 33732194!testCellSomePlayerActive	| cell |	cell := BlankCell new.	cell playerActive: #redPlayer put: true.	self shouldnt: [ cell isPlayerActive: #redPlayer ].	self shouldnt: [ cell isPlayerActive: #bluePlayer ].! !!BlankCellTest methodsFor: 'tests' stamp: 'Patrick 6/16/2017 15:29' prior: 33732493!testCellSomePlayerActive	| cell |	cell := BlankCell new.	cell playerActive: #redPlayer.	self shouldnt: [ cell isPlayerActive: #redPlayer ].	self shouldnt: [ cell isPlayerActive: #bluePlayer ].! !!BlankCellTest methodsFor: 'tests' stamp: 'Patrick 6/16/2017 15:29' prior: 33732789!testCellSomePlayerActive	| cell |	cell := BlankCell new.	cell snakeActive: #redPlayer.	self shouldnt: [ cell isPlayerActive: #redPlayer ].	self shouldnt: [ cell isPlayerActive: #bluePlayer ].! !!BlankCellTest methodsFor: 'tests' stamp: 'Patrick 6/16/2017 15:30' prior: 33733075!testCellSomePlayerActive	| cell |	cell := BlankCell new.	self should: [ cell somePlayerActive = false ].	cell snakeActive: #redPlayer.	self should: [ cell isPlayerActive: true ].! !!BlankCellTest methodsFor: 'tests' stamp: 'Patrick 6/16/2017 15:30' prior: 33733360!testCellSomePlayerActive	| cell |	cell := BlankCell new.	self should: [ cell somePlayerActive = false ].	cell snakeActive: #redPlayer.	self should: [ cell isPlayerActive = true ].! !!BlankCellTest methodsFor: 'tests' stamp: 'Patrick 6/16/2017 15:30' prior: 33733632!testCellSomePlayerActive	| cell |	cell := BlankCell new.	self should: [ cell somePlayerActive ].	cell snakeActive: #redPlayer.	self should: [ cell isPlayerActive ].! !!BlankCellTest methodsFor: 'tests' stamp: 'Patrick 6/16/2017 15:30' prior: 33733905!testCellSomePlayerActive	| cell |	cell := BlankCell new.	self should: [ cell somePlayerActive ].	cell snakeActive: #redPlayer.	self should: [ cell somePlayerActive ].! !!BlankCellTest methodsFor: 'tests' stamp: 'Patrick 6/16/2017 15:31' prior: 33734163!testCellSomePlayerActive	| cell |	cell := BlankCell new.	self shouldnt: [ cell somePlayerActive ].	cell snakeActive: #redPlayer.	self should: [ cell somePlayerActive ].! !!BlankCellTest methodsFor: 'tests' stamp: 'Patrick 6/16/2017 15:32' prior: 33734423!testCellSomePlayerActive	| cell |	cell := BlankCell new.	cell snakeActive: #redPlayer.	self should: [ cell somePlayerActive ].! !!BlankCellTest methodsFor: 'tests' stamp: 'Patrick 6/16/2017 15:33' prior: 33734685!testCellSomePlayerActive	| cell |	cell := BlankCell new.	self shouldnt: [ cell somePlayerActive ].	cell snakeActive: #redPlayer.	self should: [ cell somePlayerActive ].! !!BlankCellTest methodsFor: 'tests' stamp: 'Patrick 6/16/2017 15:34' prior: 33734904!testCellSomePlayerActive	| cell |	cell := BlankCell new.	self shouldnt: [ cell somePlayerActive ].	cell snakeActive: #redPlayer.	self should: [ cell somePlayerActive ].! !!BlankCell methodsFor: 'testing' stamp: 'Patrick 6/16/2017 15:35' prior: 33716475!isPlayerActive: player	^self snakeActive at: player! !!BlankCell methodsFor: 'testing' stamp: 'Patrick 6/16/2017 15:35' prior: 33731685!somePlayerActive	| blue red |	blue := self isPlayerActive: #bluePlayer.	red := self isPlayerActive: #redPlayer.	red = #redPlayer | blue = #bluePlayer		ifTrue: [ ^true ]		ifFalse: [ ^false ]! !!BlankCell methodsFor: 'testing' stamp: 'Patrick 6/16/2017 15:36' prior: 33735565!somePlayerActive	| blue red |	blue := self isPlayerActive: #bluePlayer.	red := self isPlayerActive: #redPlayer.	(red = #redPlayer) | (blue = #bluePlayer)		ifTrue: [ ^true ]		ifFalse: [ ^false ]! !BlankCell removeSelector: #isPlayerActive:!!BlankCell methodsFor: 'testing' stamp: 'Patrick 6/16/2017 15:40' prior: 33735847!somePlayerActive	| colour |	colour := self snakeActive.	(colour = #redPlayer) | (colour = #bluePlayer)		ifTrue: [ ^true ]		ifFalse: [ ^false ]! !!BlankCellTest methodsFor: 'test' stamp: 'Patrick 6/16/2017 15:41' prior: 33716245!testCellSnakeState	| cell |	cell := BlankCell new.	self shouldnt: [ cell snakeActive = #redPlayer ].	self shouldnt: [ cell snakeActive = #bluePlayer ].! !!BlankCellTest methodsFor: 'test' stamp: 'Patrick 6/16/2017 15:41' prior: 33736413!testCellSnakeState	| cell |	cell := BlankCell new.	self shouldnt: [ cell snakeActive = #redPlayer ].	cell snakeActive: #redPlayer.	self shouldnt: [ cell snakeActive = #bluePlayer ].	self should: [ cell snakeActive = #redPlayer ].! !----SNAPSHOT----2017-06-16T15:41:37.126311+02:00 Pharo6.1.image priorSource: 171792!Object subclass: #Grid	instanceVariableNames: 'cells started'	classVariableNames: ''	package: 'Snake_Game_Model'!----SNAPSHOT----2017-06-16T16:13:52.817311+02:00 Pharo6.1.image priorSource: 182462!!Grid methodsFor: 'accessing' stamp: 'Patrick 6/16/2017 16:14'!cells	^ cells! !!Grid methodsFor: 'accessing' stamp: 'Patrick 6/16/2017 16:14'!cells: anObject	cells := anObject! !!Grid methodsFor: 'accessing' stamp: 'Patrick 6/16/2017 16:14'!started	^ started! !!Grid methodsFor: 'accessing' stamp: 'Patrick 6/16/2017 16:14'!started: anObject	started := anObject! !----SNAPSHOT----2017-06-16T16:15:38.571311+02:00 Pharo6.1.image priorSource: 182666!Object subclass: #Grid	instanceVariableNames: 'cells started rows columns'	classVariableNames: ''	package: 'Snake_Game_Model'!!Grid methodsFor: 'accessing' stamp: 'Patrick 6/16/2017 16:15'!rows	^ rows! !!Grid methodsFor: 'accessing' stamp: 'Patrick 6/16/2017 16:15'!rows: anObject	rows := anObject! !!Grid methodsFor: 'accessing' stamp: 'Patrick 6/16/2017 16:15'!columns	^ columns! !!Grid methodsFor: 'accessing' stamp: 'Patrick 6/16/2017 16:15'!columns: anObject	columns := anObject! !!Grid methodsFor: 'initialize' stamp: 'Patrick 6/16/2017 16:17'!initialize	super initialize.	self started: false.	self initializeCells.! !!Grid methodsFor: 'initialize' stamp: 'Patrick 6/16/2017 16:17'!initializeCells! !!Grid methodsFor: 'initialize' stamp: 'Patrick 6/16/2017 16:17' prior: 33738358!initializeCells	self cells: Dictionary new.! !!Grid methodsFor: 'initialize' stamp: 'Patrick 6/16/2017 16:20' prior: 33738458!initializeCells	self cells: Dictionary new.	1 to: self columns do: [ :x |		1 to: rows do: [ :y |			| point cell |			point := x@y.			cell := BlankCell new.			self cells at: point put: cell.	]]							! !----SNAPSHOT----2017-06-16T16:20:06.035311+02:00 Pharo6.1.image priorSource: 183128!!Grid methodsFor: 'accessing' stamp: 'Patrick 6/16/2017 16:22' prior: 33738022!columns	columns isNil ifTrue: [ self columns: 20 ].	^ columns! !!Grid methodsFor: 'accessing' stamp: 'Patrick 6/16/2017 16:23' prior: 33737842!rows	self rows isNil isTrue: [ self rows: 20 ].	^ rows! !!Grid methodsFor: 'accessing' stamp: 'Patrick 6/16/2017 16:23' prior: 33739112!rows	rows isNil ifTrue: [ self rows: 20 ].	^ rows! !!Grid methodsFor: 'as yet unclassified' stamp: 'Patrick 6/16/2017 16:25'!at: xy	^self cells at: xy! !!Grid methodsFor: 'accessing' stamp: 'Patrick 6/16/2017 16:26'!at: xy put: newCell	self cells at: xy put: newCell! !TestCase subclass: #GridTest	instanceVariableNames: ''	classVariableNames: ''	package: 'Snake_Game_Test'!!GridTest methodsFor: 'tests' stamp: 'Patrick 6/16/2017 16:29'!testGridInitialization	| grid cell |	grid := Grid new.	self shouldnt: [ grid started ].	cell := grid at: 2@5.	self should: [ cell class = BlankCell ].	self shouldnt: [ cell somePlayerActive ].	! !!GridTest methodsFor: 'tests' stamp: 'Patrick 6/16/2017 16:30' prior: 33739704!testGridInitialization	| grid cell |	grid := Grid new.	self shouldnt: [ grid started ].	cell := grid at: 2@5.	self should: [ cell class = BlankCell ].	! !!GridTest methodsFor: 'tests' stamp: 'Patrick 6/16/2017 16:30' prior: 33739988!testGridInitialization	| grid cell |	grid := Grid new.	self shouldnt: [ grid started ].	cell := grid at: 2@5.	self should: [ cell class = BlankCell ].	self shouldnt: [ cell somePlayerActive ]	! !!GridTest methodsFor: 'tests' stamp: 'Patrick 6/16/2017 16:30' prior: 33740229!testGridInitialization	| grid cell |	grid := Grid new.	self shouldnt: [ grid started ].	cell := grid at: 2@5.	self should: [ cell class = BlankCell ].	self shouldnt: [ cell somePlayerActive ].	! !!Grid methodsFor: 'initialize' stamp: 'Patrick 6/16/2017 16:32' prior: 33738587!initializeCells	self cells: Dictionary new.	1 to: self columns do: [ :x |		1 to: self rows do: [ :y |			| point cell |			point := x@y.			cell := BlankCell new.			self cells at: point put: cell.	]]							! !!GridTest methodsFor: 'tests' stamp: 'Patrick 6/16/2017 16:33' prior: 33740512!testGridInitialization	| grid cell |	grid := Grid new.	self shouldnt: [ grid started ].	cell := grid at: 2@5.	self should: [ cell class = BlankCell ].	self shouldnt: [ cell somePlayerActive ].	cell snakeActive: #redPlayer.	self should: [ cell somePlayerActive  ].	! !!GridTest methodsFor: 'tests' stamp: 'Patrick 6/16/2017 16:33' prior: 33741094!testGridInitialization	| grid cell |	grid := Grid new.	self shouldnt: [ grid started ].	cell := grid at: 2@5.	self should: [ cell class = BlankCell ].	self shouldnt: [ cell somePlayerActive ].	cell snakeActive: #redPlayer.	self should: [ cell somePlayerActive ].	! !----SNAPSHOT----2017-06-16T16:33:37.400311+02:00 Pharo6.1.image priorSource: 184366!----SNAPSHOT----2017-06-16T16:34:14.201311+02:00 Pharo6.1.image priorSource: 187294!!GridTest class methodsFor: 'instance creation' stamp: 'Patrick 6/16/2017 16:40'!newOfSize: xy	| model |	model := self basicNew.	model		rows: xy x;		columns: xy y.	model initialize.	^model		! !----SNAPSHOT----2017-06-16T16:41:45.033311+02:00 Pharo6.1.image priorSource: 187380!!Grid class methodsFor: '*Snake_Game_Model' stamp: 'Patrick 6/16/2017 16:42'!newOfSize: xy	| model |	model := self basicNew.	model		rows: xy x;		columns: xy y.	model initialize.	^model		! !GridTest class removeSelector: #newOfSize:!----SNAPSHOT----2017-06-16T16:43:19.780311+02:00 Pharo6.1.image priorSource: 187669!----SNAPSHOT----2017-06-16T16:44:52.839311+02:00 Pharo6.1.image priorSource: 187999!!Grid methodsFor: 'initialize' stamp: 'Patrick 6/16/2017 18:11' prior: 33740797!initializeCells	self cells: Dictionary new.	1 to: self columns do: [ :x |		1 to: self rows do: [ :y |			| point cell |			point := x@y.			cell := BlankCell new.			self cells at: point put: cell.	]].	"TODO: rewrite acces via x@y"							! !----SNAPSHOT----2017-06-16T18:11:39.750107+02:00 Pharo6.1.image priorSource: 188085!Object subclass: #Snake	instanceVariableNames: 'cells'	classVariableNames: ''	package: 'Snake_Game_Model'!Object subclass: #Snake	instanceVariableNames: 'cells headPosition'	classVariableNames: ''	package: 'Snake_Game_Model'!Object subclass: #Snake	instanceVariableNames: 'cells headPosition' "make cells a queue?"	classVariableNames: ''	package: 'Snake_Game_Model'!!Snake methodsFor: 'comment' stamp: 'Patrick 6/16/2017 18:16'!comment	"make cells a queue?"! !!Snake methodsFor: 'comment' stamp: 'Patrick 6/16/2017 18:16' prior: 33743464!comment	"TODO make cells a queue?"! !Smalltalk globals removeClassNamed: #AnObsoleteSnake!Object subclass: #Grid	instanceVariableNames: 'cells started rows columns redCells redHead blueCells blueHead'	classVariableNames: ''	package: 'Snake_Game_Model'!!Grid methodsFor: 'accessing' stamp: 'Patrick 6/16/2017 18:19'!blueHead	^ blueHead! !!Grid methodsFor: 'accessing' stamp: 'Patrick 6/16/2017 18:19'!blueHead: anObject	blueHead := anObject! !!Grid methodsFor: 'initialize' stamp: 'Patrick 6/16/2017 18:21' prior: 33742685!initializeCells	self cells: Dictionary new.	1 to: self columns do: [ :x |		1 to: self rows do: [ :y |			| point cell |			point := x@y.			cell := BlankCell new.			self cells at: point put: cell.	]].	blueHead := 4@4.	"TODO: rewrite acces via x@y"							! !!Grid methodsFor: 'initialize' stamp: 'Patrick 6/16/2017 18:22' prior: 33744115!initializeCells	self cells: Dictionary new.	1 to: self columns do: [ :x |		1 to: self rows do: [ :y |			| point cell |			point := x@y.			cell := BlankCell new.			self cells at: point put: cell.	]].	blueHead := 4@4.	redHead := (columns-4)@(rows-4).	"TODO: rewrite acces via x@y"							! !!GridTest methodsFor: 'as yet unclassified' stamp: 'Patrick 6/16/2017 18:23'!testHeadPositions	| grid cell |	grid := Grid new.	self shouldnt: [ grid started ].	cell := grid at: 2@5.	self should: [ cell class = BlankCell ].	self shouldnt: [ cell somePlayerActive ].	cell snakeActive: #redPlayer.	self should: [ cell somePlayerActive ].! !!GridTest methodsFor: 'tests' stamp: 'Patrick 6/16/2017 18:25' prior: 33744842!testHeadPositions	| grid cell1 cell2 |	grid := Grid new.	cell1 := grid at: 4@4.	cell1 := grid at: 16@16.	self should: [ cell1 snakeHead = #blue ].	self should: [ cell2 snakeHead = #red ].! !!GridTest methodsFor: 'tests' stamp: 'Patrick 6/16/2017 18:25' prior: 33745191!testHeadPositions	| grid cell1 cell2 |	grid := Grid new.	cell1 := grid at: 4@4.	cell1 := grid at: 16@16.	self should: [ cell1 snakeHead = #bluePlayer ].	self should: [ cell2 snakeHead = #redPlayer ].! !!GridTest methodsFor: 'tests' stamp: 'Patrick 6/16/2017 18:26' prior: 33745468!testHeadPositions	| grid cell1 cell2 |	grid := Grid new.	cell1 := grid at: 4@4.	cell1 := grid at: 16@16.	self should: [ cell1 snakeHead: #bluePlayer ].	self should: [ cell2 snakeHead: #redPlayer ].! !!GridTest methodsFor: 'tests' stamp: 'Patrick 6/16/2017 18:26' prior: 33745757!testHeadPositions	| grid cell1 cell2 |	grid := Grid new.	cell1 := grid at: 4@4.	cell1 := grid at: 16@16.	self should: [ cell1 snakeHead= #bluePlayer ].	self should: [ cell2 snakeHead= #redPlayer ].! !!BlankCell methodsFor: 'initialize-release' stamp: 'Patrick 6/16/2017 18:26' prior: 33719360!initializeSnakeHead	self snakeHead: Dictionary new.	self snakeHead at: #redPlayer put: false.	self snakeHead at: #bluePlayer put: false.! !!BlankCell methodsFor: 'testing' stamp: 'Patrick 6/16/2017 18:33'!isSnakeHead	(self snakeHead at: #bluePlayer) | (self snakeHead at: #redPlayer)		ifTrue: [ ^true ]		ifFalse: [ ^false ].! !!GridTest methodsFor: 'tests' stamp: 'Patrick 6/16/2017 18:33' prior: 33746044!testHeadPositions	| grid cell1 cell2 |	grid := Grid new.	cell1 := grid at: 4@4.	cell1 := grid at: 16@16.	self should: [ cell1 snakeHead at: #bluePlayer ].	self should: [ cell2 snakeHead at: #redPlayer ].! !!BlankCellTest methodsFor: 'tests' stamp: 'Patrick 6/16/2017 18:34' prior: 33719004!testCellSnakeHead	| cell |	cell := BlankCell new.	self shouldnt: [ cell isSnakeHead at: #redPlayer ].	self shouldnt: [ cell isSnakeHead at: #bluePlayer ].! !!BlankCellTest methodsFor: 'tests' stamp: 'Patrick 6/16/2017 18:35' prior: 33747059!testCellSnakeHead	| cell |	cell := BlankCell new.	self should: [ cell isSnakeHead at: #redPlayer ].	self should: [ cell isSnakeHead at: #bluePlayer ].! !!BlankCellTest methodsFor: 'tests' stamp: 'Patrick 6/16/2017 18:35' prior: 33747306!testCellSnakeHead	| cell |	cell := BlankCell new.	self should: [ cell isSnakeHead at: #redPlayer = false].	self should: [ cell isSnakeHead at: #bluePlayer = false ].! !!BlankCellTest methodsFor: 'tests' stamp: 'Patrick 6/16/2017 18:35' prior: 33747549!testCellSnakeHead	| cell |	cell := BlankCell new.	self should: [ cell isSnakeHead = false].! !!BlankCell methodsFor: 'testing' stamp: 'Patrick 6/16/2017 18:36' prior: 33719215!isSnakeHead: player	^self snakeHead put: player! !!BlankCell methodsFor: 'testing' stamp: 'Patrick 6/16/2017 18:37' prior: 33747988!isSnakeHead: player	player = snakeHead 	ifTrue: [ ^true ]	ifFalse: [ ^false ]! !!BlankCell methodsFor: 'testing' stamp: 'Patrick 6/16/2017 18:37' prior: 33748123!isSnakeHead: player	player = snakeHead 		ifTrue: [ ^true ]		ifFalse: [ ^false ]! !!BlankCell methodsFor: 'testing' stamp: 'Patrick 6/16/2017 18:38' prior: 33748290!isSnakeHead: player	(player = snakeHead)		ifTrue: [ ^true ]		ifFalse: [ ^false ]! !BlankCell removeSelector: #isSnakeHead:!!Grid methodsFor: 'initialize' stamp: 'Patrick 6/16/2017 18:39' prior: 33744463!initializeCells	self cells: Dictionary new.	1 to: self columns do: [ :x |		1 to: self rows do: [ :y |			| point cell |			point := x@y.			cell := BlankCell new.			self cells at: point put: cell.	]].	"setting starting positions!!"	blueHead := 4@4.	redHead := (columns-4)@(rows-4).	"TODO: rewrite acces via x@y"							! !!Grid methodsFor: 'initialize' stamp: 'Patrick 6/16/2017 18:41' prior: 33748669!initializeCells	self cells: Dictionary new.	1 to: self columns do: [ :x |		1 to: self rows do: [ :y |			| point cell |			point := x@y.			cell := BlankCell new.			self cells at: point put: cell.	]].	"setting starting positions!!"	blueHead := 4@4.	redHead := (columns-4)@(rows-4).	"TODO: rewrite acces via x@y"							! !!Grid methodsFor: 'initialize' stamp: 'Patrick 6/16/2017 18:41' prior: 33749083!initializeCells	self cells: Dictionary new.	1 to: self columns do: [ :x |		1 to: self rows do: [ :y |			| point cell |			point := x@y.			cell := BlankCell new.			self cells at: point put: cell.	]].	"setting starting positions!!"	"TODO set those cells to head or remove that attribute"	blueHead := 4@4.	redHead := (columns-4)@(rows-4).	"TODO: rewrite acces via x@y"							! !!Grid methodsFor: 'initialize' stamp: 'Patrick 6/16/2017 18:41' prior: 33749497!initializeCells	self cells: Dictionary new.	1 to: self columns do: [ :x |		1 to: self rows do: [ :y |			| point cell |			point := x@y.			cell := BlankCell new.			self cells at: point put: cell.	]].	"setting starting positions!!"	"TODO set those cells to head or remove that attribute from blankcell"	blueHead := 4@4.	redHead := (columns-4)@(rows-4).	"TODO: rewrite acces via x@y"							! !----SNAPSHOT----2017-06-16T18:41:45.514107+02:00 Pharo6.1.image priorSource: 188501!!GridTest methodsFor: 'tests' stamp: 'Patrick 6/17/2017 14:13' prior: 33746761!testHeadPositions	| grid cell1 cell2 |	grid := Grid newOfSize: 20.	cell1 := grid at: 4@4.	cell1 := grid at: 16@16.	self should: [ cell1 snakeHead at: #bluePlayer ].	self should: [ cell2 snakeHead at: #redPlayer ].! !!GridTest methodsFor: 'tests' stamp: 'Patrick 6/17/2017 14:14' prior: 33750539!testHeadPositions	| grid cell1 cell2 |	grid := Grid newOfSize: 20@20.	cell1 := grid at: 4@4.	cell1 := grid at: 16@16.	self should: [ cell1 snakeHead at: #bluePlayer ].	self should: [ cell2 snakeHead at: #redPlayer ].! !!Grid methodsFor: 'initialize' stamp: 'Patrick 6/17/2017 14:15' prior: 33738215!initialize	super initialize.	self started: false.	self initializeCells.	self initializeSnakes.! !!Grid methodsFor: 'initialize' stamp: 'Patrick 6/17/2017 14:15' prior: 33749968!initializeCells	self cells: Dictionary new.	1 to: self columns do: [ :x |		1 to: self rows do: [ :y |			| point cell |			point := x@y.			cell := BlankCell new.			self cells at: point put: cell.	]].							! !!Grid methodsFor: 'initialize' stamp: 'Patrick 6/17/2017 14:16'!initializeSnakes	blueHead := cells at: 4@4.	redHead := cells at: (self columns - 4)@(self rows - 4).	"TODO: rewrite acces via x@y"! !!Grid methodsFor: 'initialize' stamp: 'Patrick 6/17/2017 14:17' prior: 33751615!initializeSnakes	blueHead := cells at: 4@4.	redHead := cells at: (self columns - 4)@(self rows - 4).! !!Grid methodsFor: 'initialize' stamp: 'Patrick 6/17/2017 14:18' prior: 33751833!initializeSnakes	blueHead := cells at: 4@4.	blueHead snakeHead: #bluePlayer.	redHead := cells at: (self columns - 4)@(self rows - 4).	redHead snakeHead: #redPlayer.! !!GridTest methodsFor: 'tests' stamp: 'Patrick 6/17/2017 14:19' prior: 33750842!testHeadPositions	| grid cell1 cell2 |	grid := Grid newOfSize: 20@20.	cell1 := grid at: 4@4.	cell1 := grid at: 16@16.	self should: [ cell1 snakeHead at: #bluePlayer = true ].	self should: [ cell2 snakeHead at: #redPlayer = true ].! !!GridTest methodsFor: 'tests' stamp: 'Patrick 6/17/2017 14:19' prior: 33752272!testHeadPositions	| grid cell1 cell2 |	grid := Grid newOfSize: 20@20.	cell1 := grid at: 4@4.	cell1 := grid at: 16@16.	self should: [ cell1 snakeHead at: #bluePlayer ].	self should: [ cell2 snakeHead at: #redPlayer ].! !!Grid methodsFor: 'initialize' stamp: 'Patrick 6/17/2017 14:20' prior: 33752020!initializeSnakes	blueHead := cells at: 4@4.	blueHead snakeHead at: #bluePlayer: true.	redHead := cells at: (self columns - 4)@(self rows - 4).	redHead snakeHead: #redPlayer: true.! !!Grid methodsFor: 'initialize' stamp: 'Patrick 6/17/2017 14:20' prior: 33752899!initializeSnakes	blueHead := cells at: 4@4.	blueHead snakeHead at: #bluePlayer put: true.	redHead := cells at: (self columns - 4)@(self rows - 4).	redHead snakeHead at: #redPlayer put: true.! !!GridTest methodsFor: 'tests' stamp: 'Patrick 6/17/2017 14:21' prior: 33752592!testHeadPositions	| grid cell1 cell2 |	grid := Grid newOfSize: 20@20.	cell1 := grid at: 4@4.	cell1 := grid at: 16@16.	self should: [ cell1 snakeHead at: #bluePlayer = true ].	self should: [ cell2 snakeHead at: #redPlayer = true].! !!GridTest methodsFor: 'tests' stamp: 'Patrick 6/17/2017 14:21' prior: 33753445!testHeadPositions	| grid cell1 cell2 |	grid := Grid newOfSize: 20@20.	cell1 := grid at: 4@4.	cell1 := grid at: 16@16.	self should: [ cell1 snakeHead at: #bluePlayer = true ].	self should: [ cell2 snakeHead at: #redPlayer = true ].! !!GridTest methodsFor: 'tests' stamp: 'Patrick 6/17/2017 14:22' prior: 33753764!testHeadPositions	| grid cell1 cell2 |	grid := Grid newOfSize: 20@20.	cell1 := grid at: 4@4.	cell1 := grid at: 16@16.	self should: [ cell1 snakeHead at: #bluePlayer].	self should: [ cell2 snakeHead at: #redPlayer].! !!GridTest methodsFor: 'tests' stamp: 'Patrick 6/17/2017 14:22' prior: 33754084!testHeadPositions	| grid cell1 cell2 |	grid := Grid newOfSize: 20@20.	cell1 := grid at: 4@4.	cell1 := grid at: 16@16.	self should: [ cell1 snakeHead at: #bluePlayer].! !!GridTest methodsFor: 'tests' stamp: 'Patrick 6/17/2017 14:22' prior: 33754388!testHeadPositions	| grid cell1 cell2 |	grid := Grid newOfSize: 20@20.	cell1 := grid at: 4@4.	cell2 := grid at: 16@16.	self should: [ cell1 snakeHead at: #bluePlayer].	self should: [ cell2 snakeHead at: #redPlayer].! !(Smalltalk globals at: #BlankCell) rename: #Cell!!BlankCellTest methodsFor: 'tests' stamp: 'Patrick 6/17/2017 14:25' prior: 33747807!testCellSnakeHead	| cell |	cell := Cell new.	self should: [ cell isSnakeHead = false].! !!BlankCellTest methodsFor: 'tests' stamp: 'Patrick 6/17/2017 14:25' prior: 33736656!testCellSnakeState	| cell |	cell := Cell new.	self shouldnt: [ cell snakeActive = #redPlayer ].	cell snakeActive: #redPlayer.	self shouldnt: [ cell snakeActive = #bluePlayer ].	self should: [ cell snakeActive = #redPlayer ].! !!BlankCellTest methodsFor: 'tests' stamp: 'Patrick 6/17/2017 14:25' prior: 33713742!testCellOnState	| cell |	cell := Cell new.	self should: [ cell isOff ].	self shouldnt: [ cell isOn ].! !!BlankCellTest methodsFor: 'tests' stamp: 'Patrick 6/17/2017 14:25' prior: 33728286!testCellArtifact	| cell |	cell := Cell new.	cell artifact: #none.	self shouldnt: [ cell artifact = #speedUp ].	self shouldnt: [ cell isArtifact ].! !!BlankCellTest methodsFor: 'tests' stamp: 'Patrick 6/17/2017 14:25' prior: 33725254!testCellSnakeEnteredFrom	| cell |	cell := Cell new.	cell previousSegment: #north.	self should: [ cell previousSegment = #north ].	cell previousSegment: #south.	self should: [ cell previousSegment = #south ].	cell previousSegment: #east.	self should: [ cell previousSegment = #east ].	cell previousSegment: #west.	self should: [ cell previousSegment = #west ].! !!BlankCellTest methodsFor: 'tests' stamp: 'Patrick 6/17/2017 14:25' prior: 33735166!testCellSomePlayerActive	| cell |	cell := Cell new.	self shouldnt: [ cell somePlayerActive ].	cell snakeActive: #redPlayer.	self should: [ cell somePlayerActive ].! !!Grid methodsFor: 'initialize' stamp: 'Patrick 6/17/2017 14:25' prior: 33751332!initializeCells	self cells: Dictionary new.	1 to: self columns do: [ :x |		1 to: self rows do: [ :y |			| point cell |			point := x@y.			cell := Cell new.			self cells at: point put: cell.	]].							! !!GridTest methodsFor: 'tests' stamp: 'Patrick 6/17/2017 14:25' prior: 33741451!testGridInitialization	| grid cell |	grid := Grid new.	self shouldnt: [ grid started ].	cell := grid at: 2@5.	self should: [ cell class = Cell ].	self shouldnt: [ cell somePlayerActive ].	cell snakeActive: #redPlayer.	self should: [ cell somePlayerActive ].	! !!ManifestSnakeGameModel class methodsFor: 'code-critics' stamp: 'Patrick 6/17/2017 14:25' prior: 33715645!ruleRBEqualsTrueRuleV1FalsePositive	^ #(#(#(#RGMethodDefinition #(#Cell #isOn #false)) #'2017-06-15T15:34:04.980734+02:00') )! !Object subclass: #Cell	instanceVariableNames: 'snakeActive snakeHead previousSegment artifact position'	classVariableNames: ''	package: 'Snake_Game_Model'!!Cell methodsFor: 'accessing' stamp: 'Patrick 6/17/2017 14:25'!position	^ position! !!Cell methodsFor: 'accessing' stamp: 'Patrick 6/17/2017 14:25'!position: anObject	position := anObject! !!Grid methodsFor: 'accessing' stamp: 'Patrick 6/17/2017 14:27' prior: 33739475!at: xy put: newCell	newCell position: xy.	self cells at: xy put: newCell! !----SNAPSHOT----2017-06-17T14:29:19.879846+02:00 Pharo6.1.image priorSource: 195940!Object subclass: #Directions		instanceVariableNames: '' 		classVariableNames: ''		package: 'Snake_Game_Model'!Directions subclass: #North	instanceVariableNames: ''	classVariableNames: ''	package: 'Snake_Game_Model'!Directions subclass: #South	instanceVariableNames: ''	classVariableNames: ''	package: 'Snake_Game_Model'!Directions subclass: #East	instanceVariableNames: ''	classVariableNames: ''	package: 'Snake_Game_Model'!Directions subclass: #West	instanceVariableNames: ''	classVariableNames: ''	package: 'Snake_Game_Model'!!North class methodsFor: 'as yet unclassified' stamp: 'Patrick 6/17/2017 14:33'!directionSymbol	^#north! !!South class methodsFor: 'as yet unclassified' stamp: 'Patrick 6/17/2017 14:33'!directionSymbol	^#south! !!West class methodsFor: 'as yet unclassified' stamp: 'Patrick 6/17/2017 14:33'!directionSymbol	^#west! !!East class methodsFor: 'as yet unclassified' stamp: 'Patrick 6/17/2017 14:34'!directionSymbol	^#east! !!North class methodsFor: 'as yet unclassified' stamp: 'Patrick 6/17/2017 14:34'!vector	^0@-1! !!South class methodsFor: 'as yet unclassified' stamp: 'Patrick 6/17/2017 14:34'!vector	^0@1! !!West class methodsFor: 'as yet unclassified' stamp: 'Patrick 6/17/2017 14:35'!vector	^-1@0! !!East class methodsFor: 'as yet unclassified' stamp: 'Patrick 6/17/2017 14:35'!vector	^1@0! !!Directions class methodsFor: 'as yet unclassified' stamp: 'Patrick 6/17/2017 14:36'!directionFor: dir	^self subclasses detect: [ :cls | cls directionSymbol = dir ]! !TestCase subclass: #DirectionTest	instanceVariableNames: ''	classVariableNames: ''	package: 'Snake_Game_Test'!!DirectionTest methodsFor: 'as yet unclassified' stamp: 'Patrick 6/17/2017 14:39'!testDirectionSelection	| dir |	dir := Directions directionFor: #north.	! !!DirectionTest methodsFor: 'tests' stamp: 'Patrick 6/17/2017 14:40' prior: 33759787!testDirectionSelection	| dir |	dir := Directions directionFor: #north.	self should: [ dir = North ].		! !!DirectionTest methodsFor: 'tests' stamp: 'Patrick 6/17/2017 14:41' prior: 33759950!testDirectionSelection	| dir |	dir := Directions directionFor: #north.	self should: [ dir = North ].	self should: [ dir vector = 0@-1 ].	dir := Directions directionFor: #south.	self should: [ dir = South ].	self should: [ dir vector = 0@1 ].		! !!ManifestSnakeGameTest commentStamp: '<historical>' prior: 0!I store metadata for this package. These meta data are used by other tools such as the SmalllintManifestChecker and the critics Browser!!ManifestSnakeGameTest class methodsFor: 'code-critics' stamp: 'Patrick 6/17/2017 14:41'!ruleShouldTransformedIntoAssertV1FalsePositive	^ #()! !!ManifestSnakeGameTest class methodsFor: 'code-critics' stamp: 'Patrick 6/17/2017 14:41' prior: 33760691!ruleShouldTransformedIntoAssertV1FalsePositive	^ #(#(#(#RGPackage #(#Snake_Game_Test)) #'2017-06-17T14:41:22.381846+02:00') )! !!DirectionTest methodsFor: 'tests' stamp: 'Patrick 6/17/2017 14:42' prior: 33760146!testDirectionSelection	| dir |	dir := Directions directionFor: #north.	self should: [ dir = North ].	self should: [ dir vector = 0@-1 ].	dir := Directions directionFor: #south.	self should: [ dir = South ].	self should: [ dir vector = 0@1 ].	dir := Directions directionFor: #west.	self should: [ dir = West ].	self should: [ dir vector = -1@0 ].	dir := Directions directionFor: #east.	self should: [ dir = East ].	self should: [ dir vector = 1@0 ].		! !!DirectionTest methodsFor: 'tests' stamp: 'Patrick 6/17/2017 14:42' prior: 33761069!testDirectionSelection	| dir |	dir := Directions directionFor: #north.	self should: [ dir = North ].	self should: [ dir vector = 0@(-1) ].	dir := Directions directionFor: #south.	self should: [ dir = South ].	self should: [ dir vector = 0@1 ].	dir := Directions directionFor: #west.	self should: [ dir = West ].	self should: [ dir vector = -1@0 ].	dir := Directions directionFor: #east.	self should: [ dir = East ].	self should: [ dir vector = 1@0 ].		! !!DirectionTest methodsFor: 'tests' stamp: 'Patrick 6/17/2017 14:43' prior: 33761623!testDirectionSelection	| dir |	dir := Directions directionFor: #north.	self should: [ dir = North ].	self should: [ dir vector = (0@-1) ].	dir := Directions directionFor: #south.	self should: [ dir = South ].	self should: [ dir vector = 0@1 ].	dir := Directions directionFor: #west.	self should: [ dir = West ].	self should: [ dir vector = -1@0 ].	dir := Directions directionFor: #east.	self should: [ dir = East ].	self should: [ dir vector = 1@0 ].		! !!DirectionTest methodsFor: 'tests' stamp: 'Patrick 6/17/2017 14:43' prior: 33762179!testDirectionSelection	| dir |	dir := Directions directionFor: #north.	self should: [ dir = North ].	self should: [ dir vector = (0@-1) ].	dir := Directions directionFor: #south.	self should: [ dir = South ].	self should: [ dir vector = (0@1) ].	dir := Directions directionFor: #west.	self should: [ dir = West ].	self should: [ dir vector = (-1@0) ].	dir := Directions directionFor: #east.	self should: [ dir = East ].	self should: [ dir vector = (1@0) ].		! !!DirectionTest methodsFor: 'tests' stamp: 'Patrick 6/17/2017 14:43' prior: 33762735!testDirectionSelection	| dir |	dir := Directions directionFor: #north.	self should: [ dir = North ].	self should: [ dir vector = (0@ -1) ].	dir := Directions directionFor: #south.	self should: [ dir = South ].	self should: [ dir vector = (0@1) ].	dir := Directions directionFor: #west.	self should: [ dir = West ].	self should: [ dir vector = (-1@0) ].	dir := Directions directionFor: #east.	self should: [ dir = East ].	self should: [ dir vector = (1@0) ].		! !!North class methodsFor: 'accessing' stamp: 'Patrick 6/17/2017 14:45' prior: 33759112!vector	^(0@ -1)! !!South class methodsFor: 'accessing' stamp: 'Patrick 6/17/2017 14:45' prior: 33759210!vector	^(0@1)! !!West class methodsFor: 'accessing' stamp: 'Patrick 6/17/2017 14:45' prior: 33759306!vector	^(-1@0)! !!East class methodsFor: 'accessing' stamp: 'Patrick 6/17/2017 14:45' prior: 33759403!vector	^(1@0)! !!North class methodsFor: 'accessing' stamp: 'Patrick 6/17/2017 14:45' prior: 33763862!vector	^(0@(-1))! !!Grid methodsFor: 'initialize' stamp: 'Patrick 6/17/2017 14:54' prior: 33751149!initialize	super initialize.	self started: false.	self initializeCells.	self initializeSnakes.	"TODO handle snake paths (see: 'LaserPathElement' in tutorial)"! !!Grid methodsFor: 'initialize' stamp: 'Patrick 6/17/2017 14:57' prior: 33756645!initializeCells	self cells: Dictionary new.	1 to: self columns do: [ :x |		1 to: self rows do: [ :y |			| point cell |			point := x@y.			cell := Cell new.			self at: point put: cell.	]].							! !!West class methodsFor: 'as yet unclassified' stamp: 'Patrick 6/17/2017 15:09'!inversionSymbol	^#east! !!South class methodsFor: 'as yet unclassified' stamp: 'Patrick 6/17/2017 15:09'!inversionSymbol	^#north! !!North class methodsFor: 'as yet unclassified' stamp: 'Patrick 6/17/2017 15:09'!inversionSymbol	^#south! !!East class methodsFor: 'as yet unclassified' stamp: 'Patrick 6/17/2017 15:10'!inversionSymbol	^#west! !!Directions class methodsFor: 'as yet unclassified' stamp: 'Patrick 6/17/2017 15:15'!inversionSymbol: dir	^(self directionFor: dir) inversionSymbol ! !!Directions class methodsFor: 'as yet unclassified' stamp: 'Patrick 6/17/2017 15:15' prior: 33759505!directionFor: dir	^self subclasses detect: [ :cls | cls directionSymbol = dir ] ifNone:[self]! !!Directions class methodsFor: 'as yet unclassified' stamp: 'Patrick 6/17/2017 15:16' prior: 33765528!directionFor: dir	^self subclasses detect: [ :cls | cls directionSymbol = dir ] ifNone: [self]! !!Directions class methodsFor: 'as yet unclassified' stamp: 'Patrick 6/17/2017 15:16'!inversionSymbol	^#none! !Object subclass: #CellRenderer	instanceVariableNames: 'position grid form'	classVariableNames: ''	package: 'Snake_Game_Model'!!CellRenderer methodsFor: 'accessing' stamp: 'Patrick 6/17/2017 15:23'!form	^ form! !!CellRenderer methodsFor: 'accessing' stamp: 'Patrick 6/17/2017 15:23'!form: anObject	form := anObject! !!CellRenderer methodsFor: 'accessing' stamp: 'Patrick 6/17/2017 15:23'!grid	^ grid! !!CellRenderer methodsFor: 'accessing' stamp: 'Patrick 6/17/2017 15:23'!grid: anObject	grid := anObject! !!CellRenderer methodsFor: 'accessing' stamp: 'Patrick 6/17/2017 15:23'!position	^ position! !!CellRenderer methodsFor: 'accessing' stamp: 'Patrick 6/17/2017 15:23'!position: anObject	position := anObject! !----SNAPSHOT----2017-06-17T15:23:56.963846+02:00 Pharo6.1.image priorSource: 203527!!CellRenderer class methodsFor: 'as yet unclassified' stamp: 'Patrick 6/17/2017 15:24'!modelClass	^Cell! !TestCase subclass: #RenderTest	instanceVariableNames: ''	classVariableNames: ''	package: 'Snake_Game_Test'!!RenderTest methodsFor: 'as yet unclassified' stamp: 'Patrick 6/17/2017 15:26'!testRenderClass	| renderer cell |		cell := Cell new.	renderer := CellRenderer model.! !!RenderTest methodsFor: 'tests' stamp: 'Patrick 6/17/2017 15:27' prior: 33767062!testRenderClass	| renderer cell |		cell := Cell new.	renderer := CellRenderer model.	self should: [ cell class = renderer ].! !!RenderTest methodsFor: 'tests' stamp: 'Patrick 6/17/2017 15:27' prior: 33767236!testRenderClass	| renderer cell |		cell := Cell new.	renderer := CellRenderer modelClass.	self should: [ cell class = renderer ].! !----SNAPSHOT----2017-06-17T15:27:51.444846+02:00 Pharo6.1.image priorSource: 212242!----SNAPSHOT----2017-06-17T15:36:10.724846+02:00 Pharo6.1.image priorSource: 213156!!CellRenderer methodsFor: 'drawing' stamp: 'Patrick 6/17/2017 15:38'!render	self		renderBorder;		renderContents! !!CellRenderer methodsFor: 'drawing' stamp: 'Patrick 6/17/2017 15:39' prior: 33767831!render	self		renderBorder;		renderContents.! !!CellRenderer methodsFor: 'drawing' stamp: 'Patrick 6/17/2017 15:39' prior: 33767966!render	self		renderBorder;		renderContents! !!CellRenderer methodsFor: 'drawing' stamp: 'Patrick 6/17/2017 15:39'!renderBorder	"will create border for cell"! !!CellRenderer methodsFor: 'drawing' stamp: 'Patrick 6/17/2017 15:40'!renderContents	"will color cell or show an artifact later"! !!RenderTest methodsFor: 'as yet unclassified' stamp: 'Patrick 6/17/2017 15:46'!testDraw	| grid form cellLoc cell rendererClass |	grid := Grid newOfSize: 30@30.	form := Form extent: 25@25 depth: Display depth.	cellLoc := 1@1.	cell := grid at: cellLoc.	rendererClass := CellRenderer modelClass.! !!RenderTest methodsFor: 'tests' stamp: 'Patrick 6/17/2017 15:46' prior: 33768481!testDraw	| grid form cellLoc cell rendererClass renderer |	grid := Grid newOfSize: 30@30.	form := Form extent: 25@25 depth: Display depth.	cellLoc := 1@1.	cell := grid at: cellLoc.	rendererClass := CellRenderer modelClass.	renderer := rendererClass new.	renderer		position: cellLoc;		grid: grid;		form: form.	renderer render.	form displayAt: 10@10.! !Object subclass: #CellRenderer	instanceVariableNames: 'position cellGrid cellForm'	classVariableNames: ''	package: 'Snake_Game_Model'!!CellRenderer methodsFor: 'accessing' stamp: 'Patrick 6/17/2017 15:48'!cellGrid	^ cellGrid! !CellRenderer removeSelector: #cellGrid!!CellRenderer methodsFor: 'accessing' stamp: 'Patrick 6/17/2017 15:48'!cellGrid	^ grid! !!FileList methodsFor: 'user interface' stamp: 'Patrick 6/17/2017 15:48'!cellGrid	^ grid ifNil: [ grid := self morphicGrid ]! !!FileList methodsFor: 'private' stamp: 'Patrick 6/17/2017 15:48' prior: 24887699!updateFileList	"Update my files list with file names in the current directory  	that match the pattern.	The pattern string may have embedded newlines or semicolons; these separate different patterns."	list := self listForPattern: pattern.	listIndex := self getListIndex.	volumeListIndex := volumeList size.	contents := ''.	self changed: #volumeListIndex.	self changed: #list.	self changed: #pattern.	self cellGrid deselectAll.	self cellGrid updateList.	self updateButtonRow! !CellRenderer removeSelector: #grid!FileList removeSelector: #grid!!CellRenderer methodsFor: 'accessing' stamp: 'Patrick 6/17/2017 15:48'!cellGrid: anObject	grid := anObject! !!Point methodsFor: 'point functions' stamp: 'Patrick 6/17/2017 15:48'!cellGrid: aPoint 	"Answer a Point to the nearest rounded grid modules specified by aPoint."	| newX newY |	newX := x + (aPoint x // 2) truncateTo: aPoint x.	newY := y + (aPoint y // 2) truncateTo: aPoint y.	^ newX @ newY! !!Rectangle class methodsFor: '*Morphic-Base' stamp: 'Patrick 6/17/2017 15:48' prior: 57572910!fromUser: gridPoint 	"Answer a Rectangle that is determined by having the user 	designate the top left and bottom right corners. 	The cursor reamins linked with the sensor, but	the outline is kept gridded."	| originRect |	self activeHand showTemporaryCursor: Cursor origin.	originRect :=  ((self activeHand cursorPoint cellGrid: gridPoint) extent: 0 @ 0) 					newRectFrom: [ :f :pt | (pt cellGrid: gridPoint) extent: 0 @ 0 ].						self activeHand showTemporaryCursor: Cursor bottomRight.	^  originRect newRectFrom: [ :f :pt | f origin corner: (pt cellGrid: gridPoint) ]! !!MethodFinder methodsFor: 'initialize' stamp: 'Patrick 6/17/2017 15:48' prior: 51108741!initialize2	"The methods we are allowed to use.  (MethodFinder new initialize) ""Set"	#("in class" sizeFor:"testing" "adding" "removing" "enumerating""private" array findElementOrNil: "accessing" someElement) do: [:sel | Approved add: sel]."Dictionary, IdentityDictionary, IdentitySet"	#("accessing" associationAt: associationAt:ifAbsent: at:ifPresent: keyAtIdentityValue: keyAtIdentityValue:ifAbsent: keyAtValue: keyAtValue:ifAbsent: keys"testing" includesKey: ) do: [:sel | Approved add: sel].	#(removeKey: removeKey:ifAbsent:) do: [:sel | AddAndRemove add: sel]."LinkedList, Interval, MappedCollection"	#("in class"  from:to: from:to:by:"accessing" contents) do: [:sel | Approved add: sel].	#("adding" addFirst: addLast:) do: [:sel | AddAndRemove add: sel]."OrderedCollection, SortedCollection"	#("accessing" after: before:"copying" copyEmpty"removing" "enumerating" "private" "accessing" sortBlock) do: [:sel | Approved add: sel].	#("adding" add:after: add:afterIndex: add:before: addAllFirst: addAllLast: addFirst: addLast:"removing" removeAt: removeFirst removeLast"accessing" sortBlock:) do: [:sel | AddAndRemove add: sel]."Character"	#("in class, instance creation" allCharacters digitValue: new separators	"accessing untypeable characters" backspace cr enter lf linefeed nbsp newPage space tab	"constants" alphabet characterTable"accessing" asciiValue digitValue"comparing""testing" isAlphaNumeric isDigit isLetter isLowercase isSafeForHTTP isSeparator isSpecial isUppercase isVowel tokenish"copying""converting" asLowercase asUppercase	) do: [:sel | Approved add: sel]."String"	#("in class, instance creation" crlf 	"primitives" findFirstInString:inSet:startingAt: indexOfAscii:inString:startingAt: 	"internet""accessing" byteAt: endsWithDigit #findAnySubstring:startingAt: #findBetweenSubstrings: findDelimiters:startingAt: findString:startingAt: findString:startingAt:caseSensitive: findTokens: findTokens:includes: findTokens:keep: #includesSubstring: includesSubstring:caseSensitive: indexOf:startingAt: indexOfAnyOf: indexOfAnyOf:ifAbsent: indexOfAnyOf:startingAt: indexOfAnyOf:startingAt:ifAbsent: lineCorrespondingToIndex: lineCount lineNumber: #skipAnySubstring:startingAt: skipDelimiters:startingAt: startsWithDigit"comparing" alike: beginsWith: caseSensitiveLessOrEqual: charactersExactlyMatching: compare: endsWith: endsWithAnyOf: sameAs: startingAt:match:startingAt:"copying" copyReplaceTokens:with: padLeftTo: padRightTo: padLeftTo:with: padRightTo:with:"converting" asByteArray asDate asFileName asText asTime asUrl capitalized compressWithTable: contractTo: correctAgainst: initialIntegerOrNil keywords quoted withoutPeriodSuffix splitInteger stemAndNumericSuffix substrings surroundedBySingleQuotes truncateWithElipsisTo: trimBoth uncapitalized withNoLineLongerThan: withSeparatorsCompacted withoutLeadingDigits trimRight trimLeft"displaying" "printing""system primitives" compare:with:collated: "Celeste" withCRs"internet" decodeMimeHeader decodeQuotedPrintable withInternetLineEndings withSqueakLineEndings withoutQuoting urlEncoded UrlDecoded"testing" isAllSeparators lastSpacePosition"paragraph support" indentationIfBlank:"arithmetic" ) do: [:sel | Approved add: sel].	#(byteAt:put: translateToLowercase match:) do: [:sel | AddAndRemove add: sel]."Symbol"	#("in class, private" hasInterned:ifTrue:	"access" morePossibleSelectorsFor: possibleSelectorsFor: selectorsContaining: thatStarts:skipping:"accessing" "comparing" "copying" "converting" "printing" "testing" isInfix isKeyword isUnary) do: [:sel | Approved add: sel]."Array"	#("comparing" "converting" "printing" "private" hasLiteralSuchThat:) do: [:sel | Approved add: sel]."Array2D"	#("access" at:at: atCol: atCol:put: atRow: extent extent:fromArray: height width width:height:type:) do: [:sel | Approved add: sel].	#(at:at:add: at:at:put: atRow:put: ) do: [:sel | AddAndRemove add: sel]."ByteArray"	#("accessing" doubleWordAt: wordAt: "platform independent access" longAt:bigEndian: shortAt:bigEndian: unsignedLongAt:bigEndian: unsignedShortAt:bigEndian: "converting") do: [:sel | Approved add: sel].	#(doubleWordAt:put: wordAt:put: longAt:put:bigEndian: shortAt:put:bigEndian: unsignedLongAt:put:bigEndian: unsignedShortAt:put:bigEndian:	) do: [:sel | AddAndRemove add: sel]."FloatArray"		"Dont know what happens when prims not here"	false ifTrue: [#("accessing" "arithmetic" *= += -= /="comparing""primitives-plugin" primAddArray: primAddScalar: primDivArray: primDivScalar: primMulArray: primMulScalar: primSubArray: primSubScalar:"primitives-translated" primAddArray:withArray:from:to: primMulArray:withArray:from:to: primSubArray:withArray:from:to:"converting" "private" "user interface") do: [:sel | Approved add: sel].	]."IntegerArray, WordArray""RunArray"	#("in class, instance creation" runs:values: scanFrom:"accessing" runLengthAt: "adding" "copying""private" runs values) do: [:sel | Approved add: sel].	#(coalesce repeatLast:ifEmpty: repeatLastIfEmpty:		) do: [:sel | AddAndRemove add: sel]."Stream  -- many operations change its state"	#("testing" atEnd) do: [:sel | Approved add: sel].	#("accessing" next: nextMatchAll: nextMatchFor: upToEndnext:put: nextPut: nextPutAll: "printing" print:	) do: [:sel | AddAndRemove add: sel]."PositionableStream"	#("accessing" contentsOfEntireFile originalContents peek peekFor: "testing""positioning" position ) do: [:sel | Approved add: sel].	#(nextDelimited: nextLine upTo: position: reset resetContents setToEnd skip: skipTo: upToAll: ) do: [:sel | AddAndRemove add: sel].	"Because it is so difficult to test the result of an operation on a Stream (you have to supply another Stream in the same state), we don't support Streams beyond the basics.  We want to find the messages that convert Streams to other things.""ReadWriteStream"	#("file status" closed) do: [:sel | Approved add: sel].	#("accessing" next: on: ) do: [:sel | AddAndRemove add: sel]."WriteStream"	#("in class, instance creation" on:from:to: with: with:from:to:		) do: [:sel | Approved add: sel].	#("positioning" resetToStart"character writing" crtab crtab:) do: [:sel | AddAndRemove add: sel]."LookupKey, Association, Link"	#("accessing" key nextLink) do: [:sel | Approved add: sel].	#(key: key:value: nextLink:) do: [:sel | AddAndRemove add: sel]."Point"	#("in class, instance creation" r:degrees: x:y:"accessing" x y "comparing" "arithmetic" "truncation and round off""polar coordinates" degrees r theta"point functions" bearingToPoint: crossProduct: distanceTo: dotProduct: eightNeighbors flipBy:centerAt: fourNeighbors #cellGrid: nearestPointAlongLineFrom:to: nearestPointOnLineFrom:to: normal normalized octantOf: onLineFrom:to: onLineFrom:to:within: quadrantOf: rotateBy:centerAt: transposed unitVector"converting" asFloatPoint asIntegerPoint corner: extent: rect:"transforming" adhereTo: rotateBy:about: scaleBy: scaleFrom:to: translateBy: "copying""interpolating" interpolateTo:at:) do: [:sel | Approved add: sel]."Rectangle"	#("in class, instance creation" center:extent: encompassing: left:right:top:bottom: 	merging: origin:corner: origin:extent: "accessing" area bottom bottomCenter bottomLeft bottomRight boundingBox center corner corners innerCorners left leftCenter origin right rightCenter top topCenter topLeft topRight"comparing""rectangle functions" adjustTo:along: amountToTranslateWithin: areasOutside: bordersOn:along: encompass: expandBy: extendBy: forPoint:closestSideDistLen: insetBy: insetOriginBy:cornerBy: intersect: merge: pointNearestTo: quickMerge: rectanglesAt:height: sideNearestTo: translatedToBeWithin: withBottom: withHeight: withLeft: withRight: withSide:setTo: withTop: withWidth:"testing" containsPoint: containsRect: hasPositiveExtent intersects: isTall isWide"truncation and round off""transforming" align:with: centeredBeneath: newRectFrom: squishedWithin: "copying"	) do: [:sel | Approved add: sel]."Color"	#("in class, instance creation" colorFrom: colorFromPixelValue:depth: gray: h:s:v: r:g:b: r:g:b:alpha: r:g:b:range:	"named colors" black blue brown cyan darkGray gray green lightBlue lightBrown lightCyan lightGray lightGreen lightMagenta lightOrange lightRed lightYellow magenta orange red transparent veryDarkGray veryLightGray veryVeryDarkGray veryVeryLightGray white yellow	"other"  indexedColors pixelScreenForDepth: quickHighLight:"access" alpha blue brightness green hue luminance red saturation"equality""queries" isBitmapFill isBlack isGray isSolidFill isTranslucent isTranslucentColor"transformations" alpha: dansDarker darker lighter mixed:with: muchLighter slightlyDarker slightlyLighter veryMuchLighter alphaMixed:with:"groups of shades" darkShades: lightShades: mix:shades: wheel:"printing" shortPrintString"other" colorForInsets rgbTriplet"conversions" asB3DColor asColor balancedPatternForDepth: bitPatternForDepth: closestPixelValue1 closestPixelValue2 closestPixelValue4 closestPixelValue8 dominantColor halfTonePattern1 halfTonePattern2 indexInMap: pixelValueForDepth: pixelWordFor:filledWith: pixelWordForDepth: scaledPixelValue32"private" privateAlpha privateBlue privateGreen privateRGB privateRed "copying"	) do: [:sel | Approved add: sel]."	For each selector that requires a block argument, add (selector argNum) 		to the set Blocks.""ourClasses := #(Object Boolean True False UndefinedObject Behavior ClassDescription Class Metaclass MethodContext BlockContext Message Magnitude Date Time Number Integer SmallInteger LargeNegativeInteger LargePositiveInteger Float Fraction Random Collection SequenceableCollection ArrayedCollection Bag Set Dictionary IdentityDictionary IdentitySet LinkedList Interval MappedCollection OrderedCollection SortedCollection Character String Symbol Array Array2D ByteArray FloatArray IntegerArray WordArray RunArray Stream PositionableStream ReadWriteStream WriteStream LookupKey Association Link Point Rectangle Color).ourClasses do: [:clsName | cls := Smalltalk at: clsName.	(cls selectors) do: [:aSel |		((Approved includes: aSel) or: [AddAndRemove includes: aSel]) ifTrue: [			(cls formalParametersAt: aSel) withIndexDo: [:tName :ind |				(tName endsWith: 'Block') ifTrue: [					Blocks add: (Array with: aSel with: ind)]]]]]."#((timesRepeat: 1 ) (indexOf:ifAbsent: 2 ) (pairsCollect: 1 ) (mergeSortFrom:to:by: 3 ) (ifNotNil:ifNil: 1 ) (ifNotNil:ifNil: 2 ) (ifNil: 1 ) (at:ifAbsent: 2 ) (ifNil:ifNotNil: 1 ) (ifNil:ifNotNil: 2 ) (ifNotNil: 1) (identityIndexOf:ifAbsent: 2 ) (sort: 1 ) (sortBlock: 1 ) (detectMax: 1 ) (repeatLastIfEmpty: 1 ) (allSubclassesWithLevelDo:startingLevel: 1 ) (keyAtValue:ifAbsent: 2 ) (in: 1 ) (ifTrue: 1 ) (or: 1 ) (select: 1 ) (inject:into: 2 )  (forPoint:closestSideDistLen: 2 ) (value:ifError: 2 ) (selectorsDo: 1 ) (removeAllSuchThat: 1 ) (keyAtIdentityValue:ifAbsent: 2 ) (detectMin: 1 ) (detect:ifNone: 1 ) (ifTrue:ifFalse: 1 ) (ifTrue:ifFalse: 2 ) (detect:ifNone: 2 ) (hasLiteralSuchThat: 1 ) (indexOfAnyOf:ifAbsent: 2 ) (reject: 1 ) (newRectFrom: 1 ) (removeKey:ifAbsent: 2 ) (at:ifPresent: 2 ) (associationAt:ifAbsent: 2 ) (withIndexCollect: 1 ) (repeatLast:ifEmpty: 2 ) (findLast: 1 ) (indexOf:startingAt:ifAbsent: 3 ) (remove:ifAbsent: 2 ) (ifFalse:ifTrue: 1 ) (ifFalse:ifTrue: 2 ) (caseOf:otherwise: 2 ) (count: 1 ) (collect: 1 ) (sort: 1 ) (and: 1 ) (asSortedCollection: 1 ) (with:collect: 2 ) (sourceCodeAt:ifAbsent: 2 ) (detect: 1 ) (collectWithIndex: 1 ) (compiledMethodAt:ifAbsent: 2 ) (detectSum: 1 ) (indexOfSubCollection:startingAt:ifAbsent: 3 ) (findFirst: 1 ) (sourceMethodAt:ifAbsent: 2 ) (collect:thenSelect: 1 ) (collect:thenSelect: 2 ) (select:thenCollect: 1 ) (select:thenCollect: 2 ) (ifFalse: 1 ) (indexOfAnyOf:startingAt:ifAbsent: 3 ) (indentationIfBlank: 1 ) ) do: [:anArray |	Blocks add: anArray].self initialize3."MethodFinder new initialize.MethodFinder new organizationFiltered: TranslucentColor class ""Do not forget class messages for each of these classes"! !!SystemWindow methodsFor: '*Polymorph-Widgets' stamp: 'Patrick 6/17/2017 15:48' prior: 63239943!justDroppedInto: aMorph event: anEvent	"Release the mouse focus as well."		isCollapsed		ifTrue: [			self position: ((self position max: 0@0) cellGrid: 8@8).			collapsedFrame := self bounds		]		ifFalse: [			fullFrame := self bounds.			self isTopWindow ifFalse: [self activate]		].		anEvent hand releaseMouseFocus.		^super justDroppedInto: aMorph event: anEvent! !!RenderTest methodsFor: 'tests' stamp: 'Patrick 6/17/2017 15:48' prior: 33768786!testDraw	| grid form cellLoc cell rendererClass renderer |	grid := Grid newOfSize: 30@30.	form := Form extent: 25@25 depth: Display depth.	cellLoc := 1@1.	cell := grid at: cellLoc.	rendererClass := CellRenderer modelClass.	renderer := rendererClass new.	renderer		position: cellLoc;		cellGrid: grid;		form: form.	renderer render.	form displayAt: 10@10.! !CellRenderer removeSelector: #grid:!Point removeSelector: #grid:!!CellRenderer methodsFor: 'accessing' stamp: 'Patrick 6/17/2017 15:48' prior: 33769499!cellGrid	^ cellGrid! !!CellRenderer methodsFor: 'accessing' stamp: 'Patrick 6/17/2017 15:49' prior: 33770362!cellGrid: anObject	cellGrid := anObject! !!FT2GlyphRenderer methodsFor: 'accessing' stamp: 'Patrick 6/17/2017 15:49'!cellForm	^ form! !!AthensBalloonSurface methodsFor: 'accessing' stamp: 'Patrick 6/17/2017 15:49'!cellForm	^ form! !!ClippingCanvas methodsFor: 'accessing' stamp: 'Patrick 6/17/2017 15:49'!cellForm	^canvas form! !!CellRenderer methodsFor: 'accessing' stamp: 'Patrick 6/17/2017 15:49'!cellForm	^ form! !!AthensCanvasWrapper methodsFor: 'accessing' stamp: 'Patrick 6/17/2017 15:49'!cellForm	^ self canvas surface asForm! !!BitmapFillStyle methodsFor: 'accessing' stamp: 'Patrick 6/17/2017 15:49'!cellForm	^form! !!ImageFillStyle methodsFor: 'accessing' stamp: 'Patrick 6/17/2017 15:49'!cellForm	"Answer the value of form"	^ form! !!OSWindowFormRenderer methodsFor: 'accessing' stamp: 'Patrick 6/17/2017 15:49'!cellForm		^ form! !!ImageMorph methodsFor: 'accessing' stamp: 'Patrick 6/17/2017 15:49'!cellForm	^ image! !!InfiniteForm methodsFor: 'fillstyle protocol' stamp: 'Patrick 6/17/2017 15:49'!cellForm	"Bitmap fills respond to #form"	^patternForm! !!HiRulerBuilder methodsFor: 'building' stamp: 'Patrick 6/17/2017 15:49'!cellForm	| surface form |	surface := self athensSurface.	form := Form 		extent: (surface width @ surface height) 		depth: 32.	form getCanvas 		drawImage: surface asForm 		at: 0@0.	^ form! !!NullCanvas methodsFor: 'accessing' stamp: 'Patrick 6/17/2017 15:49'!cellForm	^Form extent: self extent! !!ColorMappingCanvas methodsFor: 'accessing' stamp: 'Patrick 6/17/2017 15:49'!cellForm	^myCanvas form! !!AthensBalloonImagePaint methodsFor: 'accessing' stamp: 'Patrick 6/17/2017 15:49'!cellForm	^ form! !!Form methodsFor: 'accessing' stamp: 'Patrick 6/17/2017 15:49'!cellForm	"Answer the receiver's form.  For vanilla Forms, this degenerates to self.  Makes several methods that operate on both Forms and MaskedForms much more straightforward."	^ self! !!Canvas methodsFor: 'accessing' stamp: 'Patrick 6/17/2017 15:49'!cellForm	^ Display! !!ZnImageExampleDelegate methodsFor: 'accessing' stamp: 'Patrick 6/17/2017 15:49'!cellForm	^ self formForImageEntity: self image	! !!FormCanvas methodsFor: 'accessing' stamp: 'Patrick 6/17/2017 15:49'!cellForm	^ form! !!ImageMorph methodsFor: 'other' stamp: 'Patrick 6/17/2017 15:49' prior: 29356556!imageExport		^ self cellForm bits asArray! !!FormCanvas methodsFor: 'drawing-rectangles' stamp: 'Patrick 6/17/2017 15:49' prior: 25559197!fillRectangle: aRectangle basicFillStyle: aFillStyle	"Fill the given rectangle with the given, non-composite, fill style."		| pattern |	(aFillStyle isKindOf: InfiniteForm) ifTrue: [		^self infiniteFillRectangle: aRectangle fillStyle: aFillStyle	].	(aFillStyle isSolidFill) 		ifTrue:[^self fillRectangle: aRectangle color: aFillStyle asColor].	"We have a very special case for filling with infinite forms"	(aFillStyle isBitmapFill and:[aFillStyle origin = (0@0)]) ifTrue:[		pattern := aFillStyle cellForm.		(aFillStyle direction = (pattern width @ 0) 			and:[aFillStyle normal = (0@pattern height)]) ifTrue:[				"Can use an InfiniteForm"				^self fillRectangle: aRectangle color: (InfiniteForm with: pattern)].	].	"Use a BalloonCanvas instead"	self balloonFillRectangle: aRectangle fillStyle: aFillStyle.! !!FormCanvas methodsFor: 'drawing-rectangles' stamp: 'Patrick 6/17/2017 15:49' prior: 25584510!infiniteFillRectangle: aRectangle fillStyle: aFillStyle	| additionalOffset rInPortTerms clippedPort targetTopLeft clipOffset ex |	"this is a bit of a kludge to get the form to be aligned where I *think* it should be.	something better is needed, but not now"	additionalOffset := 0@0.	ex := aFillStyle cellForm extent.	rInPortTerms := (aRectangle intersect: aFillStyle boundingBox ifNone: ["nothing to draw" ^ self ]) translateBy: origin.	clippedPort := port clippedBy: rInPortTerms.	targetTopLeft := clippedPort clipRect topLeft truncateTo: ex.	clipOffset := rInPortTerms topLeft - targetTopLeft.	additionalOffset := (clipOffset \\ ex) - ex.	^aFillStyle		displayOnPort: clippedPort		offsetBy: additionalOffset! !!FormCanvas methodsFor: 'drawing-support' stamp: 'Patrick 6/17/2017 15:49' prior: 25565983!transformBy: aDisplayTransform clippingTo: aClipRect during: aBlock	 smoothing: cellSize	"Note: This method has been originally copied from TransformationMorph."	| innerRect patchRect sourceQuad warp start subCanvas rule|	(aDisplayTransform isPureTranslation) ifTrue:[		^aBlock value: (self copyOffset: aDisplayTransform offset negated truncated							clipRect: aClipRect)	].	"Prepare an appropriate warp from patch to innerRect"	innerRect := aClipRect.	patchRect := (aDisplayTransform globalBoundsToLocal: innerRect) truncated.	sourceQuad := (aDisplayTransform sourceQuadFor: innerRect)					collect: [:p | p - patchRect topLeft].	warp := self warpFrom: sourceQuad toRect: innerRect.	warp cellSize: cellSize.	"Render the submorphs visible in the clipping rectangle, as patchForm"	start := (self depth = 1)		"If this is true B&W, then we need a first pass for erasure."		ifTrue: [1] ifFalse: [2].	"If my depth has alpha, do blending rather than paint"	rule := self depth = 32 ifTrue: [Form blend] ifFalse: [Form paint].	start to: 2 do:		[:i | "If i=1 we first make a shadow and erase it for opaque whites in B&W"		subCanvas := self class extent: patchRect extent depth: self depth.		i=1	ifTrue: [ warp combinationRule: Form erase ]			ifFalse: [ warp combinationRule: rule].		subCanvas translateBy: patchRect topLeft negated			during:[:offsetCanvas| aBlock value: offsetCanvas].		warp sourceForm: subCanvas cellForm; warpBits.		warp sourceForm: nil.  subCanvas := nil "release space for next loop"]! !!AthensCanvasWrapper methodsFor: 'canvas accessing' stamp: 'Patrick 6/17/2017 15:49' prior: 17634589!contentsOfArea: aRectangle into: aForm	"this may conflict with current pathtransformations, but up to now"	"it works"	| bb |	self flush.	bb := BitBlt toForm: aForm.	bb		sourceForm: self cellForm;		combinationRule: Form over;		sourceX: aRectangle left + origin x;		sourceY: aRectangle top + origin y;		width: aRectangle width;		height: aRectangle height;		copyBits.	^ aForm! !!StringMorph methodsFor: '*Glamour-Morphic-Brick' stamp: 'Patrick 6/17/2017 15:49' prior: 62601901!brickImageForm: aColor	| canvas rect |	rect := self fullBounds origin extent: self measureContents.	canvas := Display defaultCanvasClass extent: rect extent depth: Display depth.	canvas cellForm fillColor: aColor. 	canvas translateBy: rect topLeft negated		during: [ :tempCanvas | tempCanvas fullDrawMorph: self ].	^ canvas cellForm offset: rect topLeft! !!StringMorph methodsFor: 'drawing' stamp: 'Patrick 6/17/2017 15:49' prior: 62617348!imageForm: depth forRectangle: rect	| canvas |	canvas := Display defaultCanvasClass extent: rect extent depth: depth.		backgroundColor isTransparent ifTrue: [ 		canvas cellForm fillColor: self theme backgroundColor.	].	canvas translateBy: rect topLeft negated		during:[:tempCanvas| tempCanvas fullDrawMorph: self].	^ canvas cellForm offset: rect topLeft! !!TabMorph methodsFor: 'protocol' stamp: 'Patrick 6/17/2017 15:49' prior: 63406869!softRetrieveMorph	| rotating oldIcon |	"Like retrieveMorph but done in a separated process"		morph ifNotNil: [ ^ self ].		retrievingProcess 		ifNotNil: [ 			"The retrieving process is already running, let's wait for its result"			retrievingProcess isTerminated 				ifFalse: [ ^ self ] ].		oldIcon := self icon ifNotNil: [ :i | i cellForm ].	rotating := self createAnimationProcess.	retrievingProcess := [ [		rotating resume.		"compute time consuming data"		morph := retrievingBlock value.		retrievingSemaphore signal.		UIManager default defer: [			self triggerEvent: #tabRefreshed with: self.			self icon: oldIcon]]	ensure: [		rotating terminate.		UIManager default defer: [self icon: oldIcon]	] ] forkAt: Processor activePriority - 2! !!FTPluggableIconListMorphAdaptorDataSource methodsFor: 'private' stamp: 'Patrick 6/17/2017 15:49' prior: 24708480!createCellText: aString icon: anIcon 	| text icon cell |	text := aString.	icon := anIcon.	cell := FTCellMorph new		cellInset: 5;		yourself.	icon		ifNotNil:			[ icon := icon asMorph.			icon class = ImageMorph				ifTrue: [ icon form: (icon cellForm scaledToSize: 16 @ 16) ]				ifFalse: [ icon bounds: (0 @ 0 corner: 16 @ 16) ].			cell addMorphBack: icon ].	cell addMorphBack: text asMorph.	^ cell! !!FTTreeDataSource class methodsFor: 'utils - morph creation' stamp: 'Patrick 6/17/2017 15:49' prior: 24783141!emptyMorph	| icon |	icon := (Smalltalk ui icons iconNamed: #emptyIcon) asMorph.	icon form: (icon cellForm scaledToSize: 16 @ 16).	^ icon! !!ThumbnailMorph methodsFor: 'display' stamp: 'Patrick 6/17/2017 15:49' prior: 64186992!drawMeOn: aCanvas 	"Draw a small view of a morph in another place.  Guard against infinite recursion if that morph has a thumbnail of itself inside.  Now also works if the thing to draw is a plain Form rather than a morph."	| viewedMorphBox scale c shrunkForm aWorld aFormOrMorph  |	super drawOn: aCanvas.	((aFormOrMorph := self formOrMorphToView) isForm) 		ifTrue: [^self drawForForm: aFormOrMorph on: aCanvas].	(((aFormOrMorph notNil and: [(aWorld := aFormOrMorph world) notNil]) 		and: [aWorld ~~ aFormOrMorph or: [lastFormShown isNil]]) 			and: [RecursionDepth + 1 < RecursionMax]) 			ifTrue: 				[RecursionDepth := RecursionDepth + 1.				viewedMorphBox := aFormOrMorph fullBounds.			scale :=  self scaleFor: viewedMorphBox in: self innerBounds.				c := Display defaultCanvasClass extent: viewedMorphBox extent							depth: aCanvas depth.				c translateBy: viewedMorphBox topLeft negated					during: 						[:tempCanvas | 						"recursion happens here"						tempCanvas fullDrawMorph: aFormOrMorph].				shrunkForm := c cellForm 							magnify: c cellForm boundingBox							by: scale							smoothing: 1.				lastFormShown := shrunkForm.				RecursionDepth := RecursionDepth - 1]			ifFalse: 				["This branch used if we've recurred, or if the thumbnail views a World that's already been rendered once, or if the referent is not in a world at the moment"				lastFormShown ifNotNil: [shrunkForm := lastFormShown]].	shrunkForm ifNotNil: 			[aCanvas paintImage: shrunkForm				at: self center - shrunkForm boundingBox center]! !!ThumbnailMorph methodsFor: 'display' stamp: 'Patrick 6/17/2017 15:49' prior: 64181591!drawForForm: aForm on: aCanvas	"Draw a small view of the given form on the canvas"	| scale shrunkForm viewedObjectBox interimCanvas |	viewedObjectBox := aForm boundingBox.	scale :=  self scaleFor: viewedObjectBox in: self innerBounds.	interimCanvas := Display defaultCanvasClass extent: viewedObjectBox extent depth: aCanvas depth.	interimCanvas translateBy: viewedObjectBox topLeft negated 				during: [:tempCanvas | tempCanvas drawImage: aForm at: 0@0].	shrunkForm := interimCanvas cellForm magnify: interimCanvas cellForm boundingBox by: scale smoothing: 1.	lastFormShown := shrunkForm.	aCanvas paintImage: shrunkForm at: self center - shrunkForm boundingBox center! !!FT2GlyphRenderer methodsFor: 'initailize-release' stamp: 'Patrick 6/17/2017 15:49' prior: 24556168!initForFont: aFont surface: aSurface	self assert: (aFont class == FreeTypeFont).		surface := aSurface.	font := aFont.	slot := SimpleTextGlyphInfo new.		pixelSize := font pixelSize rounded.	blt := BitBlt toForm: surface cellForm.	self loadSurfaceTransform.	colorMap := Bitmap new: 256.		blt 		sourceForm: form;		sourceX: 0;		sourceY: 0;		destOrigin: 0@0;		sourceOrigin: 0@0;		halftoneForm: nil;		combinationRule: 24;		width: form width;		height: form height;		colorMap: colorMap;		clipRect: surface clipRect.		translation := IntegerArray new: 2.! !!RubSegmentMorph methodsFor: 'private' stamp: 'Patrick 6/17/2017 15:49' prior: 58217367!borderForm	"A form must be created for drawing the border whenever the borderColor is translucent."	| borderCanvas |	borderForm ifNotNil: [^ borderForm].	borderCanvas := (Display defaultCanvasClass extent: bounds extent depth: 1)		asShadowDrawingCanvas: Color black.	borderCanvas translateBy: bounds topLeft negated		during:[:tempCanvas| self drawBorderOn: tempCanvas].	borderForm := borderCanvas cellForm.	^ borderForm! !!Canvas methodsFor: '*GT-InspectorExtensions-Core' stamp: 'Patrick 6/17/2017 15:49' prior: 18848126!gtInspectorFormIn: composite	<gtInspectorPresentationOrder: 40>	^ self cellForm gtInspectorFormIn: composite ! !!PluggableCanvas methodsFor: 'drawing-rectangles' stamp: 'Patrick 6/17/2017 15:49' prior: 54565089!fillRectangle: aRectangle basicFillStyle: aFillStyle	"Fill the given rectangle with the given, non-composite, fill style."	| pattern |	(aFillStyle isKindOf: InfiniteForm) ifTrue: [		^self infiniteFillRectangle: aRectangle fillStyle: aFillStyle	].	aFillStyle isSolidFill ifTrue:[ ^self fillRectangle: aRectangle color: aFillStyle asColor].	"We have a very special case for filling with infinite forms"	(aFillStyle isBitmapFill and:[aFillStyle origin = (0@0)]) ifTrue:[		pattern := aFillStyle cellForm.		(aFillStyle direction = (pattern width @ 0) 			and:[aFillStyle normal = (0@pattern height)]) ifTrue:[				"Can use an InfiniteForm"				^self fillRectangle: aRectangle color: (InfiniteForm with: pattern)].	].	"Use a BalloonCanvas instead"	self balloonFillRectangle: aRectangle fillStyle: aFillStyle.! !!TextContainer methodsFor: 'private' stamp: 'Patrick 6/17/2017 15:49' prior: 63780950!computeShadow	| canvas bounds theText |	bounds := self bounds.	theText := textMorph.	canvas := (Display defaultCanvasClass extent: bounds extent depth: 1)		asShadowDrawingCanvas: Color black.	canvas translateBy: bounds topLeft negated during:[:tempCanvas| | back |		self fillsOwner			ifTrue: [tempCanvas fullDrawMorph: (theText owner copyWithoutSubmorph: theText)]			ifFalse: [tempCanvas fillRectangle: textMorph bounds color: Color black].		self avoidsOcclusions ifTrue:			[back := tempCanvas cellForm deepCopy.			tempCanvas cellForm fillWhite.			theText owner submorphsInFrontOf: theText do:				[:m | (textMorph isLinkedTo: m)					ifTrue: []					ifFalse: [tempCanvas fullDrawMorph: m]].			back displayOn: tempCanvas cellForm at: 0@0 rule: Form reverse].	].	shadowForm := canvas cellForm offset: bounds topLeft.	vertProfile := shadowForm  yTallyPixelValue: 1 orNot: false.	rectangleCache := Dictionary new.	^ shadowForm! !!OSWindowWorldState methodsFor: 'accessing' stamp: 'Patrick 6/17/2017 15:49' prior: 53314801!doDeferredUpdatingFor: aWorld        "If this platform supports deferred updates, then make my canvas be the Display (or a rectangular portion of it), set the Display to deferred update mode, and answer true. Otherwise, do nothing and answer false. One can set the class variable DisableDeferredUpdates to true to completely disable the deferred updating feature."	display ifNil: [ ^ false ].	(display deferUpdates: true) ifNil: [^ false].  "deferred updates not supported"	(canvas notNil and: [canvas cellForm == display]) ifFalse: [			aWorld viewBox: display boundingBox.    "do first since it may clear canvas"			self canvas: (display getCanvas copyClipRect: display boundingBox)].	^ true! !!OSWindowWorldState methodsFor: 'as yet unclassified' stamp: 'Patrick 6/17/2017 15:49' prior: 53313587!assuredCanvas	(canvas isNil or: [(canvas extent ~= viewBox extent) or: [canvas cellForm depth ~= Display depth]])		ifTrue:			["allocate a new offscreen canvas the size of the window"			self canvas: (display defaultCanvasClass extent: viewBox extent)].	^ self canvas! !!SelectionMorph methodsFor: 'drawing' stamp: 'Patrick 6/17/2017 15:49' prior: 59517742!drawOn: aCanvas	| canvas form1 form2 box |	super drawOn: aCanvas.	box := self bounds.	selectedItems do: [:m | box := box merge: m fullBounds].	box := box expandBy: 1.	canvas := Display defaultCanvasClass extent: box extent depth: 8.	canvas translateBy: box topLeft negated		during: [:tempCanvas | selectedItems do: [:m | tempCanvas fullDrawMorph: m]].	form1 := (Form extent: box extent) copyBits: (0@0 extent: box extent) from: canvas cellForm at: 0@0 colorMap: (Color maskingMap: 8).	form2 := Form extent: box extent.	(0@0) fourNeighbors do: [:d | form1 displayOn: form2 at: d rule: Form under].	form1 displayOn: form2 at: 0@0 rule: Form erase.	aCanvas stencil: form2		at: box topLeft		sourceRect: form2 boundingBox		color: self borderColor! !!BalloonEngine methodsFor: 'drawing' stamp: 'Patrick 6/17/2017 15:49' prior: 18032847!registerFill: aFillStyle	"Register the given fill style."	| theForm |	aFillStyle ifNil:[^0].	aFillStyle isSolidFill 		ifTrue:[^aFillStyle scaledPixelValue32].	aFillStyle isGradientFill ifTrue:[		^self primAddGradientFill: aFillStyle pixelRamp			from: aFillStyle origin			along: aFillStyle direction			normal: aFillStyle normal			radial: aFillStyle isRadialFill		].	aFillStyle isBitmapFill ifTrue:[		theForm := aFillStyle cellForm asSourceForm.		theForm unhibernate.		forms := forms copyWith: theForm.		^self primAddBitmapFill: theForm				colormap: (theForm colormapIfNeededForDepth: 32)				tile: aFillStyle isTiled				from: aFillStyle origin				along: aFillStyle direction				normal: aFillStyle normal				xIndex: forms size].	^0! !!IconicButton methodsFor: 'accessing' stamp: 'Patrick 6/17/2017 15:49' prior: 29297450!labelGraphic	^ graphicalMorph cellForm! !!ImageFillStyle methodsFor: 'comparing' stamp: 'Patrick 6/17/2017 15:49' prior: 29352994!hash	"Hash is implemented because #= is implemented."		^super hash bitXor: self cellForm hash! !!ImageFillStyle methodsFor: '*Polymorph-Widgets' stamp: 'Patrick 6/17/2017 15:49' prior: 29352375!fillRectangle: aRectangle on: aCanvas	"Fill the given rectangle on the given canvas with the receiver."		self extent		ifNil: [aCanvas				translucentImage: self cellForm				at: self origin]		ifNotNil: [aCanvas clipBy: (self origin + self offset extent: self extent) during: [:c |					c						translucentImage: self cellForm						at: self origin]]! !!ImageFillStyle methodsFor: 'comparing' stamp: 'Patrick 6/17/2017 15:49' prior: 29352796!= anOrientedFillStyle	"Answer whether equal."	^super = anOrientedFillStyle		and: [self cellForm = anOrientedFillStyle cellForm]! !!GLMPagerPanePreviewMorph methodsFor: 'actions' stamp: 'Patrick 6/17/2017 15:49' prior: 26829094!updateFor: aMorph	thumbnail := aMorph taskThumbnailOfSize: self maxExtent.	self image: thumbnail cellForm.		self position: position - ((thumbnail width / 2)@(thumbnail height + self defaultBottomMargin + self defaultBorderWidth)).! !!ClippingCanvas methodsFor: 'accessing' stamp: 'Patrick 6/17/2017 15:49' prior: 19546671!form	^canvas cellForm! !!ClippingCanvas methodsFor: 'accessing' stamp: 'Patrick 6/17/2017 15:49' prior: 33784999!cellForm	^canvas cellForm! !!TabActionButtonMorph methodsFor: 'drawing' stamp: 'Patrick 6/17/2017 15:49' prior: 63335995!drawOn: aCanvas	super drawOn: aCanvas.	icon ifNil: [ ^ self ].	icon cellForm ifNil: [ ^ self ].	aCanvas		translucentImage: icon cellForm		at: self topLeft! !!Form methodsFor: '*Morphic-Base-Support' stamp: 'Patrick 6/17/2017 15:49' prior: 25500686!stencil	"return a 1-bit deep, black-and-white stencil of myself"	| canvas |	canvas := FormCanvas extent: self extent depth: 1.	canvas fillColor: (Color white).	canvas stencil: self at: 0@0  				sourceRect: (Rectangle origin: 0@0 corner: self extent) color: Color black.	^ canvas cellForm! !!PolygonMorph methodsFor: 'private' stamp: 'Patrick 6/17/2017 15:49' prior: 54895889!borderForm	"A form must be created for drawing the border whenever the borderColor is translucent."	| borderCanvas |	borderForm ifNotNil: [^ borderForm].	borderCanvas := (Display defaultCanvasClass extent: bounds extent depth: 1)		asShadowDrawingCanvas: Color black.	borderCanvas translateBy: bounds topLeft negated		during:[:tempCanvas| self drawBorderOn: tempCanvas].	borderForm := borderCanvas cellForm.	self arrowForms do:		[:f |  "Eliminate overlap between line and arrowheads if transparent."		borderForm copy: f boundingBox from: f to: f offset - self position rule: Form erase].	^ borderForm! !!HiRulerController methodsFor: 'private-refreshing' stamp: 'Patrick 6/17/2017 15:49' prior: 28695738!buildRulerForm	rulerForm := 		rulerBuilder			values: nodes;			cellForm! !!HandMorph methodsFor: 'drawing' stamp: 'Patrick 6/17/2017 15:49' prior: 28506863!shadowForm	"Return a 1-bit shadow of my submorphs.  Assumes submorphs is not empty"	| bnds canvas |	bnds := Rectangle merging: (submorphs collect: [:m | m fullBounds]).	canvas := (Display defaultCanvasClass extent: bnds extent depth: 1) 		asShadowDrawingCanvas: Color black.	canvas translateBy: bnds topLeft negated		during:[:tempCanvas| self drawSubmorphsOn: tempCanvas].	^ canvas cellForm offset: bnds topLeft! !!HandMorph methodsFor: 'drawing' stamp: 'Patrick 6/17/2017 15:49' prior: 28491283!savePatchFrom: aCanvas 	"Save the part of the given canvas under this hand as a Form and return its bounding rectangle."	"Details: The previously used patch Form is recycled when possible to reduce the burden on storage management."	| damageRect myBnds |	damageRect := myBnds := self fullBounds.	savedPatch ifNotNil: 			[damageRect := myBnds merge: (savedPatch offset extent: savedPatch extent)].	(savedPatch isNil or: [savedPatch extent ~= myBnds extent]) 		ifTrue: 			["allocate new patch form if needed"			savedPatch := aCanvas cellForm allocateForm: myBnds extent].	aCanvas contentsOfArea: (myBnds translateBy: aCanvas origin)		into: savedPatch.	savedPatch offset: myBnds topLeft.	^damageRect! !!HandMorph methodsFor: 'drawing' stamp: 'Patrick 6/17/2017 15:49' prior: 28499046!updateCacheCanvas: aCanvas 	"Update the cached image of the morphs being held by this hand."	"Note: The following is an attempt to quickly get out if there's no change"	| subBnds rectList nPix |	subBnds := Rectangle merging: (submorphs collect: [:m | m fullBounds]).	rectList := damageRecorder invalidRectsFullBounds: subBnds.	damageRecorder reset.	(rectList isEmpty 		and: [cacheCanvas notNil and: [cacheCanvas extent = subBnds extent]]) 			ifTrue: [^self].	"Always check for real translucency -- can't be cached in a form"	self submorphsDo: 			[:m | 			m wantsToBeCachedByHand 				ifFalse: 					[cacheCanvas := nil.					cachedCanvasHasHoles := true.					^self]].	(cacheCanvas isNil or: [cacheCanvas extent ~= subBnds extent]) 		ifTrue: 			[cacheCanvas := (aCanvas allocateForm: subBnds extent) getCanvas.			cacheCanvas translateBy: subBnds origin negated				during: [:tempCanvas | self drawSubmorphsOn: tempCanvas].			self submorphsDo: 					[:m | 					(m areasRemainingToFill: subBnds) isEmpty 						ifTrue: [^cachedCanvasHasHoles := false]].			nPix := cacheCanvas cellForm tallyPixelValues first.			"--> begin rounded corners hack <---"			cachedCanvasHasHoles := (nPix = 48 						and: [submorphs size = 1 and: [submorphs first wantsRoundedCorners]]) 							ifTrue: [false]							ifFalse: [nPix > 0].			"--> end rounded corners hack <---"			^self].	"incrementally update the cache canvas"	cacheCanvas translateBy: subBnds origin negated		during: 			[:cc | 			rectList do: 					[:r | 					cc clipBy: r						during: 							[:c | 							c fillColor: Color transparent.							self drawSubmorphsOn: c]]]! !!HandMorph methodsFor: 'drawing' stamp: 'Patrick 6/17/2017 15:49' prior: 28523529!fullDrawOn: aCanvas 	"A HandMorph has unusual drawing requirements:		1. the hand itself (i.e., the cursor) appears in front of its submorphs		2. morphs being held by the hand cast a shadow on the world/morphs below	The illusion is that the hand plucks up morphs and carries them above the world."	"Note: This version caches an image of the morphs being held by the hand for	 better performance. This cache is invalidated if one of those morphs changes."	| disableCaching subBnds roundCorners rounded |	self visible ifFalse: [^self].	(aCanvas isVisible: self fullBounds) ifFalse: [^self].	disableCaching := false.	disableCaching 		ifTrue: 			[self nonCachingFullDrawOn: aCanvas.			^self].	submorphs isEmpty 		ifTrue: 			[cacheCanvas := nil.			^self drawOn: aCanvas].	"just draw the hand itself"	subBnds := Rectangle merging: (submorphs collect: [:m | m fullBounds]).	self updateCacheCanvas: aCanvas.	(cacheCanvas isNil 		or: [cachedCanvasHasHoles and: [cacheCanvas depth = 1]]	)ifTrue: ["could not use caching due to translucency; do full draw"		self nonCachingFullDrawOn: aCanvas.		^self	].	"--> begin rounded corners hack <---"	roundCorners := cachedCanvasHasHoles == false 				and: [submorphs size = 1 and: [submorphs first wantsRoundedCorners]].	roundCorners 		ifTrue: 			[rounded := submorphs first.			aCanvas asShadowDrawingCanvas translateBy: self shadowOffset				during: 					[:shadowCanvas | 					shadowCanvas roundCornersOf: rounded						during: 							[(subBnds areasOutside: (rounded boundsWithinCorners 										translateBy: self shadowOffset negated)) 								do: [:r | shadowCanvas fillRectangle: r color: Color black]]].			aCanvas roundCornersOf: rounded				during: 					[aCanvas 						drawImage: cacheCanvas cellForm						at: subBnds origin						sourceRect: cacheCanvas cellForm boundingBox].			^self drawOn: aCanvas	"draw the hand itself in front of morphs"].	"--> end rounded corners hack <---"	"draw the shadow"	(submorphs anySatisfy: [:m | m handlesDropShadowInHand not]) ifTrue: [		aCanvas asShadowDrawingCanvas translateBy: self shadowOffset		during: 			[:shadowCanvas | 			cachedCanvasHasHoles 				ifTrue: 					["Have to draw the real shadow of the form"					shadowCanvas paintImage: cacheCanvas cellForm at: subBnds origin]				ifFalse: 					["Much faster if only have to shade the edge of a solid rectangle"					(subBnds areasOutside: (subBnds translateBy: self shadowOffset negated)) 						do: [:r | shadowCanvas fillRectangle: r color: Color black]]]].	"draw morphs in front of the shadow using the cached Form"	cachedCanvasHasHoles 		ifTrue: [aCanvas paintImage: cacheCanvas cellForm at: subBnds origin]		ifFalse: 	[			aCanvas 			drawImage: cacheCanvas cellForm			at: subBnds origin			sourceRect: cacheCanvas cellForm boundingBox		].	self drawOn: aCanvas	"draw the hand itself in front of morphs"! !!AthensTextRenderTest class methodsFor: 'as yet unclassified' stamp: 'Patrick 6/17/2017 15:49' prior: 17768624!test4	|  t  c surf |"t := '12345 pi kl mn op gj the text must flow' "t := 'Unfortunately this class has not been documented yet.' asText .	t addAttribute: (TextFontReference toFont: (LogicalFont familyName: 'Tahoma' pointSize: 10)).	t addAttribute: (TextColor new color: Color red) from: 3 to: 10.	c := AthensTextComposer scan: t for: AthensTextScanner new.	surf := self surfaceClass extent: Display extent.		surf drawDuring: [ :canvas | 				canvas setPaint: (Color yellow alpha: 0.5).		canvas drawShape: (0@0 corner: 300@300).		canvas pathTransform scaleBy: 1.		1 to: 20 do: [:i |			c renderOn: canvas.			canvas pathTransform translateBy: 0.1@10.		]	].	Display getCanvas translucentImage: surf cellForm at: 100@100! !!AthensTextRenderTest class methodsFor: 'as yet unclassified' stamp: 'Patrick 6/17/2017 15:49' prior: 17775013!test5	|  t  c surf |"t := '12345 pi kl mn op gj the text must flow' "t := 'U' asText .	t addAttribute: (TextFontReference toFont: (LogicalFont familyName: 'Tahoma' pointSize: 10)).	c := AthensTextComposer scan: t for: AthensTextScanner new.	surf := self surfaceClass extent: Display extent.	surf drawDuring: [ :canvas | 				canvas setPaint: (Color yellow alpha: 0.5).		canvas drawShape: (0@0 corner: 300@300).		canvas pathTransform scaleBy: 1.		1 to: 20 do: [:i |			c renderOn: canvas.			canvas pathTransform translateBy: 10@0.1.		]	].	Display getCanvas translucentImage: surf cellForm at: 100@100! !!AthensTextRenderTest class methodsFor: 'as yet unclassified' stamp: 'Patrick 6/17/2017 15:49' prior: 17769473!test3	|  t  c surf |"t := '12345 pi kl mn op gj the text must flow' "t := 'qW' asText .	t addAttribute: (TextFontReference toFont: (LogicalFont familyName: 'Arial' pointSize: 8)).	c := AthensTextComposer scan: t for: AthensTextScanner new.	surf := self surfaceClass extent: Display extent.	surf drawDuring: [ :canvas | 				canvas setPaint: (Color yellow alpha: 0.5).		canvas drawShape: (0@0 corner: 300@300).		canvas pathTransform translateBy: 200@200.				"		canvas pathTransform rotateByDegrees: 90. "		canvas pathTransform scaleBy: 4.	1 to: 10 do: [:i |				canvas setPaint: (Color blue alpha: 0.5).		canvas drawShape: (0@0 corner: 100@10).				c renderOn: canvas.				canvas pathTransform rotateByDegrees: 5. 		canvas pathTransform translateBy: 0 @11 .	].	].	Display getCanvas translucentImage: surf cellForm at: 100@100! !!AthensTextRenderTest class methodsFor: 'as yet unclassified' stamp: 'Patrick 6/17/2017 15:49' prior: 17773633!test2	|  t  c surf |	t := self testText. 	t addAttribute: (AthensTextBackground new color: (Color green alpha: 0.3 )) from: 1 to: 267.	c := AthensTextComposer scan: t for: AthensTextScanner new.	surf := self surfaceClass extent: Display extent.		surf drawDuring: [ :canvas | 				canvas setPaint: (Color white ).		canvas drawShape: (0@0 corner: 300@300).		canvas pathTransform scaleBy: 1.		canvas pathTransform translateX: 300 Y: 0.		canvas setPaint: Color yellow.		canvas pathTransform rotateByDegrees: 0.		c renderOn: canvas	].	Display getCanvas translucentImage: surf cellForm at: 0@0! !!AlphaImageMorph methodsFor: 'geometry' stamp: 'Patrick 6/17/2017 15:49' prior: 17206890!imageRectangleFromDisplayRectangle: aRectangle	"Answer a rectangle in (original) image coordinates that	corresponds to the given rectangle (in relative display coordinates)."	|db|	db := self displayBounds .	db area = 0 ifTrue: [^db].	self layout == #scaledAspect ifTrue: [		^((aRectangle translateBy: self layoutPosition negated)			scaleBy: self cellForm width / db width) rounded].	self layout == #scaled ifTrue: [		^((aRectangle translateBy: self layoutPosition negated)			scaleBy: (self cellForm width / db width) @ (self cellForm height / db height)) rounded].	^self scale = 1		ifTrue: [aRectangle translateBy: self layoutPosition negated]		ifFalse: [((aRectangle translateBy: self layoutPosition negated)					scaleBy: 1 / self scale) rounded]! !!AlphaImageMorph methodsFor: 'accessing' stamp: 'Patrick 6/17/2017 15:49' prior: 17198706!scaledImage	"Answer the image scaled as required."		|i|	i := self cellForm.	i boundingBox area = 0 ifTrue: [^i].	(self layout == #scaled and: [self extent ~= i extent]) ifTrue: [		^i magnify: i boundingBox by: (self extent / i extent) smoothing: 2].	(self layout == #scaledAspect and: [self extent ~= i extent]) ifTrue: [		^self width / i width > (self height / i height)			ifTrue: [i magnify: i boundingBox by: (self height / i height) smoothing: 2]			ifFalse: [i magnify: i boundingBox by: (self width / i width) smoothing: 2]].	self scale ~= 1 ifTrue: [		^i magnify: i boundingBox by: self scale smoothing: 2].	^i! !!AlphaImageMorph methodsFor: 'geometry' stamp: 'Patrick 6/17/2017 15:49' prior: 17200161!optimalExtent	"Answer the optimal extent for the receiver."		^self cellForm extent * self scale + (self borderWidth * 2)! !!AlphaImageMorph methodsFor: 'accessing' stamp: 'Patrick 6/17/2017 15:49' prior: 17205426!imageExtent	"Answer the extent of the original form."	^self cellForm extent! !!ColorMappingCanvas methodsFor: 'accessing' stamp: 'Patrick 6/17/2017 15:49' prior: 19778944!form	^myCanvas cellForm! !!ColorMappingCanvas methodsFor: 'accessing' stamp: 'Patrick 6/17/2017 15:49' prior: 33786251!cellForm	^myCanvas cellForm! !!ZnImageExampleDelegate methodsFor: 'accessing' stamp: 'Patrick 6/17/2017 15:49' prior: 85343737!html	^ ZnHtmlOutputStream streamContents: [ :html |		 html page: 'Image' do: [			html 				tag: #src attributes: #(src. 'image?raw=true');				tag: #br;				tag: #cellForm attributes: #(enctype 'multipart/form-data' action image method POST) do: [					html						tag: #h3 with: 'Change the image:';						tag: #input attributes: #(type file name file);						tag: #input attributes: #(type submit value Upload) ] ] ]! !!BitmapFillStyle class methodsFor: 'instance creation' stamp: 'Patrick 6/17/2017 15:49' prior: 18410451!fromUser	| fill |	fill := self form: Form fromUser.	fill origin: 0@0.	fill direction: fill cellForm width @ 0.	fill normal: 0 @ fill cellForm height.	fill tileFlag: true. "So that we can fill arbitrary objects"	^fill! !!WorldState methodsFor: 'canvas' stamp: 'Patrick 6/17/2017 15:49' prior: 84677015!assuredCanvas	(canvas isNil or: [(canvas extent ~= viewBox extent) or: [canvas cellForm depth ~= Display depth]])		ifTrue:			["allocate a new offscreen canvas the size of the window"			self canvas: (Display defaultCanvasClass extent: viewBox extent)].	^ self canvas! !!WorldState methodsFor: 'update cycle' stamp: 'Patrick 6/17/2017 15:49' prior: 84688609!doDeferredUpdatingFor: aWorld        "If this platform supports deferred updates, then make my canvas be the Display (or a rectangular portion of it), set the Display to deferred update mode, and answer true. Otherwise, do nothing and answer false. One can set the class variable DisableDeferredUpdates to true to completely disable the deferred updating feature."	(Display deferUpdates: true) ifNil: [^ false].  "deferred updates not supported"	(canvas notNil and: [canvas cellForm == Display]) ifFalse: [			aWorld viewBox: Display boundingBox.    "do first since it may clear canvas"			self canvas: (Display getCanvas copyClipRect: Display boundingBox)].	^ true! !!AthensWorldState methodsFor: 'update cycle' stamp: 'Patrick 6/17/2017 15:49' prior: 17796266!doDeferredUpdatingFor: aWorld	"overwritten from WorldState to use ower own display"	(self display deferUpdates: true) ifNil: [ ^ false ].	(canvas notNil and: [ canvas cellForm == Display ])		ifFalse: [ 			aWorld viewBox: self display boundingBox.	"do first since it may clear canvas"			self canvas: (self display getCanvas copyClipRect: self display boundingBox) ].	^ true! !!OSVMWindowHandle methodsFor: 'accessing' stamp: 'Patrick 6/17/2017 15:49' prior: 53214851!screenDepth	<primitive: #primitiveScreenDepth >	^ self renderer cellForm depth! !!ZnDefaultServerDelegate methodsFor: 'responses' stamp: 'Patrick 6/17/2017 15:49' prior: 85223242!formTest3: request	| contents filename contentType page |	contents := filename := contentType := ''.	(request hasEntity and: [ request contentType matches: ZnMimeType multiPartFormData ])		ifTrue: [ 			(request entity partNamed: #file ifNone: [ nil ]) 				ifNotNil: [ :part |					filename := part fileName.					contents := part contents.					contentType := part  contentType.					contentType isBinary ifTrue: [ contents := contents hex ] ] ].	page := ZnHtmlOutputStream streamContents: [ :html |		html page: 'Form Test 3' do: [ 			html 				tag: #cellForm 				attributes: #(action 'form-test-3' 'accept-charset' 'utf-8' 									enctype 'multipart/form-data' method POST) 				do: [ 					html 						str: 'File'; space;						tag: #input attributes: #(type file name file); space;						tag: #input attributes: #(type submit) ];				tag: #p do: [ html str: 'filename = '; str: filename ];				tag: #p do: [ html str: 'content-type = '; str: contentType asString ];				tag: #p do: [ html str: 'contents = '; str: contents asString ] ] ].	^ ZnResponse ok: (ZnEntity html: page)! !!ZnDefaultServerDelegate methodsFor: 'responses' stamp: 'Patrick 6/17/2017 15:49' prior: 85216228!formTest2: request	| input page |	input := 'input'.	(request hasEntity and: [ request contentType matches: ZnMimeType applicationFormUrlEncoded  ])		ifTrue: [ input := request entity at: #input ifAbsent: [ 'input' ] ].	page := ZnHtmlOutputStream streamContents: [ :html |		html page: 'Form Test 2' do: [ 			html 				tag: #cellForm 				attributes: #(action 'form-test-2' 'accept-charset' 'utf-8' method POST) 				do: [ 					html 						str: 'Input'; space;						tag: #input attributes: { #type. #input. #name. #input. #value. input }; space;						tag: #input attributes: #(type submit); 						str: 'for input'; space; tag: #em with: input ] ] ].	^ ZnResponse ok: (ZnEntity html: page)! !!ZnDefaultServerDelegate methodsFor: 'responses' stamp: 'Patrick 6/17/2017 15:49' prior: 85225455!formTest1: request	| input page |	input := request uri queryAt: #input ifAbsent: [ 'input' ].	page := ZnHtmlOutputStream streamContents: [ :html |		html page: 'Form Test 1' do: [ 			html 				tag: #cellForm 				attributes: #(action 'form-test-1' 'accept-charset' 'utf-8' method GET) 				do: [ 					html 						str: 'Input'; space;						tag: #input attributes: { #type. #input. #name. #input. #value. input }; space;						tag: #input attributes: #(type submit); 						str: 'for input'; space; tag: #em with: input ] ] ].	^ ZnResponse ok: (ZnEntity html: page)! !!Morph methodsFor: 'drawing' stamp: 'Patrick 6/17/2017 15:49' prior: 51547179!shadowForm	"Return a form representing the 'shadow' of the receiver - e.g., all pixels that are occupied by the receiver are one, all others are zero."	| canvas |	canvas := (Display defaultCanvasClass extent: self fullBounds extent depth: 1)				asShadowDrawingCanvas: Color black. "Color black represents one for 1bpp"	canvas translateBy: bounds topLeft negated		during:[:tempCanvas| tempCanvas fullDrawMorph: self].	^ canvas cellForm offset: bounds topLeft! !!Morph methodsFor: 'drawing' stamp: 'Patrick 6/17/2017 15:49' prior: 51434333!imageForm: depth forRectangle: rect	| canvas |	canvas := Display defaultCanvasClass extent: rect extent depth: depth.	canvas translateBy: rect topLeft negated		during:[:tempCanvas| tempCanvas fullDrawMorph: self].	^ canvas cellForm offset: rect topLeft! !!Morph methodsFor: 'drawing' stamp: 'Patrick 6/17/2017 15:49' prior: 51390417!imageForm: depth backgroundColor: aColor forRectangle: rect	| canvas |	canvas := Display defaultCanvasClass extent: rect extent depth: depth.	canvas translateBy: rect topLeft negated		during:[:tempCanvas| 			tempCanvas fillRectangle: rect color: aColor.			tempCanvas fullDrawMorph: self].	^ canvas cellForm offset: rect topLeft! !FT2GlyphRenderer removeSelector: #form!AthensBalloonSurface removeSelector: #form!ClippingCanvas removeSelector: #form!CellRenderer removeSelector: #form!AthensCanvasWrapper removeSelector: #form!BitmapFillStyle removeSelector: #form!ImageFillStyle removeSelector: #form!OSWindowFormRenderer removeSelector: #form!ImageMorph removeSelector: #form!InfiniteForm removeSelector: #form!HiRulerBuilder removeSelector: #form!NullCanvas removeSelector: #form!ColorMappingCanvas removeSelector: #form!AthensBalloonImagePaint removeSelector: #form!Form removeSelector: #form!Canvas removeSelector: #form!ZnImageExampleDelegate removeSelector: #form!FormCanvas removeSelector: #form!!CellRenderer methodsFor: 'accessing' stamp: 'Patrick 6/17/2017 15:49' prior: 33785097!cellForm	^ cellForm! !!AthensBalloonSurface methodsFor: 'accessing' stamp: 'Patrick 6/17/2017 15:49'!cellForm: aForm	form := aForm.	mask := Form extent: form extent depth: 1. 	engine := AthensBalloonEngine new.	engine bitBlt: (GrafPort toForm: form) .	engine clipRect: (0@0 extent: form extent).	engine edgeTransform: pathTransform.	engine destOffset: 0@0.	engine reset.! !!ImageFillStyle methodsFor: 'accessing' stamp: 'Patrick 6/17/2017 15:49'!cellForm: aForm	"Set the value of form"	form := aForm.	self direction: aForm extent! !!CellRenderer methodsFor: 'accessing' stamp: 'Patrick 6/17/2017 15:49'!cellForm: anObject	form := anObject! !!BitmapFillStyle methodsFor: 'accessing' stamp: 'Patrick 6/17/2017 15:49'!cellForm: aForm	form := aForm! !!OSWindowFormRenderer methodsFor: 'accessing' stamp: 'Patrick 6/17/2017 15:49'!cellForm: anObject		form := anObject! !!ImageMorph methodsFor: 'accessing' stamp: 'Patrick 6/17/2017 15:49'!cellForm: aForm	image := aForm. 	super extent: (2 * self borderWidth) asPoint + image extent.	self changed! !!InfiniteForm methodsFor: 'private' stamp: 'Patrick 6/17/2017 15:49'!cellForm: aForm	patternForm := aForm! !!BitmapFillStyle class methodsFor: 'instance creation' stamp: 'Patrick 6/17/2017 15:49'!cellForm: aForm	^self new form: aForm! !!OSVMFormRenderer methodsFor: 'accessing' stamp: 'Patrick 6/17/2017 15:49'!cellForm: aForm	super form: aForm.	self beDisplay! !!AthensBalloonImagePaint methodsFor: 'accessing' stamp: 'Patrick 6/17/2017 15:49'!cellForm: anObject	form := anObject.	origin := 0@0.	direction := form extent x @0.! !!ImageFillStyle class methodsFor: 'as yet unclassified' stamp: 'Patrick 6/17/2017 15:49'!cellForm: aForm	"Answer a new instance of the receiver with the given form."	^self new form: aForm! !!OSNullWindowHandle methodsFor: 'factory' stamp: 'Patrick 6/17/2017 15:49' prior: 53097632!newFormRenderer: form	^ renderer := OSNullFormRenderer new cellForm: form! !!ImageMorph methodsFor: 'initialization' stamp: 'Patrick 6/17/2017 15:49' prior: 29357254!initialize	super initialize.	self cellForm: self defaultImage.! !!ImageMorph methodsFor: '*Spec-Inspector' stamp: 'Patrick 6/17/2017 15:49' prior: 29361037!resize: newSize	self cellForm: (image scaledToSize: newSize)! !!ImageMorph methodsFor: 'menu commands' stamp: 'Patrick 6/17/2017 15:49' prior: 29360237!readFromFile	| fileName |	fileName := UIManager default		request: 'Please enter the image file name' translated		initialAnswer: 'fileName'.	fileName isEmptyOrNil ifTrue: [^ self].	self cellForm: (Form fromFileNamed: fileName).! !!ImageMorph methodsFor: 'menu commands' stamp: 'Patrick 6/17/2017 15:49' prior: 29359869!grabFromScreen	self cellForm: Form fromUser.! !!ImageMorph class methodsFor: 'instance creation' stamp: 'Patrick 6/17/2017 15:49' prior: 29364000!fromString: aString font: aFont	"Create a new ImageMorph showing the given string in the given font"	^ self new cellForm: (StringMorph contents: aString font: aFont) imageForm! !!ImageMorph class methodsFor: 'instance creation' stamp: 'Patrick 6/17/2017 15:49' prior: 29364271!withForm: aForm	^ self new cellForm: aForm ; yourself! !!OSSDL2WindowHandle methodsFor: 'instance creation' stamp: 'Patrick 6/17/2017 15:49' prior: 53151248!newFormRenderer: form	^ renderer := OSSDL2FormRenderer new 		cellForm: form;		window: self;		yourself! !!MorphTreeColumn methodsFor: 'column drawing' stamp: 'Patrick 6/17/2017 15:49' prior: 51648375!headerButtonLabel: aLabel icon: anIconForm	self headerButtonLabel: aLabel font: nil.	self header cellInset: 3@0.	self header icon: (ImageMorph new cellForm: anIconForm)! !!MorphTreeColumn methodsFor: 'accessing' stamp: 'Patrick 6/17/2017 15:49' prior: 51652509!thumbnailOfSize: thumbExtent	"Answer a new thumbnail for the receiver."	|f t r|	r := self header fullBounds scaledAndCenteredIn: (0@0 extent: thumbExtent).	f := Form extent: r extent depth: Display depth.	t := MatrixTransform2x3 withScale: 1.0.	f getCanvas		transformBy: t		clippingTo: f boundingBox		during: [:c | c translateBy: self visibleBounds topLeft negated during: [:ct | self container fullDrawOn: ct]]		smoothing: 6.	^ImageMorph new		cellForm: f! !!MorphTreeColumn methodsFor: 'column drawing' stamp: 'Patrick 6/17/2017 15:49' prior: 51650265!headerButtonLabel: aLabel font: aFont icon: anIconForm target: aReceiver actionSelector: aSelector arguments: aCollection	self headerButton.	self header label: aLabel font: aFont.	self header icon: (ImageMorph new cellForm: anIconForm).	self header actionSelector: aSelector.	self header target: aReceiver.	self header arguments: aCollection! !!GLMMorphicWidgetRenderer methodsFor: 'private' stamp: 'Patrick 6/17/2017 15:49' prior: 26736806!dropDownMenuFrom: aBlock withIcon: anIcon	| activeForm passiveForm menuButton | 		activeForm := anIcon.	passiveForm := anIcon.	menuButton := MultistateButtonMorph new extent: activeForm extent.	^ menuButton		extent: activeForm extent;				activeEnabledOverUpFillStyle: (ImageFillStyle cellForm: activeForm);				passiveEnabledOverUpFillStyle: (ImageFillStyle cellForm: activeForm);				activeEnabledOverDownFillStyle: (ImageFillStyle cellForm: passiveForm);		passiveEnabledOverDownFillStyle: (ImageFillStyle cellForm: passiveForm);		addUpAction: aBlock;		setBalloonText: 'Menu' translated;		yourself! !!GLMMorphicWidgetRenderer methodsFor: 'private' stamp: 'Patrick 6/17/2017 15:49' prior: 26732681!labelActionMorphFor: aPresentation		 ^ aPresentation titleAction 		ifNil: [ nil ]		ifNotNil: [ :labelAction |			((labelAction isAvailableOn: aPresentation) and: [ labelAction hasIcon ])				ifTrue: [ 					MultistateButtonMorph new						extent: labelAction icon extent;						activeEnabledOverUpFillStyle: (ImageFillStyle cellForm: labelAction icon);						setBalloonText: labelAction title;						addUpAction: [ labelAction actOn: aPresentation ] ]				ifFalse: [ nil ] ]	! !!FTPluggableIconListMorphAdaptorDataSource methodsFor: 'private' stamp: 'Patrick 6/17/2017 15:49' prior: 33792819!createCellText: aString icon: anIcon 	| text icon cell |	text := aString.	icon := anIcon.	cell := FTCellMorph new		cellInset: 5;		yourself.	icon		ifNotNil:			[ icon := icon asMorph.			icon class = ImageMorph				ifTrue: [ icon cellForm: (icon cellForm scaledToSize: 16 @ 16) ]				ifFalse: [ icon bounds: (0 @ 0 corner: 16 @ 16) ].			cell addMorphBack: icon ].	cell addMorphBack: text asMorph.	^ cell! !!FTTreeDataSource class methodsFor: 'utils - morph creation' stamp: 'Patrick 6/17/2017 15:49' prior: 33793343!emptyMorph	| icon |	icon := (Smalltalk ui icons iconNamed: #emptyIcon) asMorph.	icon cellForm: (icon cellForm scaledToSize: 16 @ 16).	^ icon! !!TabBarMorph methodsFor: 'private' stamp: 'Patrick 6/17/2017 15:49' prior: 63341819!createMenuButton	"Answer a button for the window menu."	| form msb |		form := Smalltalk ui theme windowMenuForm.	msb := MultistateButtonMorph new extent: form extent.	msb activeEnabledNotOverUpFillStyle: (ImageFillStyle cellForm: form).		form := Smalltalk ui theme windowMenuPassiveForm.	msb extent: form extent.	msb activeDisabledNotOverUpFillStyle: (ImageFillStyle cellForm: form).	msb passiveEnabledNotOverUpFillStyle: (ImageFillStyle cellForm: form).	msb passiveDisabledNotOverUpFillStyle: (ImageFillStyle cellForm: form).		form := Smalltalk ui theme windowMenuForm.	msb extent: form extent.	msb		activeEnabledOverUpFillStyle: (ImageFillStyle cellForm: form);		passiveEnabledOverUpFillStyle: (ImageFillStyle cellForm: form).		form := Smalltalk ui theme windowMenuPassiveForm.	msb		extent: form extent;		activeEnabledOverDownFillStyle: (ImageFillStyle cellForm: form);		passiveEnabledOverDownFillStyle: (ImageFillStyle cellForm: form);		addUpAction: [ self popUpMenu ];		setBalloonText: 'tab menu' translated;		extent: 16@16.			^ msb! !!MorphTreeMorph methodsFor: 'expanding-collapsing' stamp: 'Patrick 6/17/2017 15:49' prior: 51755488!expandedToggleImage	^ expandedToggleImage ifNil: [expandedToggleImage := ImageMorph new cellForm: self expandedForm].! !!MorphTreeMorph methodsFor: 'expanding-collapsing' stamp: 'Patrick 6/17/2017 15:49' prior: 51723166!notExpandedToggleImage	^ notExpandedToggleImage ifNil: [notExpandedToggleImage := ImageMorph new cellForm: self notExpandedForm].! !!OSVMFormRenderer methodsFor: 'accessing' stamp: 'Patrick 6/17/2017 15:49' prior: 53212124!form: aForm	super cellForm: aForm.	self beDisplay! !!OSVMFormRenderer methodsFor: 'accessing' stamp: 'Patrick 6/17/2017 15:49' prior: 33825614!cellForm: aForm	super cellForm: aForm.	self beDisplay! !!UIThemeWatery methodsFor: 'fill-styles-buttons' stamp: 'Patrick 6/17/2017 15:49' prior: 65295706!checkboxButtonSelectedFillStyleFor: aCheckboxButton	"Return the selected checkbox button fillStyle for the given checkbox button."		^(ImageFillStyle cellForm: self checkboxSelectedForm) origin: aCheckboxButton topLeft! !!UIThemeWatery methodsFor: 'label-styles' stamp: 'Patrick 6/17/2017 15:49' prior: 65406852!createCollapseBoxFor: aSystemWindow	"Answer a button for minimising the window."		|form msb|	form := self windowMinimizeForm.	msb := MultistateButtonMorph new extent: form extent.	msb activeEnabledNotOverUpFillStyle: (ImageFillStyle cellForm: form).	form := self windowMinimizePassiveForm.	msb extent: form extent.	msb passiveEnabledNotOverUpFillStyle: (ImageFillStyle cellForm: form).	form := self windowMinimizeOverForm.	msb extent: form extent.	msb		activeEnabledOverUpFillStyle: (ImageFillStyle cellForm: form);		passiveEnabledOverUpFillStyle: (ImageFillStyle cellForm: form).	form := self windowMinimizePassiveForm.	msb		extent: form extent;		activeEnabledOverDownFillStyle: (ImageFillStyle cellForm: form);		passiveEnabledOverDownFillStyle: (ImageFillStyle cellForm: form);		addUpAction: [aSystemWindow collapseBoxHit];		setBalloonText: 'Collapse this window' translated;		extent: aSystemWindow boxExtent.	^msb! !!UIThemeWatery methodsFor: 'fill-styles-scrollbars' stamp: 'Patrick 6/17/2017 15:49' prior: 65308125!scrollbarNormalHorizontalThumbFillStyleFor: aScrollbar	"Return the normal scrollbar horizontal thumb fillStyle for the given scrollbar."		|s l m r|	s := aScrollbar slider.	l := self scrollbarThumbLeftForm.	m := self scrollbarThumbHorizontalMiddleForm.	r := self scrollbarThumbRightForm.	^CompositeFillStyle fillStyles: {		(ImageFillStyle cellForm: l) origin: s topLeft.		(AlphaInfiniteForm with: m)			origin: s topLeft + (l width@0);			extent: (s width - l width - r width)@m height.		(ImageFillStyle cellForm: r)			origin: s topRight - (r width@0)}! !!UIThemeWatery methodsFor: 'fill-styles-scrollbars' stamp: 'Patrick 6/17/2017 15:49' prior: 65357974!scrollbarNormalVerticalThumbFillStyleFor: aScrollbar	"Return the normal scrollbar vertical thumb fillStyle for the given scrollbar."		|s t m b|	s := aScrollbar slider.	t := self scrollbarThumbTopForm.	m := self scrollbarThumbVerticalMiddleForm.	b := self scrollbarThumbBottomForm.	^CompositeFillStyle fillStyles: {		(ImageFillStyle cellForm: t) origin: s topLeft.		(AlphaInfiniteForm with: m)			origin: s topLeft + (0@t height);			extent: m width@(s height - t height - b height).		(ImageFillStyle cellForm: b)			origin: s bottomLeft - (0@b height)}! !!UIThemeWatery methodsFor: 'fill-styles-buttons' stamp: 'Patrick 6/17/2017 15:49' prior: 65372399!radioButtonSelectedFillStyleFor: aRadioButton	"Return the selected radio button fillStyle for the given button."		^(ImageFillStyle cellForm: self radioButtonSelectedForm) origin: aRadioButton topLeft! !!UIThemeWatery methodsFor: 'morph creation' stamp: 'Patrick 6/17/2017 15:49' prior: 65298448!newCloseControlIn: aThemedMorph for: aModel action: aValuable help: helpText	"Answer a button for closing things."		|form msb|	form := self windowCloseForm.	msb := MultistateButtonMorph new extent: form extent.	msb activeEnabledNotOverUpFillStyle: (ImageFillStyle cellForm: form).	form := self windowClosePassiveForm.	msb extent: form extent.	msb activeDisabledNotOverUpFillStyle: (ImageFillStyle cellForm: form).	msb passiveEnabledNotOverUpFillStyle: (ImageFillStyle cellForm: form).	msb passiveDisabledNotOverUpFillStyle: (ImageFillStyle cellForm: form).	form := self windowCloseOverForm.	msb extent: form extent.	msb		activeEnabledOverUpFillStyle: (ImageFillStyle cellForm: form);		passiveEnabledOverUpFillStyle: (ImageFillStyle cellForm: form).	form := self windowClosePassiveForm.	msb		extent: form extent;		activeEnabledOverDownFillStyle: (ImageFillStyle cellForm: form);		passiveEnabledOverDownFillStyle: (ImageFillStyle cellForm: form);		addUpAction: aValuable;		setBalloonText: helpText.	^msb! !!UIThemeWatery methodsFor: 'label-styles' stamp: 'Patrick 6/17/2017 15:49' prior: 65294344!createExpandBoxFor: aSystemWindow	"Answer a button for maximising/restoring the window."		|form msb|	form := self windowMaximizeForm.	msb := MultistateButtonMorph new extent: form extent.	msb activeEnabledNotOverUpFillStyle: (ImageFillStyle cellForm: form).	form := self windowMaximizePassiveForm.	msb extent: form extent.	msb passiveEnabledNotOverUpFillStyle: (ImageFillStyle cellForm: form).	form := self windowMaximizeOverForm.	msb extent: form extent.	msb		activeEnabledOverUpFillStyle: (ImageFillStyle cellForm: form);		passiveEnabledOverUpFillStyle: (ImageFillStyle cellForm: form).	form := self windowMaximizePassiveForm.	msb		extent: form extent;		activeEnabledOverDownFillStyle: (ImageFillStyle cellForm: form);		passiveEnabledOverDownFillStyle: (ImageFillStyle cellForm: form);		addUpAction: [aSystemWindow expandBoxHit];		setBalloonText: 'Expand to full screen' translated;		extent: aSystemWindow boxExtent.	^msb! !!UIThemeWatery methodsFor: 'fill-styles-buttons' stamp: 'Patrick 6/17/2017 15:49' prior: 65358842!checkboxButtonNormalFillStyleFor: aCheckboxButton	"Return the normal checkbox button fillStyle for the given checkbox button."		^(ImageFillStyle cellForm: self checkboxForm) origin: aCheckboxButton topLeft! !!UIThemeWatery methodsFor: 'fill-styles-buttons' stamp: 'Patrick 6/17/2017 15:49' prior: 65314630!radioButtonNormalFillStyleFor: aRadioButton	"Return the normal radio button fillStyle for the given button."		^(ImageFillStyle cellForm: self radioButtonForm) origin: aRadioButton topLeft! !!UIThemeWatery methodsFor: 'label-styles' stamp: 'Patrick 6/17/2017 15:49' prior: 65398550!createMenuBoxFor: aSystemWindow	"Answer a button for the window menu."		|form msb|	form := self windowMenuForm.	msb := MultistateButtonMorph new extent: form extent.	msb activeEnabledNotOverUpFillStyle: (ImageFillStyle cellForm: form).	form := self windowMenuPassiveForm.	msb extent: form extent.	msb passiveEnabledNotOverUpFillStyle: (ImageFillStyle cellForm: form).	form := self windowMenuOverForm.	msb extent: form extent.	msb		activeEnabledOverUpFillStyle: (ImageFillStyle cellForm: form);		passiveEnabledOverUpFillStyle: (ImageFillStyle cellForm: form).	form := self windowMenuPassiveForm.	msb		extent: form extent;		activeEnabledOverDownFillStyle: (ImageFillStyle cellForm: form);		passiveEnabledOverDownFillStyle: (ImageFillStyle cellForm: form);		addUpAction: [aSystemWindow offerWindowMenu];		setBalloonText: 'Window menu' translated;		extent: form extent.	^msb! !!ScrollBar methodsFor: 'initialize' stamp: 'Patrick 6/17/2017 15:49' prior: 59419635!updateUpButtonImage"update the receiver's upButton. put a new image inside"	upButton removeAllMorphs.	upButton		addMorphCentered: (ImageMorph new cellForm: self upImage)! !!ScrollBar methodsFor: 'initialize' stamp: 'Patrick 6/17/2017 15:49' prior: 59418632!updateDownButtonImage	"update the receiver's downButton.  put a new image inside"	downButton removeAllMorphs.	downButton		addMorphCentered: (ImageMorph new cellForm: self downImage)! !!Pharo3DarkTheme methodsFor: 'label-styles' stamp: 'Patrick 6/17/2017 15:49' prior: 54332691!createMenuBoxFor: aSystemWindow	"Answer a button for the window menu."	"	^aSystemWindow createBox		labelGraphic: (self windowMenuIconFor: aSystemWindow);		extent: aSystemWindow boxExtent;		actWhen: #buttonDown;		actionSelector: #offerWindowMenu;		setBalloonText: 'window menu' translated"		|form msb|	form := self windowMenuForm.	msb := MultistateButtonMorph new extent: form extent.	msb activeEnabledNotOverUpFillStyle: (ImageFillStyle cellForm: form).	form := self windowMenuPassiveForm.	msb extent: form extent.	msb activeDisabledNotOverUpFillStyle: (ImageFillStyle cellForm: form).	msb passiveEnabledNotOverUpFillStyle: (ImageFillStyle cellForm: form).	msb passiveDisabledNotOverUpFillStyle: (ImageFillStyle cellForm: form).	form := self windowMenuForm.	msb extent: form extent.	msb		activeEnabledOverUpFillStyle: (ImageFillStyle cellForm: form);		passiveEnabledOverUpFillStyle: (ImageFillStyle cellForm: form).	form := self windowMenuPassiveForm.	msb		extent: form extent;		activeEnabledOverDownFillStyle: (ImageFillStyle cellForm: form);		passiveEnabledOverDownFillStyle: (ImageFillStyle cellForm: form);		addUpAction: [aSystemWindow offerWindowMenu];		setBalloonText: 'window menu' translated;		extent: aSystemWindow boxExtent.	^msb! !!DateModel methodsFor: 'private' stamp: 'Patrick 6/17/2017 15:49' prior: 22216967!iconMorph	^ ImageMorph new cellForm: (self iconNamed: #calendarIcon)! !!SpecTreeColumn methodsFor: 'private' stamp: 'Patrick 6/17/2017 15:49' prior: 62200181!setHeaderButtonLabel: aLabel font: aFont icon: anIconForm target: aReceiver actionSelector: aSelector	(aLabel isNil		and: [ anIconForm isNil and: [ aReceiver isNil or: [ aSelector isNil ] ] ])		ifTrue: [ ^ self ].	self headerButton.	aLabel		ifNil: [ self header label: '' font: nil ]		ifNotNil: [ self header label: aLabel font: aFont ].	anIconForm		ifNotNil: [ self header icon: (ImageMorph new cellForm: anIconForm) ].	(aSelector notNil and: [ aReceiver notNil ])		ifFalse: [ ^ self ].	self header actionSelector: aSelector.	self header target: aReceiver! !!GLMWhitespaceTheme methodsFor: 'label-styles' stamp: 'Patrick 6/17/2017 15:49' prior: 27316085!createExpandBoxFor: aSystemWindow	"Answer a button for maximising/restoring the window."		|form msb|	form := self windowMaximizeForm.	msb := MultistateButtonMorph new extent: form extent.	msb activeEnabledNotOverUpFillStyle: (ImageFillStyle cellForm: form).	form := self windowMaximizePassiveForm.	msb extent: form extent.	msb passiveEnabledNotOverUpFillStyle: (ImageFillStyle cellForm: form).	form := self windowMaximizeOverForm.	msb extent: form extent.	msb		activeEnabledOverUpFillStyle: (ImageFillStyle cellForm: form);		passiveEnabledOverUpFillStyle: (ImageFillStyle cellForm: form).	form := self windowMaximizePassiveForm.	msb		extent: form extent;		activeEnabledOverDownFillStyle: (ImageFillStyle cellForm: form);		passiveEnabledOverDownFillStyle: (ImageFillStyle cellForm: form);		addUpAction: [aSystemWindow expandBoxHit];		setBalloonText: 'Expand to full screen' translated;		extent: aSystemWindow boxExtent.	^msb! !!GLMWhitespaceTheme methodsFor: 'morph creation' stamp: 'Patrick 6/17/2017 15:49' prior: 27319480!newCloseControlIn: aThemedMorph for: aModel action: aValuable help: helpText	"Answer a button for closing things."		|form msb|	form := self windowCloseForm.	msb := MultistateButtonMorph new extent: form extent.	msb activeEnabledNotOverUpFillStyle: (ImageFillStyle cellForm: form).	form := self windowClosePassiveForm.	msb extent: form extent.	msb activeDisabledNotOverUpFillStyle: (ImageFillStyle cellForm: form).	msb passiveEnabledNotOverUpFillStyle: (ImageFillStyle cellForm: form).	msb passiveDisabledNotOverUpFillStyle: (ImageFillStyle cellForm: form).	form := self windowCloseOverForm.	msb extent: form extent.	msb		activeEnabledOverUpFillStyle: (ImageFillStyle cellForm: form);		passiveEnabledOverUpFillStyle: (ImageFillStyle cellForm: form).	form := self windowClosePassiveForm.	msb		extent: form extent;		activeEnabledOverDownFillStyle: (ImageFillStyle cellForm: form);		passiveEnabledOverDownFillStyle: (ImageFillStyle cellForm: form);		addUpAction: aValuable;		setBalloonText: helpText.	^msb! !!GLMWhitespaceTheme methodsFor: 'label-styles' stamp: 'Patrick 6/17/2017 15:49' prior: 27329468!createMenuBoxFor: aSystemWindow	"Answer a button for the window menu."	"	^aSystemWindow createBox		labelGraphic: (self windowMenuIconFor: aSystemWindow);		extent: aSystemWindow boxExtent;		actWhen: #buttonDown;		actionSelector: #offerWindowMenu;		setBalloonText: 'window menu' translated"		|form msb|	form := self windowMenuForm.	msb := MultistateButtonMorph new extent: form extent.	msb activeEnabledNotOverUpFillStyle: (ImageFillStyle cellForm: form).	form := self windowMenuPassiveForm.	msb extent: form extent.	msb activeDisabledNotOverUpFillStyle: (ImageFillStyle cellForm: form).	msb passiveEnabledNotOverUpFillStyle: (ImageFillStyle cellForm: form).	msb passiveDisabledNotOverUpFillStyle: (ImageFillStyle cellForm: form).	form := self windowMenuForm.	msb extent: form extent.	msb		activeEnabledOverUpFillStyle: (ImageFillStyle cellForm: form);		passiveEnabledOverUpFillStyle: (ImageFillStyle cellForm: form).	form := self windowMenuPassiveForm.	msb		extent: form extent;		activeEnabledOverDownFillStyle: (ImageFillStyle cellForm: form);		passiveEnabledOverDownFillStyle: (ImageFillStyle cellForm: form);		addUpAction: [aSystemWindow offerWindowMenu];		setBalloonText: 'window menu' translated;		extent: aSystemWindow boxExtent.	^msb! !!GLMWhitespaceTheme methodsFor: 'label-styles' stamp: 'Patrick 6/17/2017 15:49' prior: 27343807!createCollapseBoxFor: aSystemWindow	"Answer a button for minimising the window."		|form msb|	form := self windowMinimizeForm.	msb := MultistateButtonMorph new extent: form extent.	msb activeEnabledNotOverUpFillStyle: (ImageFillStyle cellForm: form).	form := self windowMinimizePassiveForm.	msb extent: form extent.	msb passiveEnabledNotOverUpFillStyle: (ImageFillStyle cellForm: form).	form := self windowMinimizeOverForm.	msb extent: form extent.	msb		activeEnabledOverUpFillStyle: (ImageFillStyle cellForm: form);		passiveEnabledOverUpFillStyle: (ImageFillStyle cellForm: form).	form := self windowMinimizePassiveForm.	msb		extent: form extent;		activeEnabledOverDownFillStyle: (ImageFillStyle cellForm: form);		passiveEnabledOverDownFillStyle: (ImageFillStyle cellForm: form);		addUpAction: [aSystemWindow collapseBoxHit];		setBalloonText: 'Collapse this window' translated;		extent: aSystemWindow boxExtent.	^msb! !!TransferMorph methodsFor: 'private' stamp: 'Patrick 6/17/2017 15:49' prior: 64696332!updateCopyIcon	| copyIcon |		copyIcon := self submorphWithProperty: #tmCopyIcon.	self shouldCopy ifFalse: [		^ copyIcon ifNotNil: [ copyIcon delete ]].	copyIcon ifNotNil: [ ^ self ].	copyIcon := ImageMorph new cellForm: CopyPlusIcon.	copyIcon setProperty: #tmCopyIcon toValue: true.	^ self addMorphFront: copyIcon.! !!UITheme methodsFor: 'fill-styles' stamp: 'Patrick 6/17/2017 15:49' prior: 65158283!multiFormFillStyleFrom: anArray cornerWidths: widthArray in: aRectangle	"Answer a composite fill style from the given forms and central colour	in the given bounds. Use the widths specified for the portion of the	corner forms to display."		|tl tm tr ml mr bl bm br c tlw trw blw brw|	tl := anArray first. tlw:= widthArray first.	tm := anArray second.	tr := anArray third. trw := widthArray second.	ml  := anArray fourth.	c := anArray fifth.	mr  := anArray sixth.	bl := anArray seventh. blw := widthArray third.	bm := anArray eighth.	br := anArray ninth. brw := widthArray fourth.	^CompositeFillStyle fillStyles: {		(ImageFillStyle cellForm: tl)			origin: aRectangle topLeft;			extent: tlw@tl height.		(AlphaInfiniteForm with: tm)			origin: aRectangle topLeft + (tlw@0);			extent: (aRectangle width - trw - tlw)@tm height.		(ImageFillStyle cellForm: tr)			origin: aRectangle topRight - (tr width@0);			extent: trw@tr height;			offset: (tr width - trw)@0.		(AlphaInfiniteForm with: ml)			origin: aRectangle topLeft + (0@tl height);			extent: ml width@(aRectangle height - tl height - bl height).		(ColorFillStyle color: c)			origin: aRectangle topLeft + (tlw@tl height);			extent: aRectangle extent - (tlw@tl height) - (brw@br height).		(AlphaInfiniteForm with: mr)			origin: aRectangle topRight + (trw negated@tr height);			extent: mr width@(aRectangle height - tr height - br height).		(ImageFillStyle cellForm: bl)			origin: aRectangle bottomLeft - (0@bl height);			extent: blw@bl height.		(AlphaInfiniteForm with: bm)			origin: aRectangle bottomLeft - (blw negated@bl height);			extent: (aRectangle width - blw - brw)@bm height.		(ImageFillStyle cellForm: br)			origin: aRectangle bottomRight - br extent;			extent: brw@br height;			offset: (br width - brw)@0}! !!UITheme methodsFor: 'fill-styles' stamp: 'Patrick 6/17/2017 15:49' prior: 65183423!multiFormTopFillStyleFrom: anArray in: aRectangle	"Answer a composite fill style from the given forms and central colour	in the given bounds. Only top and middle sections are considered."		|tl tm tr ml mr c|	tl := anArray first.	tm := anArray second.	tr := anArray third.	ml  := anArray fourth.	c := anArray fifth.	mr  := anArray sixth.	^CompositeFillStyle fillStyles: {		(ImageFillStyle cellForm: tl) origin: aRectangle topLeft.		(AlphaInfiniteForm with: tm)			origin: aRectangle topLeft + (tl width@0);			extent: (aRectangle width - tl width - tr width)@tm height.		(ImageFillStyle cellForm: tr)			origin: aRectangle topRight - (tr width@0).		(AlphaInfiniteForm with: ml)			origin: aRectangle topLeft + (0@tr height);			extent: ml width@(aRectangle height - tl height).		(ColorFillStyle color: c)			origin: aRectangle topLeft + tl extent;			extent: aRectangle extent - tl extent - (mr width @0).		(AlphaInfiniteForm with: mr)			origin: aRectangle topRight + (tr width negated@tr height);			extent: mr width@(aRectangle height - tr height)}! !!UITheme methodsFor: '*growl' stamp: 'Patrick 6/17/2017 15:49' prior: 65266270!growlDismissHandleFor: aGrowlMorph	| handle form image |	handle := BorderedMorph newBounds: ((3@3) extent: (20@20))  color: Color white.	handle borderColor: handle color muchDarker.	handle borderWidth: 1.	handle wantsYellowButtonMenu: false.	form := self "haloDismissIcon" windowCloseForm.	form ifNotNil: [		image := ImageMorph new.		image cellForm: form.		image color: handle color contrastingForegroundColor.		image lock.		handle addMorphCentered: image].	^ handle! !!UITheme methodsFor: 'morph creation' stamp: 'Patrick 6/17/2017 15:49' prior: 65204371!newCloseControlIn: aThemedMorph for: aModel action: aValuable help: helpText	"Answer a button for closing things."		|form msb|	form := self windowCloseForm.	msb := MultistateButtonMorph new extent: form extent.	msb		activeEnabledNotOverUpFillStyle: (ImageFillStyle cellForm: form);		addUpAction: aValuable;		setBalloonText: helpText.	^msb! !!UITheme methodsFor: 'fill-styles' stamp: 'Patrick 6/17/2017 15:49' prior: 65146158!multiFormFillStyleFrom: anArray in: aRectangle	"Answer a composite fill style from the given forms and central colour	in the given bounds."		|tl tm tr ml mr bl bm br c|	tl := anArray first.	tm := anArray second.	tr := anArray third.	ml  := anArray fourth.	c := anArray fifth.	mr  := anArray sixth.	bl := anArray seventh.	bm := anArray eighth.	br := anArray ninth.	^CompositeFillStyle fillStyles: {		(ImageFillStyle cellForm: tl) origin: aRectangle topLeft.		(AlphaInfiniteForm with: tm)			origin: aRectangle topLeft + (tl width@0);			extent: (aRectangle width - tl width - tr width)@tm height.		(ImageFillStyle cellForm: tr)			origin: aRectangle topRight - (tr width@0).		(AlphaInfiniteForm with: ml)			origin: aRectangle topLeft + (0@tl height);			extent: ml width@(aRectangle height - tl height - bl height).		(ColorFillStyle color: c)			origin: aRectangle topLeft + tl extent;			extent: aRectangle extent - tl extent - br extent.		(AlphaInfiniteForm with: mr)			origin: aRectangle topRight + (tr width negated@tr height);			extent: mr width@(aRectangle height - tr height - br height).		(ImageFillStyle cellForm: bl) origin: aRectangle bottomLeft - (0@bl height).		(AlphaInfiniteForm with: bm)			origin: aRectangle bottomLeft - (bl width negated@bl height);			extent: (aRectangle width - bl width - br width)@bm height.		(ImageFillStyle cellForm: br)			origin: aRectangle bottomRight - br extent}! !!IconicButton methodsFor: 'accessing' stamp: 'Patrick 6/17/2017 15:49' prior: 29299089!labelGraphic: aForm	"Changed to look for any image morph rather than just a sketch."		graphicalMorph ifNotNil: [graphicalMorph delete].	graphicalMorph := ImageMorph new cellForm: aForm.	self extent: graphicalMorph extent + (self borderWidth + self extraBorder).	graphicalMorph position: self center - (graphicalMorph extent // 2).	self addMorph: graphicalMorph.	graphicalMorph lock! !!ImageFillStyle class methodsFor: 'as yet unclassified' stamp: 'Patrick 6/17/2017 15:49' prior: 29353177!form: aForm	"Answer a new instance of the receiver with the given form."	^self new cellForm: aForm! !!ImageFillStyle class methodsFor: 'as yet unclassified' stamp: 'Patrick 6/17/2017 15:49' prior: 33825932!cellForm: aForm	"Answer a new instance of the receiver with the given form."	^self new cellForm: aForm! !!PopupChoiceDialogWindowWithMessage methodsFor: 'as yet unclassified' stamp: 'Patrick 6/17/2017 15:49' prior: 54996608!newIconMorph	"Answer an icon for the receiver."		^ImageMorph new cellForm: self icon! !!MessageDialogWindow methodsFor: 'private' stamp: 'Patrick 6/17/2017 15:49' prior: 32767301!newIconMorph	"Answer an icon for the receiver."		^ImageMorph new cellForm: self icon! !!GLMBrick methodsFor: 'morph-common' stamp: 'Patrick 6/17/2017 15:49' prior: 26104461!taskThumbnailOfSize: thumbExtent	"Answer a new task thumbnail for the receiver."	|f t r|	r := self globalBounds scaledAndCenteredIn: (0@0 extent: thumbExtent).	f := Form extent: r extent depth: Display depth.	t := MatrixTransform2x3 withScale: f extent / self extent.	f getCanvas		transformBy: t		clippingTo: f boundingBox		during: [:c | c translateBy: self globalBounds topLeft negated during: [:ct | self fullDrawOn: ct]]		smoothing: 2.	^ImageMorph new		cellForm: f! !!RenderTest methodsFor: 'tests' stamp: 'Patrick 6/17/2017 15:49' prior: 33784047!testDraw	| grid form cellLoc cell rendererClass renderer |	grid := Grid newOfSize: 30@30.	form := Form extent: 25@25 depth: Display depth.	cellLoc := 1@1.	cell := grid at: cellLoc.	rendererClass := CellRenderer modelClass.	renderer := rendererClass new.	renderer		position: cellLoc;		cellGrid: grid;		cellForm: form.	renderer render.	form displayAt: 10@10.! !!AthensBalloonSurface methodsFor: 'converting' stamp: 'Patrick 6/17/2017 15:49' prior: 17490999!asAthensPaintOn: aCanvas	^ AthensBalloonImagePaint new cellForm: self asForm; yourself! !!AthensBalloonSurface methodsFor: 'paints' stamp: 'Patrick 6/17/2017 15:49' prior: 17489030!createFormPaint: aForm  	^ AthensBalloonImagePaint new		cellForm: aForm! !!AthensBalloonSurface class methodsFor: 'as yet unclassified' stamp: 'Patrick 6/17/2017 15:49' prior: 17492775!extent: aPoint	"Create a new surface with given extent."		^ self new cellForm: (Form extent: aPoint depth: 32)! !!Pharo3Theme methodsFor: 'label-styles' stamp: 'Patrick 6/17/2017 15:49' prior: 54356440!createMenuBoxFor: aSystemWindow	"Answer a button for the window menu."	"	^aSystemWindow createBox		labelGraphic: (self windowMenuIconFor: aSystemWindow);		extent: aSystemWindow boxExtent;		actWhen: #buttonDown;		actionSelector: #offerWindowMenu;		setBalloonText: 'window menu' translated"		|form msb|	form := self windowMenuForm.	msb := MultistateButtonMorph new extent: form extent.	msb activeEnabledNotOverUpFillStyle: (ImageFillStyle cellForm: form).	form := self windowMenuPassiveForm.	msb extent: form extent.	msb activeDisabledNotOverUpFillStyle: (ImageFillStyle cellForm: form).	msb passiveEnabledNotOverUpFillStyle: (ImageFillStyle cellForm: form).	msb passiveDisabledNotOverUpFillStyle: (ImageFillStyle cellForm: form).	form := self windowMenuForm.	msb extent: form extent.	msb		activeEnabledOverUpFillStyle: (ImageFillStyle cellForm: form);		passiveEnabledOverUpFillStyle: (ImageFillStyle cellForm: form).	form := self windowMenuPassiveForm.	msb		extent: form extent;		activeEnabledOverDownFillStyle: (ImageFillStyle cellForm: form);		passiveEnabledOverDownFillStyle: (ImageFillStyle cellForm: form);		addUpAction: [aSystemWindow offerWindowMenu];		setBalloonText: 'window menu' translated;		extent: aSystemWindow boxExtent.	^msb! !!Form methodsFor: '*Morphic-Base' stamp: 'Patrick 6/17/2017 15:49' prior: 25496413!asMorph	^ImageMorph new cellForm: self! !!GLMPrintPopper methodsFor: 'initialization' stamp: 'Patrick 6/17/2017 15:49' prior: 27011269!initializeInspectButton	inspectButton := MultistateButtonMorph new		extent: GLMUIThemeExtraIcons glamorousInspect extent;		activeEnabledOverUpFillStyle: (ImageFillStyle cellForm: GLMUIThemeExtraIcons glamorousInspect);		setBalloonText: 'Inspect' translated.	self		addMorph: inspectButton		fullFrame: (LayoutFrame fractions: (1 @ 0 corner: 1 @ 0) offsets: (inspectButton width  @ 0 corner: 0 @ (2*inspectButton width) ))! !!MenuItemMorph methodsFor: 'accessing' stamp: 'Patrick 6/17/2017 15:49' prior: 32628077!contents: aString withMarkers: aBool inverse: inverse 	"Set the menu item entry. If aBool is true, parse aString for embedded markers."	| markerIndex marker |	self contentString: nil.	"get rid of old"	aBool ifFalse: [^super contents: aString].	self removeAllMorphs.	"get rid of old markers if updating"	self hasIcon ifTrue: [ self icon: nil ].	self flag: #CleanYesNoOnOffAfter.	(aString isKindOf: Association)		ifTrue: [ super contents: aString value. 				marker := aString key   					ifTrue: [self onImage]					ifFalse: [self offImage]]		ifFalse: [		(aString notEmpty and: [aString first = $<]) 			ifFalse: [^super contents: aString].		markerIndex := aString indexOf: $>.		markerIndex = 0 ifTrue: [^super contents: aString].	marker := (aString copyFrom: 1 to: markerIndex) asLowercase.	(#('<on>' '<off>' '<yes>' '<no>') includes: marker) 		ifFalse: [^super contents: aString].	self contentString: aString.	"remember actual string"	marker := (marker = '<on>' or: [marker = '<yes>']) ~= inverse 				ifTrue: [self onImage]				ifFalse: [self offImage].	super contents:  (aString copyFrom: markerIndex + 1 to: aString size)].	"And set the marker"	marker := ImageMorph new cellForm: marker.	marker position: self left @ (self top + 2).	self addMorphFront: marker! !!InfiniteForm class methodsFor: 'instance creation' stamp: 'Patrick 6/17/2017 15:49' prior: 29419670!with: aForm 	"Answer an instance of me whose pattern form is the argument, aForm."	^self new cellForm: aForm! !!MorphicTreeColumnAdapter methodsFor: 'private' stamp: 'Patrick 6/17/2017 15:49' prior: 51947097!headerIconChanged		self widgetDo: [ :w | 		self headerIcon			ifNil: [ w header removeIcon ]			ifNotNil: [ w header icon: (ImageMorph new cellForm: self headerIcon) ] ]! !!GLMMorphic class methodsFor: 'utils - morph creation' stamp: 'Patrick 6/17/2017 15:49' prior: 26623208!morphElement: anObject	anObject isString	ifTrue:[ ^StringMorph 					contents: anObject 					font: (LogicalFont 						familyName: UITheme current buttonFont familyName						pointSize: UITheme current buttonFont pointSize - 2) ].		anObject isCollection 	ifTrue: [ |row|				row:= OrderedCollection new.				anObject do: [ :e| row add: (self morphElement: e) ].				^self alignmentMorph: row ].					anObject isForm	ifTrue:[ ^ImageMorph new cellForm: anObject ].		^self containerMorph! !!BitmapFillStyle methodsFor: '*Morphic-Base-Balloon' stamp: 'Patrick 6/17/2017 15:49' prior: 18408509!newForm: aForm forMorph: aMorph	self cellForm: aForm.	self direction: (aForm width @ 0).	self normal: (0 @ aForm height).	aMorph changed.! !!BitmapFillStyle methodsFor: '*Morphic-Base-Balloon' stamp: 'Patrick 6/17/2017 15:49' prior: 18408930!grabNewGraphicIn: aMorph event: evt 	"Used by any morph that can be represented by a graphic"	| fill |	fill := Form fromUser.	fill boundingBox area = 0		ifTrue: [^ self].	self cellForm: fill.	self direction: fill width @ 0.	self normal: 0 @ fill height.	aMorph changed! !!BitmapFillStyle class methodsFor: 'instance creation' stamp: 'Patrick 6/17/2017 15:49' prior: 18410328!form: aForm	^self new cellForm: aForm! !!BitmapFillStyle class methodsFor: 'instance creation' stamp: 'Patrick 6/17/2017 15:49' prior: 33817441!fromUser	| fill |	fill := self cellForm: Form fromUser.	fill origin: 0@0.	fill direction: fill cellForm width @ 0.	fill normal: 0 @ fill cellForm height.	fill tileFlag: true. "So that we can fill arbitrary objects"	^fill! !!BitmapFillStyle class methodsFor: 'instance creation' stamp: 'Patrick 6/17/2017 15:49' prior: 33825496!cellForm: aForm	^self new cellForm: aForm! !!BitmapFillStyle class methodsFor: 'instance creation' stamp: 'Patrick 6/17/2017 15:49' prior: 18410086!fromForm: aForm	| fs |	fs := self cellForm: aForm.	fs origin: 0@0.	fs direction: aForm width @ 0.	fs normal: 0 @ aForm height.	fs tileFlag: true.	^fs! !!OSVMWindowHandle methodsFor: 'instance-creation' stamp: 'Patrick 6/17/2017 15:49' prior: 53216705!newFormRenderer: form 	^ renderer := OSVMFormRenderer new 		cellForm: form;		window: self;		yourself! !!HaloMorph methodsFor: 'private' stamp: 'Patrick 6/17/2017 15:49' prior: 28436368!addGraphicalHandleFrom: formKey at: aPoint	"Add the supplied form as a graphical handle centered at the given point.  Return the handle."	| handle aForm |	aForm := Smalltalk ui icons		iconNamed: formKey 		ifNone: [ self iconNamed: #solidMenuIcon ].	handle := ImageMorph new cellForm: aForm; bounds: (Rectangle center: aPoint extent: aForm extent).	handle wantsYellowButtonMenu: false.	self addMorph: handle.	handle on: #mouseUp send: #endInteraction to: self.	^ handle! !!HaloMorph methodsFor: 'private' stamp: 'Patrick 6/17/2017 15:49' prior: 28457182!createHandleAt: aPoint color: aColor iconName: iconName 	| bou handle |	bou := Rectangle center: aPoint extent: self handleSize asPoint.	self gradientHalo		ifTrue: [			handle := Morph newBounds: bou color: aColor.			handle borderWidth: 1.			handle useRoundedCorners.			self setColor: aColor toHandle: handle]		ifFalse: [handle := EllipseMorph newBounds: bou color: aColor].	handle borderColor: aColor muchDarker.	handle wantsYellowButtonMenu: false.	iconName isNil		ifFalse: [| form | 			form := self iconNamed: iconName.			form isNil				ifFalse: [| image | 					image := ImageMorph new.					image cellForm: form.					image color: aColor contrastingForegroundColor.					image lock.					handle addMorphCentered: image]].	^ handle! !!SVColorSelectorMorph methodsFor: 'instance creation' stamp: 'Patrick 6/17/2017 15:49' prior: 59263533!newLocationMorph	"Answer a new morph indicating the location of the selected color."	^ImageMorph new		cellForm: Cursor crossHair withMask asCursorForm! !!Morph methodsFor: '*Morphic-Widgets-Taskbar' stamp: 'Patrick 6/17/2017 15:49' prior: 51552296!taskThumbnailOfSize: thumbExtent	"Answer a new task thumbnail for the receiver."	|f t r|	r := self bounds scaledAndCenteredIn: (0@0 extent: thumbExtent).	f := Form extent: r extent depth: Display depth.	t := MatrixTransform2x3 withScale: f extent / self extent.	f getCanvas		transformBy: t		clippingTo: f boundingBox		during: [:c | c translateBy: self topLeft negated during: [:ct | self fullDrawOn: ct]]		smoothing: 2.	^ImageMorph new		cellForm: f! !AthensBalloonSurface removeSelector: #form:!ImageFillStyle removeSelector: #form:!CellRenderer removeSelector: #form:!BitmapFillStyle removeSelector: #form:!OSWindowFormRenderer removeSelector: #form:!ImageMorph removeSelector: #form:!InfiniteForm removeSelector: #form:!BitmapFillStyle class removeSelector: #form:!OSVMFormRenderer removeSelector: #form:!AthensBalloonImagePaint removeSelector: #form:!ImageFillStyle class removeSelector: #form:!!CellRenderer methodsFor: 'accessing' stamp: 'Patrick 6/17/2017 15:49' prior: 33824841!cellForm: anObject	cellForm := anObject! !!RenderTest methodsFor: 'tests' stamp: 'Patrick 6/17/2017 15:57' prior: 33854943!testDraw	| grid form cellLoc cell rendererClass renderer |	grid := Grid newOfSize: 30@30.	form := Form extent: 25@25 depth: Display depth.	cellLoc := 1@1.	cell := grid at: cellLoc.	rendererClass := CellRenderer modelClass.	renderer := rendererClass new.	renderer		position: cellLoc.	"	cellGrid: grid;		cellForm: form.	renderer render.	form displayAt: 10@10."! !!RenderTest methodsFor: 'tests' stamp: 'Patrick 6/17/2017 15:57' prior: 33865044!testDraw	| grid form cellLoc cell rendererClass renderer |	grid := Grid newOfSize: 30@30.	form := Form extent: 25@25 depth: Display depth.	cellLoc := 1@1.	cell := grid at: cellLoc.	rendererClass := CellRenderer modelClass.	renderer := rendererClass new.	renderer		position: cellLoc;		cellForm: form.	"	cellGrid: grid;			renderer render.	form displayAt: 10@10."! !!RenderTest methodsFor: 'tests' stamp: 'Patrick 6/17/2017 15:57' prior: 33865501!testDraw	| grid form cellLoc cell rendererClass renderer |	grid := Grid newOfSize: 30@30.	form := Form extent: 25@25 depth: Display depth.	cellLoc := 1@1.	cell := grid at: cellLoc.	rendererClass := CellRenderer modelClass.	renderer := rendererClass new.	renderer		position: cellLoc;		cellForm: form.	"	cellGrid: grid;	renderer render.	form displayAt: 10@10."! !!RenderTest methodsFor: 'tests' stamp: 'Patrick 6/17/2017 15:59' prior: 33865961!testDraw	| grid form cellLoc cell rendererClass renderer |	grid := Grid newOfSize: 30@30.	form := Form extent: 25@25 depth: Display depth.	cellLoc := 1@1.	cell := grid at: cellLoc.	renderer := CellRenderer  new.	renderer		position: cellLoc;		cellForm: form;		cellGrid: grid.	renderer render.	form displayAt: 10@10.! !!RenderTest methodsFor: 'tests' stamp: 'Patrick 6/17/2017 15:59' prior: 33866418!testDraw	| grid form cellLoc cell renderer |	grid := Grid newOfSize: 30@30.	form := Form extent: 25@25 depth: Display depth.	cellLoc := 1@1.	cell := grid at: cellLoc.	renderer := CellRenderer  new.	renderer		position: cellLoc;		cellForm: form;		cellGrid: grid.	renderer render.	form displayAt: 10@10.! !!RenderTest methodsFor: 'tests' stamp: 'Patrick 6/17/2017 15:59' prior: 33866830!testDraw	| grid form cellLoc cell renderer |	grid := Grid newOfSize: 30@30.	form := Form extent: 25@25 depth: Display depth.	cellLoc := 1@1.	cell := grid at: cellLoc.	renderer := CellRenderer new.	renderer		position: cellLoc;		cellForm: form;		cellGrid: grid.	renderer render.	form displayAt: 10@10.! !!RenderTest methodsFor: 'tests' stamp: 'Patrick 6/17/2017 16:00' prior: 33867228!testDraw	| grid form cellLoc cell renderer |	grid := Grid newOfSize: 30@30.	form := Form extent: 25@25 depth: Display depth.	cellLoc := 1@1.	renderer := CellRenderer new.	renderer		position: cellLoc;		cellForm: form;		cellGrid: grid.	renderer render.	form displayAt: 10@10.! !!RenderTest methodsFor: 'tests' stamp: 'Patrick 6/17/2017 16:00' prior: 33867625!testDraw	| grid form cellLoc renderer |	grid := Grid newOfSize: 30@30.	form := Form extent: 25@25 depth: Display depth.	cellLoc := 1@1.	renderer := CellRenderer new.	renderer		position: cellLoc;		cellForm: form;		cellGrid: grid.	renderer render.	form displayAt: 10@10.! !----SNAPSHOT----2017-06-17T16:02:10.194668+02:00 Pharo6.1.image priorSource: 213242!----SNAPSHOT----2017-06-17T16:06:01.905668+02:00 Pharo6.1.image priorSource: 313845!----SNAPSHOT----2017-06-17T16:06:21.497668+02:00 Pharo6.1.image priorSource: 313931!----SNAPSHOT----2017-06-17T16:07:14.624668+02:00 Pharo6.1.image priorSource: 314017!----SNAPSHOT----2017-06-17T16:07:40.154668+02:00 Pharo6.1.image priorSource: 314103!----SNAPSHOT----2017-06-17T16:33:37.736668+02:00 Pharo6.1.image priorSource: 314189!!CellRenderer class methodsFor: 'as yet unclassified' stamp: 'Patrick 6/18/2017 14:16'!cellExtent	^25@25! !Object subclass: #SnakeGame	instanceVariableNames: 'grid'	classVariableNames: ''	package: 'Snake_Game_Graphics'!!SnakeGame methodsFor: 'accessing' stamp: 'Patrick 6/18/2017 14:18'!grid	^ grid! !!SnakeGame methodsFor: 'accessing' stamp: 'Patrick 6/18/2017 14:18'!grid: anObject	grid := anObject! !----SNAPSHOT----2017-06-18T14:20:48.828122+02:00 Pharo6.1.image priorSource: 314275!!SnakeGame class methodsFor: 'as yet unclassified' stamp: 'Patrick 6/18/2017 14:21'!gameBoardExtentFor: someGrid	| x y |	x := someGrid columns * CellRenderer extent x.	y := someGrid rows * CellRenderer extent y.	^x@y! !!SnakeGame class methodsFor: 'as yet unclassified' stamp: 'Patrick 6/18/2017 14:22' prior: 33869382!gameBoardExtentFor: someGrid	| x y |	x := someGrid columns * CellRenderer cellExtent x.	y := someGrid rows * CellRenderer cellExtent y.	^x@y! !!RenderTest methodsFor: 'as yet unclassified' stamp: 'Patrick 6/18/2017 14:27'!testCellOffsets	| grid form cellLoc renderer |	grid := Grid newOfSize: 30@30.	form := Form extent: 25@25 depth: Display depth.	cellLoc := 1@1.	renderer := CellRenderer new.	renderer		position: cellLoc;		cellForm: form;		cellGrid: grid.	renderer render.	form displayAt: 10@10.! !!RenderTest methodsFor: 'tests' stamp: 'Patrick 6/18/2017 14:28' prior: 33869851!testCellOffsets	| grid form cellLoc renderer |	grid := Grid newOfSize: 30@30.	form := Form extent: (SnakeGame gameBoardExtentFor: grid) depth: Display depth.	form fillColor: (Color r: 0.9 g: 0.9 b: 0.9 ). "gray background"	cellLoc := 1@1.	renderer := CellRenderer new.	renderer		position: cellLoc;		cellGrid: grid;		cellForm: form.	renderer render.	form displayAt: 100@50.! !!RenderTest methodsFor: 'tests' stamp: 'Patrick 6/18/2017 14:29' prior: 33870223!testCellOffsets	| grid form cellLoc renderer offset |	grid := Grid newOfSize: 30@30.	form := Form extent: (SnakeGame gameBoardExtentFor: grid) depth: Display depth.	form fillColor: (Color r: 0.9 g: 0.9 b: 0.9 ). "gray background"	cellLoc := 1@1.	renderer := CellRenderer new.	renderer		position: cellLoc;		cellGrid: grid;		cellForm: form.	renderer render.	offset := renderer gridFormOffset.	form displayAt: 100@50.! !!CellRenderer methodsFor: 'as yet unclassified' stamp: 'Patrick 6/18/2017 14:31'!gridFormOffset	| diff countX countY offset |	^offset! !!CellRenderer methodsFor: 'as yet unclassified' stamp: 'Patrick 6/18/2017 14:31' prior: 33871206!gridFormOffset	| diff countX countY offset |	diff := CellRenderer cellExtent.	^offset! !!CellRenderer methodsFor: 'as yet unclassified' stamp: 'Patrick 6/18/2017 14:32' prior: 33871362!gridFormOffset	| diff countX countY offset |	diff := CellRenderer cellExtent.	countX := (self position x) - 1.	countY := (self position y) - 1.	^offset! !!CellRenderer methodsFor: 'as yet unclassified' stamp: 'Patrick 6/18/2017 14:32' prior: 33871552!gridFormOffset	| diff countX countY offset |	diff := CellRenderer cellExtent.	countX := (self position x) - 1.	countY := (self position y) - 1.	offset := (diff*countX)@(diff*countY).	^offset! !!RenderTest methodsFor: 'tests' stamp: 'Patrick 6/18/2017 14:34' prior: 33870693!testCellOffsets	| grid form cellLoc renderer offset |	grid := Grid newOfSize: 30@30.	form := Form extent: (SnakeGame gameBoardExtentFor: grid) depth: Display depth.	form fillColor: (Color r: 0.9 g: 0.9 b: 0.9 ). "gray background"	cellLoc := 1@1.	renderer := CellRenderer new.	renderer		position: cellLoc;		cellGrid: grid;		cellForm: form.	renderer render.	offset := renderer gridFormOffset.	self should: [ offset := 0@0 ]! !!RenderTest methodsFor: 'tests' stamp: 'Patrick 6/18/2017 14:34' prior: 33872092!testCellOffsets	| grid form cellLoc renderer offset |	grid := Grid newOfSize: 30@30.	form := Form extent: (SnakeGame gameBoardExtentFor: grid) depth: Display depth.	form fillColor: (Color r: 0.9 g: 0.9 b: 0.9 ). "gray background"	cellLoc := 1@1.	renderer := CellRenderer new.	renderer		position: cellLoc;		cellGrid: grid;		cellForm: form.	renderer render.	offset := renderer gridFormOffset.	self should: [ offset := 0@0 ].! !!RenderTest methodsFor: 'tests' stamp: 'Patrick 6/18/2017 14:34' prior: 33872612!testCellOffsets	| grid form cellLoc renderer offset |	grid := Grid newOfSize: 30@30.	form := Form extent: (SnakeGame gameBoardExtentFor: grid) depth: Display depth.	form fillColor: (Color r: 0.9 g: 0.9 b: 0.9 ). "gray background"	cellLoc := 1@1.	renderer := CellRenderer new.	renderer		position: cellLoc;		cellGrid: grid;		cellForm: form.	renderer render.	offset := renderer gridFormOffset.	self should: [ offset = (0@0) ].! !!CellRenderer methodsFor: 'as yet unclassified' stamp: 'Patrick 6/18/2017 14:35' prior: 33871810!gridFormOffset	| diff countX countY offset |	diff := CellRenderer cellExtent.	countX := (self position x) - 1.	countY := (self position y) - 1.	offset := ((diff*countX)@(diff*countY)).	^offset! !!CellRenderer methodsFor: 'as yet unclassified' stamp: 'Patrick 6/18/2017 14:36' prior: 33873671!gridFormOffset	| diff countX countY offset |	diff := CellRenderer cellExtent.	countX := (self position x) - 1.	countY := (self position y) - 1.	offset := diff*(countX@countY).	^offset! !!RenderTest methodsFor: 'tests' stamp: 'Patrick 6/18/2017 14:37' prior: 33873133!testCellOffsets	| grid form cellLoc renderer offset |	grid := Grid newOfSize: 30@30.	form := Form extent: (SnakeGame gameBoardExtentFor: grid) depth: Display depth.	form fillColor: (Color r: 0.9 g: 0.9 b: 0.9 ). "gray background"	renderer := CellRenderer new.	renderer		position: cellLoc;		cellGrid: grid;		cellForm: form.	offset := renderer gridFormOffset.	cellLoc := 1@1.	self should: [ offset = (0@0) ].! !!RenderTest methodsFor: 'tests' stamp: 'Patrick 6/18/2017 14:37' prior: 33874246!testCellOffsets	| grid form cellLoc renderer offset |	grid := Grid newOfSize: 30@30.	form := Form extent: (SnakeGame gameBoardExtentFor: grid) depth: Display depth.	form fillColor: (Color r: 0.9 g: 0.9 b: 0.9 ). "gray background"	renderer := CellRenderer new.	cellLoc := 1@1.	renderer		position: cellLoc;		cellGrid: grid;		cellForm: form.	offset := renderer gridFormOffset.	self should: [ offset = (0@0) ].! !!RenderTest methodsFor: 'tests' stamp: 'Patrick 6/18/2017 14:37' prior: 33874752!testCellOffsets	| grid form cellLoc renderer offset |	grid := Grid newOfSize: 30@30.	form := Form extent: (SnakeGame gameBoardExtentFor: grid) depth: Display depth.	form fillColor: (Color r: 0.9 g: 0.9 b: 0.9 ). "gray background"	renderer := CellRenderer new.	cellLoc := 1@1.	renderer		position: cellLoc;		cellGrid: grid;		cellForm: form.	offset := renderer gridFormOffset.	self should: [ offset = (0@0) ].! !!RenderTest methodsFor: 'tests' stamp: 'Patrick 6/18/2017 14:38' prior: 33875259!testCellOffsets	| grid form cellLoc renderer offset |	grid := Grid newOfSize: 30@30.	form := Form extent: (SnakeGame gameBoardExtentFor: grid) depth: Display depth.	form fillColor: (Color r: 0.9 g: 0.9 b: 0.9 ). "gray background"	renderer := CellRenderer new.	cellLoc := 1@1.	renderer		position: cellLoc;		cellGrid: grid;		cellForm: form.	offset := renderer gridFormOffset.	self should: [ offset = (0@0) ].! !!RenderTest methodsFor: 'tests' stamp: 'Patrick 6/18/2017 14:38' prior: 33875764!testCellOffsets	| grid form cellLoc renderer offset |	grid := Grid newOfSize: 30@30.	form := Form extent: (SnakeGame gameBoardExtentFor: grid) depth: Display depth.	form fillColor: (Color r: 0.9 g: 0.9 b: 0.9 ). "gray background"	renderer := CellRenderer new.	cellLoc := 3@1.	renderer		position: cellLoc;		cellGrid: grid;		cellForm: form.	offset := renderer gridFormOffset.	self should: [ offset = (0@0) ].! !!RenderTest methodsFor: 'tests' stamp: 'Patrick 6/18/2017 14:38' prior: 33876269!testCellOffsets	| grid form cellLoc renderer offset |	grid := Grid newOfSize: 30@30.	form := Form extent: (SnakeGame gameBoardExtentFor: grid) depth: Display depth.	form fillColor: (Color r: 0.9 g: 0.9 b: 0.9 ). "gray background"	renderer := CellRenderer new.	cellLoc := 3@1.	renderer		position: cellLoc;		cellGrid: grid;		cellForm: form.	offset := renderer gridFormOffset.	self should: [ offset = (60@0) ].! !!RenderTest methodsFor: 'tests' stamp: 'Patrick 6/18/2017 14:38' prior: 33876774!testCellOffsets	| grid form cellLoc renderer offset |	grid := Grid newOfSize: 30@30.	form := Form extent: (SnakeGame gameBoardExtentFor: grid) depth: Display depth.	form fillColor: (Color r: 0.9 g: 0.9 b: 0.9 ). "gray background"	renderer := CellRenderer new.	cellLoc := 3@1.	renderer		position: cellLoc;		cellGrid: grid;		cellForm: form.	offset := renderer gridFormOffset.	self should: [ offset = (50@0) ].! !!RenderTest methodsFor: 'tests' stamp: 'Patrick 6/18/2017 14:39' prior: 33877280!testCellOffsets	| grid form cellLoc renderer offset |	grid := Grid newOfSize: 30@30.	form := Form extent: (SnakeGame gameBoardExtentFor: grid) depth: Display depth.	form fillColor: (Color r: 0.9 g: 0.9 b: 0.9 ). "gray background"	renderer := CellRenderer new.		cellLoc := 3@1.	renderer 	position: cellLoc; cellGrid: grid; cellForm: form.	offset := renderer gridFormOffset.	self should: [ offset = (50@0) ].		cellLoc := 3@3.	renderer 	position: cellLoc; cellGrid: grid; cellForm: form.	offset := renderer gridFormOffset.	self should: [ offset = (50@50) ].		cellLoc := 1@3.	renderer 	position: cellLoc; cellGrid: grid; cellForm: form.	offset := renderer gridFormOffset.	self should: [ offset = (0@50) ].! !!RenderTest methodsFor: 'tests' stamp: 'Patrick 6/18/2017 14:40' prior: 33877786!testCellOffsets	| grid form cellLoc renderer offset |	grid := Grid newOfSize: 30@30.	form := Form extent: (SnakeGame gameBoardExtentFor: grid) depth: Display depth.	form fillColor: (Color r: 0.9 g: 0.9 b: 0.9 ). "gray background"	renderer := CellRenderer new.		cellLoc := 3@1.	renderer 	position: cellLoc; cellGrid: grid; cellForm: form.	offset := renderer gridFormOffset.	self should: [ offset = (50@0) ].		cellLoc := 3@3.	renderer 	position put: cellLoc.	offset := renderer gridFormOffset.	self should: [ offset = (50@50) ].		cellLoc := 1@3.	renderer 	position: cellLoc.	offset := renderer gridFormOffset.	self should: [ offset = (0@50) ].! !!RenderTest methodsFor: 'tests' stamp: 'Patrick 6/18/2017 14:40' prior: 33878593!testCellOffsets	| grid form cellLoc renderer offset |	grid := Grid newOfSize: 30@30.	form := Form extent: (SnakeGame gameBoardExtentFor: grid) depth: Display depth.	form fillColor: (Color r: 0.9 g: 0.9 b: 0.9 ). "gray background"	renderer := CellRenderer new.		cellLoc := 3@1.	renderer 	position: cellLoc; cellGrid: grid; cellForm: form.	offset := renderer gridFormOffset.	self should: [ offset = (50@0) ].		cellLoc := 3@3.	renderer 	position put: cellLoc.	offset := renderer gridFormOffset.	self should: [ offset = (50@50) ].		cellLoc := 1@3.	renderer 	position put: cellLoc.	offset := renderer gridFormOffset.	self should: [ offset = (0@50) ].! !!RenderTest methodsFor: 'tests' stamp: 'Patrick 6/18/2017 14:40' prior: 33879340!testCellOffsets	| grid form cellLoc renderer offset |	grid := Grid newOfSize: 30@30.	form := Form extent: (SnakeGame gameBoardExtentFor: grid) depth: Display depth.	form fillColor: (Color r: 0.9 g: 0.9 b: 0.9 ). "gray background"	renderer := CellRenderer new.		cellLoc := 3@1.	renderer 	position: cellLoc; cellGrid: grid; cellForm: form.	offset := renderer gridFormOffset.	self should: [ offset = (50@0) ].		cellLoc := 3@3.	renderer 	position: cellLoc.	offset := renderer gridFormOffset.	self should: [ offset = (50@50) ].		cellLoc := 1@3.	renderer 	position: cellLoc.	offset := renderer gridFormOffset.	self should: [ offset = (0@50) ].! !!RenderTest methodsFor: 'tests' stamp: 'Patrick 6/18/2017 14:40' prior: 33880091!testCellOffsets	| grid form cellLoc renderer offset |	grid := Grid newOfSize: 30@30.	form := Form extent: (SnakeGame gameBoardExtentFor: grid) depth: Display depth.	form fillColor: (Color r: 0.9 g: 0.9 b: 0.9 ). "gray background"	renderer := CellRenderer new.		cellLoc := 3@1.	renderer 	position: cellLoc; cellGrid: grid; cellForm: form.	offset := renderer gridFormOffset.	self should: [ offset = (50@0) ].		cellLoc := 3@3.	renderer 	position: cellLoc.	self should: [ offset = (50@50) ].		cellLoc := 1@3.	renderer 	position: cellLoc.	self should: [ offset = (0@50) ].! !!RenderTest methodsFor: 'tests' stamp: 'Patrick 6/18/2017 14:40' prior: 33880834!testCellOffsets	| grid form cellLoc renderer offset |	grid := Grid newOfSize: 30@30.	form := Form extent: (SnakeGame gameBoardExtentFor: grid) depth: Display depth.	form fillColor: (Color r: 0.9 g: 0.9 b: 0.9 ). "gray background"	renderer := CellRenderer new.		cellLoc := 3@1.	renderer 	position: cellLoc; cellGrid: grid; cellForm: form.	offset := renderer gridFormOffset.	self should: [ offset = (50@0) ].		cellLoc := 3@3.	renderer 	position: cellLoc.	offset := renderer gridFormOffset.	self should: [ offset = (50@50) ].		cellLoc := 1@3.	renderer 	position: cellLoc.	offset := renderer gridFormOffset.	self should: [ offset = (0@50) ].! !!CellRenderer methodsFor: 'drawing' stamp: 'Patrick 6/18/2017 14:43'!renderTopBorder	| line diff offset x1 y1 x2 y2 |	diff := CellRenderer cellExtent.! !!CellRenderer methodsFor: 'drawing' stamp: 'Patrick 6/18/2017 14:43' prior: 33882236!renderTopBorder	| line diff offset x1 y1 x2 y2 |	diff := CellRenderer cellExtent.	offset := self gridFormOffset.	! !!CellRenderer methodsFor: 'drawing' stamp: 'Patrick 6/18/2017 14:43' prior: 33882409!renderTopBorder	| line diff offset x1 y1 x2 y2 |	diff := CellRenderer cellExtent.	offset := self gridFormOffset.	x1 := offset.! !!CellRenderer methodsFor: 'drawing' stamp: 'Patrick 6/18/2017 14:44' prior: 33882616!renderTopBorder	| line diff offset x1 y1 x2 y2 |	diff := CellRenderer cellExtent.	offset := self gridFormOffset.	x1 := offset x.	x2 := offset x*2.! !!CellRenderer methodsFor: 'drawing' stamp: 'Patrick 6/18/2017 14:44' prior: 33882836!renderTopBorder	| line diff offset x1 y1 x2 y2 |	diff := CellRenderer cellExtent.	offset := self gridFormOffset.	x1 := offset x.	x2 := offset x + diff x.! !!CellRenderer methodsFor: 'drawing' stamp: 'Patrick 6/18/2017 14:44' prior: 33883077!renderTopBorder	| line diff offset x1 y1 x2 y2 |	diff := CellRenderer cellExtent.	offset := self gridFormOffset.	x1 := offset x.	x2 := offset x + diff x.	y1 := offset y.	y2 := offset y.! !!CellRenderer methodsFor: 'drawing' stamp: 'Patrick 6/18/2017 14:46' prior: 33883325!renderTopBorder	| line diff offset x1 y1 x2 y2 |	diff := CellRenderer cellExtent.	offset := self gridFormOffset.	x1 := offset x.	x2 := offset x + diff x.	y1 := offset y.	y2 := offset y.	line := LineMorph		from: x1@y1;		to: x1@y1;		withForm: (Form extent: 1@1 depth: 8)		! !!CellRenderer methodsFor: 'drawing' stamp: 'Patrick 6/18/2017 14:47' prior: 33883607!renderTopBorder	| line diff offset x1 y1 x2 y2 |	diff := CellRenderer cellExtent.	offset := self gridFormOffset.	x1 := offset x.	x2 := offset x + diff x.	y1 := offset y.	y2 := offset y.	line := LineMorph		from: x1@y1;		to: x1@y1;		withForm: (Form extent: 1@1 depth: 8) fillWhite.	line displayOn: self cellForm.		! !!CellRenderer methodsFor: 'drawing' stamp: 'Patrick 6/18/2017 14:48' prior: 33768221!renderBorder	self renderTopBorder.	"renderBottomBorder.	renderLeftBorder.	renderRightBorder."! !!CellRenderer methodsFor: 'drawing' stamp: 'Patrick 6/18/2017 14:48' prior: 33884392!renderBorder	self renderTopBorder.	self renderBottomBorder.	self renderLeftBorder.	self renderRightBorder.! !!CellRenderer methodsFor: 'drawing' stamp: 'Patrick 6/18/2017 14:49'!renderBottomBorder	| line diff offset x1 y1 x2 y2 |	diff := CellRenderer cellExtent.	offset := self gridFormOffset.	x1 := offset x.	x2 := offset x + diff x.	y1 := offset y + diff y.	y2 := offset y + diff y.	line := LineMorph		from: x1@y1;		to: x1@y1;		withForm: (Form extent: 1@1 depth: 8) fillWhite.	line displayOn: self cellForm.		! !!CellRenderer methodsFor: 'drawing' stamp: 'Patrick 6/18/2017 14:50'!renderLeftBorder	| line diff offset x1 y1 x2 y2 |	diff := CellRenderer cellExtent.	offset := self gridFormOffset.	x1 := offset x.	x2 := offset x.	y1 := offset y.	y2 := offset y + diff.	line := LineMorph		from: x1@y1;		to: x1@y1;		withForm: (Form extent: 1@1 depth: 8) fillWhite.	line displayOn: self cellForm.		! !!CellRenderer methodsFor: 'drawing' stamp: 'Patrick 6/18/2017 14:50'!renderRightBorder	| line diff offset x1 y1 x2 y2 |	diff := CellRenderer cellExtent.	offset := self gridFormOffset.	x1 := offset x + diff x.	x2 := offset x + diff x.	y1 := offset y.	y2 := offset y.	line := LineMorph		from: x1@y1;		to: x1@y1;		withForm: (Form extent: 1@1 depth: 8) fillWhite.	line displayOn: self cellForm.		! !!CellRenderer methodsFor: 'drawing' stamp: 'Patrick 6/18/2017 14:50' prior: 33885579!renderRightBorder	| line diff offset x1 y1 x2 y2 |	diff := CellRenderer cellExtent.	offset := self gridFormOffset.	x1 := offset x + diff x.	x2 := offset x + diff x.	y1 := offset y.	y2 := offset y + diff x.	line := LineMorph		from: x1@y1;		to: x1@y1;		withForm: (Form extent: 1@1 depth: 8) fillWhite.	line displayOn: self cellForm.		! !!CellRenderer methodsFor: 'drawing' stamp: 'Patrick 6/18/2017 14:50' prior: 33883978!renderTopBorder	| line diff offset x1 y1 x2 y2 |	diff := self cellExtent.	offset := self gridFormOffset.	x1 := offset x.	x2 := offset x + diff x.	y1 := offset y.	y2 := offset y.	line := LineMorph		from: x1@y1;		to: x1@y1;		withForm: (Form extent: 1@1 depth: 8) fillWhite.	line displayOn: self cellForm.		! !!CellRenderer methodsFor: 'drawing' stamp: 'Patrick 6/18/2017 14:50' prior: 33886004!renderRightBorder	| line diff offset x1 y1 x2 y2 |	diff := self cellExtent.	offset := self gridFormOffset.	x1 := offset x + diff x.	x2 := offset x + diff x.	y1 := offset y.	y2 := offset y + diff x.	line := LineMorph		from: x1@y1;		to: x1@y1;		withForm: (Form extent: 1@1 depth: 8) fillWhite.	line displayOn: self cellForm.		! !!CellRenderer methodsFor: 'drawing' stamp: 'Patrick 6/18/2017 14:50' prior: 33885182!renderLeftBorder	| line diff offset x1 y1 x2 y2 |	diff := self cellExtent.	offset := self gridFormOffset.	x1 := offset x.	x2 := offset x.	y1 := offset y.	y2 := offset y + diff.	line := LineMorph		from: x1@y1;		to: x1@y1;		withForm: (Form extent: 1@1 depth: 8) fillWhite.	line displayOn: self cellForm.		! !!CellRenderer methodsFor: 'drawing' stamp: 'Patrick 6/18/2017 14:51' prior: 33884763!renderBottomBorder	| line diff offset x1 y1 x2 y2 |	diff := self cellExtent.	offset := self gridFormOffset.	x1 := offset x.	x2 := offset x + diff x.	y1 := offset y + diff y.	y2 := offset y + diff y.	line := LineMorph		from: x1@y1;		to: x1@y1;		withForm: (Form extent: 1@1 depth: 8) fillWhite.	line displayOn: self cellForm.		! !!CellRenderer methodsFor: 'drawing' stamp: 'Patrick 6/18/2017 14:52' prior: 33887675!renderBottomBorder	| line diff offset x1 y1 x2 y2 |	diff := self cellExtent.	offset := self gridFormOffset.	x1 := offset x.	x2 := offset x + diff x.	y1 := offset y + diff y.	y2 := offset y + diff y.	line := LineMorph		from: x1@y1;		to: x1@y1;		withForm: (Form extent: 1@1 depth: 8) fillWhite.	line displayOn: self cellForm.		! !!CellRenderer methodsFor: 'drawing' stamp: 'Patrick 6/18/2017 14:54' prior: 33888102!renderBottomBorder	| line diff offset x1 y1 x2 y2 |	diff := self cellExtent.	offset := self gridFormOffset.	x1 := offset x.	x2 := offset x + diff x.	y1 := offset y + diff y.	y2 := offset y + diff y.	self cellForm getCanvas line: (x1@y1) to: (x2@y2) width: 1 color: #white. 	"line := LineMorph		from: x1@y1;		to: x1@y1;		withForm: (Form extent: 1@1 depth: 8) fillWhite.	line displayOn: self cellForm."! !!CellRenderer methodsFor: 'drawing' stamp: 'Patrick 6/18/2017 14:54' prior: 33888529!renderBottomBorder	| diff offset x1 y1 x2 y2 |	diff := self cellExtent.	offset := self gridFormOffset.	x1 := offset x.	x2 := offset x + diff x.	y1 := offset y + diff y.	y2 := offset y + diff y.	self cellForm getCanvas line: (x1@y1) to: (x2@y2) width: 1 color: #white. 	"line := LineMorph		from: x1@y1;		to: x1@y1;		withForm: (Form extent: 1@1 depth: 8) fillWhite.	line displayOn: self cellForm."! !!CellRenderer methodsFor: 'drawing' stamp: 'Patrick 6/18/2017 14:55' prior: 33889032!renderBottomBorder	| diff offset x1 y1 x2 y2 |	diff := self cellExtent.	offset := self gridFormOffset.	x1 := offset x.	x2 := offset x + diff x.	y1 := offset y + diff y.	y2 := offset y + diff y.	self cellForm getCanvas line: (x1@y1) to: (x2@y2) width: 1 color: Color white.	"line := LineMorph		from: x1@y1;		to: x1@y1;		withForm: (Form extent: 1@1 depth: 8) fillWhite.	line displayOn: self cellForm."! !!CellRenderer methodsFor: 'drawing' stamp: 'Patrick 6/18/2017 14:55' prior: 33887270!renderLeftBorder	| line diff offset x1 y1 x2 y2 |	diff := self cellExtent.	offset := self gridFormOffset.	x1 := offset x.	x2 := offset x.	y1 := offset y.	y2 := offset y + diff.	self cellForm getCanvas line: (x1@y1) to: (x2@y2) width: 1 color: Color white.! !!CellRenderer methodsFor: 'drawing' stamp: 'Patrick 6/18/2017 14:55' prior: 33886844!renderRightBorder	| line diff offset x1 y1 x2 y2 |	diff := self cellExtent.	offset := self gridFormOffset.	x1 := offset x + diff x.	x2 := offset x + diff x.	y1 := offset y.	y2 := offset y + diff x.	self cellForm getCanvas line: (x1@y1) to: (x2@y2) width: 1 color: Color white.! !!CellRenderer methodsFor: 'drawing' stamp: 'Patrick 6/18/2017 14:55' prior: 33886438!renderTopBorder	| line diff offset x1 y1 x2 y2 |	diff := self cellExtent.	offset := self gridFormOffset.	x1 := offset x.	x2 := offset x + diff x.	y1 := offset y.	y2 := offset y.	self cellForm getCanvas line: (x1@y1) to: (x2@y2) width: 1 color: Color white.! !!CellRenderer methodsFor: 'drawing' stamp: 'Patrick 6/18/2017 14:55' prior: 33890759!renderTopBorder	| diff offset x1 y1 x2 y2 |	diff := self cellExtent.	offset := self gridFormOffset.	x1 := offset x.	x2 := offset x + diff x.	y1 := offset y.	y2 := offset y.	self cellForm getCanvas line: (x1@y1) to: (x2@y2) width: 1 color: Color white.! !!CellRenderer methodsFor: 'drawing' stamp: 'Patrick 6/18/2017 14:55' prior: 33890385!renderRightBorder	| diff offset x1 y1 x2 y2 |	diff := self cellExtent.	offset := self gridFormOffset.	x1 := offset x + diff x.	x2 := offset x + diff x.	y1 := offset y.	y2 := offset y + diff x.	self cellForm getCanvas line: (x1@y1) to: (x2@y2) width: 1 color: Color white.! !!CellRenderer methodsFor: 'drawing' stamp: 'Patrick 6/18/2017 14:55' prior: 33890032!renderLeftBorder	| diff offset x1 y1 x2 y2 |	diff := self cellExtent.	offset := self gridFormOffset.	x1 := offset x.	x2 := offset x.	y1 := offset y.	y2 := offset y + diff.	self cellForm getCanvas line: (x1@y1) to: (x2@y2) width: 1 color: Color white.! !!CellRenderer methodsFor: 'drawing' stamp: 'Patrick 6/18/2017 14:55' prior: 33889530!renderBottomBorder	| diff offset x1 y1 x2 y2 |	diff := CellRenderer cellExtent.	offset := self gridFormOffset.	x1 := offset x.	x2 := offset x + diff x.	y1 := offset y + diff y.	y2 := offset y + diff y.	self cellForm getCanvas line: (x1@y1) to: (x2@y2) width: 1 color: Color white.	"line := LineMorph		from: x1@y1;		to: x1@y1;		withForm: (Form extent: 1@1 depth: 8) fillWhite.	line displayOn: self cellForm."! !!ManifestSnakeGameModel class methodsFor: 'code-critics' stamp: 'Patrick 6/18/2017 14:55'!ruleRBRefersToClassRuleV1FalsePositive	^ #()! !!ManifestSnakeGameModel class methodsFor: 'code-critics' stamp: 'Patrick 6/18/2017 14:55' prior: 33892694!ruleRBRefersToClassRuleV1FalsePositive	^ #(#(#(#RGClassDefinition #(#CellRenderer)) #'2017-06-18T14:55:56.37111+02:00') )! !!CellRenderer methodsFor: 'drawing' stamp: 'Patrick 6/18/2017 14:56' prior: 33891831!renderLeftBorder	| diff offset x1 y1 x2 y2 |	diff := CellRenderer cellExtent.	offset := self gridFormOffset.	x1 := offset x.	x2 := offset x.	y1 := offset y.	y2 := offset y + diff.	self cellForm getCanvas line: (x1@y1) to: (x2@y2) width: 1 color: Color white.! !!CellRenderer methodsFor: 'drawing' stamp: 'Patrick 6/18/2017 14:56' prior: 33891462!renderRightBorder	| diff offset x1 y1 x2 y2 |	diff := CellRenderer cellExtent.	offset := self gridFormOffset.	x1 := offset x + diff x.	x2 := offset x + diff x.	y1 := offset y.	y2 := offset y + diff x.	self cellForm getCanvas line: (x1@y1) to: (x2@y2) width: 1 color: Color white.! !!CellRenderer methodsFor: 'drawing' stamp: 'Patrick 6/18/2017 14:56' prior: 33891113!renderTopBorder	| diff offset x1 y1 x2 y2 |	diff := CellRenderer cellExtent.	offset := self gridFormOffset.	x1 := offset x.	x2 := offset x + diff x.	y1 := offset y.	y2 := offset y.	self cellForm getCanvas line: (x1@y1) to: (x2@y2) width: 1 color: Color white.! !!CellRenderer methodsFor: 'drawing' stamp: 'Patrick 6/18/2017 14:58' prior: 33892179!renderBottomBorder	| diff offset x1 y1 x2 y2 |	diff := CellRenderer cellExtent.	offset := self gridFormOffset.	x1 := offset x.	x2 := offset x + diff x.	y1 := offset y + diff y.	y2 := offset y + diff y.	self cellForm getCanvas line: x1@y1 to: x2@y2 width: 1 color: Color white.	"line := LineMorph		from: x1@y1;		to: x1@y1;		withForm: (Form extent: 1@1 depth: 8) fillWhite.	line displayOn: self cellForm."! !!CellRenderer methodsFor: 'drawing' stamp: 'Patrick 6/18/2017 14:59' prior: 33893062!renderLeftBorder	| diff offset x1 y1 x2 y2 |	diff := CellRenderer cellExtent.	offset := self gridFormOffset.	x1 := offset x.	x2 := offset x.	y1 := offset y.	y2 := offset y + diff.	self cellForm getCanvas line: x1@y1 to: x2@y2 width: 1 color: Color white.! !!CellRenderer methodsFor: 'drawing' stamp: 'Patrick 6/18/2017 14:59' prior: 33893418!renderRightBorder	| diff offset x1 y1 x2 y2 |	diff := CellRenderer cellExtent.	offset := self gridFormOffset.	x1 := offset x + diff x.	x2 := offset x + diff x.	y1 := offset y.	y2 := offset y + diff x.	self cellForm getCanvas line: x1@y1 to: x2@y2 width: 1 color: Color white.! !!CellRenderer methodsFor: 'drawing' stamp: 'Patrick 6/18/2017 14:59' prior: 33893795!renderTopBorder	| diff offset x1 y1 x2 y2 |	diff := CellRenderer cellExtent.	offset := self gridFormOffset.	x1 := offset x.	x2 := offset x + diff x.	y1 := offset y.	y2 := offset y.	self cellForm getCanvas line: x1@y1 to: x2@y2 width: 1 color: Color white.! !!CellRenderer methodsFor: 'drawing' stamp: 'Patrick 6/18/2017 15:11' prior: 33894152!renderBottomBorder	| line diff offset x1 y1 x2 y2 |	diff := CellRenderer cellExtent.	offset := self gridFormOffset.	x1 := offset x.	x2 := offset x + diff x.	y1 := offset y + diff y.	y2 := offset y + diff y.	line := LineMorph from: x1@y1 to: x1@y1 color: Color white width: 1.	line displayOn: self cellForm.! !!CellRenderer methodsFor: 'drawing' stamp: 'Patrick 6/18/2017 15:11' prior: 33894658!renderLeftBorder	| diff offset x1 y1 x2 y2 |	diff := CellRenderer cellExtent.	offset := self gridFormOffset.	x1 := offset x.	x2 := offset x.	y1 := offset y.	y2 := offset y + diff.	self cellForm getCanvas line: x1@y1 to: x2@y2 width: 1 color: Color white.! !!CellRenderer methodsFor: 'drawing' stamp: 'Patrick 6/18/2017 15:11' prior: 33896141!renderLeftBorder	| line diff offset x1 y1 x2 y2 |	diff := CellRenderer cellExtent.	offset := self gridFormOffset.	x1 := offset x.	x2 := offset x.	y1 := offset y.	y2 := offset y + diff.	line := LineMorph from: x1@y1 to: x1@y1 color: Color white width: 1.	line displayOn: self cellForm.	"self cellForm getCanvas line: x1@y1 to: x2@y2 width: 1 color: Color white."! !!CellRenderer methodsFor: 'drawing' stamp: 'Patrick 6/18/2017 15:12' prior: 33895010!renderRightBorder	| line diff offset x1 y1 x2 y2 |	diff := CellRenderer cellExtent.	offset := self gridFormOffset.	x1 := offset x + diff x.	x2 := offset x + diff x.	y1 := offset y.	y2 := offset y + diff x.	line := LineMorph from: x1@y1 to: x1@y1 color: Color white width: 1.	line displayOn: self cellForm.	"self cellForm getCanvas line: x1@y1 to: x2@y2 width: 1 color: Color white."! !!CellRenderer methodsFor: 'drawing' stamp: 'Patrick 6/18/2017 15:12' prior: 33895383!renderTopBorder	| line diff offset x1 y1 x2 y2 |	diff := CellRenderer cellExtent.	offset := self gridFormOffset.	x1 := offset x.	x2 := offset x + diff x.	y1 := offset y.	y2 := offset y.	line := LineMorph from: x1@y1 to: x1@y1 color: Color white width: 1.	line displayOn: self cellForm.	"self cellForm getCanvas line: x1@y1 to: x2@y2 width: 1 color: Color white."! !!CellRenderer methodsFor: 'drawing' stamp: 'Patrick 6/18/2017 15:13' prior: 33897436!renderTopBorder	| line diff offset x1 y1 x2 y2 |	diff := CellRenderer cellExtent.	offset := self gridFormOffset.	x1 := offset x.	x2 := offset x + diff x.	y1 := offset y.	y2 := offset y.	line := LineMorph from: x1@y1 to: x1@y1 color: Color white width: 1.	"line displayOn: self cellForm.	self cellForm getCanvas line: x1@y1 to: x2@y2 width: 1 color: Color white."! !!CellRenderer methodsFor: 'drawing' stamp: 'Patrick 6/18/2017 15:13' prior: 33896954!renderRightBorder	| line diff offset x1 y1 x2 y2 |	diff := CellRenderer cellExtent.	offset := self gridFormOffset.	x1 := offset x + diff x.	x2 := offset x + diff x.	y1 := offset y.	y2 := offset y + diff x.	line := LineMorph from: x1@y1 to: x1@y1 color: Color white width: 1.	"line displayOn: self cellForm.	self cellForm getCanvas line: x1@y1 to: x2@y2 width: 1 color: Color white."! !!CellRenderer methodsFor: 'drawing' stamp: 'Patrick 6/18/2017 15:13' prior: 33896493!renderLeftBorder	| line diff offset x1 y1 x2 y2 |	diff := CellRenderer cellExtent.	offset := self gridFormOffset.	x1 := offset x.	x2 := offset x.	y1 := offset y.	y2 := offset y + diff.	line := LineMorph from: x1@y1 to: x1@y1 color: Color white width: 1.	"line displayOn: self cellForm.	self cellForm getCanvas line: x1@y1 to: x2@y2 width: 1 color: Color white."! !!CellRenderer methodsFor: 'drawing' stamp: 'Patrick 6/18/2017 15:13' prior: 33895736!renderBottomBorder	| line diff offset x1 y1 x2 y2 |	diff := CellRenderer cellExtent.	offset := self gridFormOffset.	x1 := offset x.	x2 := offset x + diff x.	y1 := offset y + diff y.	y2 := offset y + diff y.	line := LineMorph from: x1@y1 to: x1@y1 color: Color white width: 1.	"line displayOn: self cellForm."! !!CellRenderer methodsFor: 'drawing' stamp: 'Patrick 6/18/2017 15:16' prior: 33899303!renderBottomBorder	| line diff offset x1 y1 x2 y2 |	diff := CellRenderer cellExtent.	offset := self gridFormOffset.	x1 := offset x.	x2 := offset x + diff x.	y1 := offset y + diff y.	y2 := offset y + diff y.	line := LineMorph from: x1@y1 to: x1@y1 color: Color white width: 1.	line openInWorld.	"line displayOn: self cellForm."! !!CellRenderer methodsFor: 'drawing' stamp: 'Patrick 6/18/2017 15:16' prior: 33898842!renderLeftBorder	| line diff offset x1 y1 x2 y2 |	diff := CellRenderer cellExtent.	offset := self gridFormOffset.	x1 := offset x.	x2 := offset x.	y1 := offset y.	y2 := offset y + diff.	line := LineMorph from: x1@y1 to: x1@y1 color: Color white width: 1.	line openInWorld.	"line displayOn: self cellForm.	self cellForm getCanvas line: x1@y1 to: x2@y2 width: 1 color: Color white."! !!CellRenderer methodsFor: 'drawing' stamp: 'Patrick 6/18/2017 15:16' prior: 33898360!renderRightBorder	| line diff offset x1 y1 x2 y2 |	diff := CellRenderer cellExtent.	offset := self gridFormOffset.	x1 := offset x + diff x.	x2 := offset x + diff x.	y1 := offset y.	y2 := offset y + diff x.	line := LineMorph from: x1@y1 to: x1@y1 color: Color white width: 1.	line openInWorld.	"line displayOn: self cellForm.	self cellForm getCanvas line: x1@y1 to: x2@y2 width: 1 color: Color white."! !!CellRenderer methodsFor: 'drawing' stamp: 'Patrick 6/18/2017 15:16' prior: 33897898!renderTopBorder	| line diff offset x1 y1 x2 y2 |	diff := CellRenderer cellExtent.	offset := self gridFormOffset.	x1 := offset x.	x2 := offset x + diff x.	y1 := offset y.	y2 := offset y.	line := LineMorph from: x1@y1 to: x1@y1 color: Color white width: 1.	line openInWorld.	"line displayOn: self cellForm.	self cellForm getCanvas line: x1@y1 to: x2@y2 width: 1 color: Color white."! !Morph subclass: #SnakeGame	instanceVariableNames: 'grid'	classVariableNames: ''	package: 'Snake_Game_Graphics'!Morph subclass: #SnakeGame	instanceVariableNames: 'grid'	classVariableNames: ''	package: 'Snake_Game_Graphics'!Morph subclass: #SnakeGame	instanceVariableNames: 'grid area'	classVariableNames: ''	package: 'Snake_Game_Graphics'!!SnakeGame methodsFor: 'accessing' stamp: 'Patrick 6/18/2017 15:26'!area	^ area! !!SnakeGame methodsFor: 'accessing' stamp: 'Patrick 6/18/2017 15:26'!area: anObject	area := anObject! !!SnakeGame methodsFor: 'accessing' stamp: 'Patrick 6/18/2017 15:26' prior: 33901934!area   ^ area ifNil: [      area := FormCanvas extent: self extent.      self clear.      area]! !!SnakeGame methodsFor: 'accessing' stamp: 'Patrick 6/18/2017 15:27' prior: 33902140!area   ^ area ifNil: [      area := FormCanvas extent: (self gameBoardExtentFor: grid).      self clear.      area]! !!SnakeGame methodsFor: 'accessing' stamp: 'Patrick 6/18/2017 15:27' prior: 33902328!area   ^ area ifNil: [      area := FormCanvas extent: SnakeGame gameBoardExtentFor: grid.      self clear.      area]! !!SnakeGame methodsFor: 'as yet unclassified' stamp: 'Patrick 6/18/2017 15:28'!clear   self area fillColor: Color white.   self changed! !SnakeGame removeSelector: #area:!!SnakeGame methodsFor: 'accessing' stamp: 'Patrick 6/18/2017 15:28' prior: 33902536!area   ^ area ifNil: [      area := FormCanvas extent: self gameBoardExtentFor: grid.      self clear.      area]! !Morph subclass: #SnakeGame	instanceVariableNames: 'grid'	classVariableNames: ''	package: 'Snake_Game_Graphics'!SnakeGame removeSelector: #clear!SnakeGame removeSelector: #area!Object subclass: #SnakeGame	instanceVariableNames: 'grid'	classVariableNames: ''	package: 'Snake_Game_Graphics'!!CellRenderer methodsFor: 'drawing' stamp: 'Patrick 6/18/2017 15:35' prior: 33884579!renderBorder	self		renderTopBorder;		renderBottomBorder;		renderLeftBorder;		renderRightBorder.! !!CellRenderer methodsFor: 'drawing' stamp: 'Patrick 6/18/2017 15:35' prior: 33899710!renderBottomBorder	| line diff offset x1 y1 x2 y2 |	diff := CellRenderer cellExtent.	offset := self gridFormOffset.	x1 := offset x.	x2 := offset x + diff x.	y1 := offset y + diff y.	y2 := offset y + diff y.	line := LineMorph from: x1@y1 to: x1@y1 color: Color white width: 1.	line openInWindow.	"line displayOn: self cellForm."! !!CellRenderer methodsFor: 'drawing' stamp: 'Patrick 6/18/2017 15:40' prior: 33900136!renderLeftBorder	| line diff offset x1 y1 x2 y2 |	diff := CellRenderer cellExtent.	offset := self gridFormOffset.	x1 := offset x.	x2 := offset x.	y1 := offset y.	y2 := offset y + diff.	line := LineMorph from: x1@y1 to: x1@y1 color: Color white width: 1.	line openInWindow.	"line displayOn: self cellForm.	self cellForm getCanvas line: x1@y1 to: x2@y2 width: 1 color: Color white."! !!CellRenderer methodsFor: 'drawing' stamp: 'Patrick 6/18/2017 15:40' prior: 33900616!renderRightBorder	| line diff offset x1 y1 x2 y2 |	diff := CellRenderer cellExtent.	offset := self gridFormOffset.	x1 := offset x + diff x.	x2 := offset x + diff x.	y1 := offset y.	y2 := offset y + diff x.	line := LineMorph from: x1@y1 to: x1@y1 color: Color white width: 1.	line openInWindow.	"line displayOn: self cellForm.	self cellForm getCanvas line: x1@y1 to: x2@y2 width: 1 color: Color white."! !!CellRenderer methodsFor: 'drawing' stamp: 'Patrick 6/18/2017 15:40' prior: 33901117!renderTopBorder	| line diff offset x1 y1 x2 y2 |	diff := CellRenderer cellExtent.	offset := self gridFormOffset.	x1 := offset x.	x2 := offset x + diff x.	y1 := offset y.	y2 := offset y.	line := LineMorph from: x1@y1 to: x1@y1 color: Color white width: 1.	line openInWindow.	"line displayOn: self cellForm.	self cellForm getCanvas line: x1@y1 to: x2@y2 width: 1 color: Color white."! !!CellRenderer methodsFor: 'drawing' stamp: 'Patrick 6/18/2017 15:41' prior: 33905032!renderTopBorder	| line diff offset x1 y1 x2 y2 |	diff := CellRenderer cellExtent.	offset := self gridFormOffset.	x1 := offset x.	x2 := offset x + diff x.	y1 := offset y.	y2 := offset y.	! !!CellRenderer methodsFor: 'drawing' stamp: 'Patrick 6/18/2017 15:43' prior: 33905514!renderTopBorder	| line diff offset x1 y1 x2 y2 |	diff := CellRenderer cellExtent.	offset := self gridFormOffset.	x1 := offset x.	x2 := offset x + diff x.	y1 := offset y.	y2 := offset y.	"line := Line		from: x1@y1 		to: x2@y2 		withForm: (Form extent: 1@1 depth: 8) fillWhite. 	line displayOn: self cellForm." "depth: 8?"! !!CellRenderer methodsFor: 'drawing' stamp: 'Patrick 6/18/2017 15:55' prior: 33905798!renderTopBorder	| line diff offset x1 y1 x2 y2 |	diff := CellRenderer cellExtent.	offset := self gridFormOffset.	x1 := offset x.	x2 := offset x + diff x.	y1 := offset y.	y2 := offset y.	line := Form drawLine from: x1@y1 		to: x2@y2 		withForm: (Form extent: 1@1 depth: 8) fillWhite. 	line displayOn: self cellForm.! !!CellRenderer methodsFor: 'drawing' stamp: 'Patrick 6/18/2017 15:55' prior: 33906220!renderTopBorder	| line diff offset x1 y1 x2 y2 |	diff := CellRenderer cellExtent.	offset := self gridFormOffset.	x1 := offset x.	x2 := offset x + diff x.	y1 := offset y.	y2 := offset y.	line := Form drawLine from: x1@y1 to: x2@y2 		withForm: (Form extent: 1@1 depth: 8) fillWhite. 	line displayOn: self cellForm.! !!CellRenderer methodsFor: 'drawing' stamp: 'Patrick 6/18/2017 15:57' prior: 33906635!renderTopBorder	| line diff offset x1 y1 x2 y2 |	diff := CellRenderer cellExtent.	offset := self gridFormOffset.	x1 := offset x.	x2 := offset x + diff x.	y1 := offset y.	y2 := offset y.	line := Form.	line from put: x1@y1. 	line to put: x2@y2 		withForm: (Form extent: 1@1 depth: 8) fillWhite. 	line displayOn: self cellForm.! !!CellRenderer methodsFor: 'drawing' stamp: 'Patrick 6/18/2017 15:57' prior: 33907047!renderTopBorder	| line diff offset x1 y1 x2 y2 |	diff := CellRenderer cellExtent.	offset := self gridFormOffset.	x1 := offset x.	x2 := offset x + diff x.	y1 := offset y.	y2 := offset y.	line := Form.	line from put: x1@y1. 	line to put: x2@y2.	line fillColor put: Color white. 	line displayOn: self cellForm.! !!CellRenderer methodsFor: 'drawing' stamp: 'Patrick 6/18/2017 15:58' prior: 33903622!renderBottomBorder	| line diff offset x1 y1 x2 y2 |	diff := CellRenderer cellExtent.	offset := self gridFormOffset.	x1 := offset x.	x2 := offset x + diff x.	y1 := offset y + diff y.	y2 := offset y + diff y.	line := Form.	line from put: x1@y1. 	line to put: x2@y2.	line fillColor put: Color white. ! !!CellRenderer methodsFor: 'drawing' stamp: 'Patrick 6/18/2017 15:58' prior: 33907882!renderBottomBorder	| line diff offset x1 y1 x2 y2 |	diff := CellRenderer cellExtent.	offset := self gridFormOffset.	x1 := offset x.	x2 := offset x + diff x.	y1 := offset y + diff y.	y2 := offset y + diff y.	line := Form.	line from put: x1@y1. 	line to put: x2@y2.	line fillColor put: Color white. 	line displayOn: self cellForm.! !!CellRenderer methodsFor: 'drawing' stamp: 'Patrick 6/18/2017 15:58' prior: 33908280!renderBottomBorder	| line diff offset x1 y1 x2 y2 |	diff := CellRenderer cellExtent.	offset := self gridFormOffset.	x1 := offset x.	x2 := offset x + diff x.	y1 := offset y + diff y.	y2 := offset y + diff y.	line := Form.	line from put: x1@y1. 	line to put: x2@y2.	line fillColor put: Color black. 	line displayOn: self cellForm.! !!CellRenderer methodsFor: 'drawing' stamp: 'Patrick 6/18/2017 16:09' prior: 33908710!renderBottomBorder	| line diff offset x1 y1 x2 y2 |	diff := CellRenderer cellExtent.	offset := self gridFormOffset.	x1 := offset x.	x2 := offset x + diff x.	y1 := offset y + diff y.	y2 := offset y + diff y.	line := Form extent: (1@(diff x)).	line from put: x1@y1. 	line to put: x2@y2.	line fillColor put: Color black. 	line displayOn: self cellForm.! !!CellRenderer methodsFor: 'drawing' stamp: 'Patrick 6/18/2017 16:09' prior: 33909140!renderBottomBorder	| line diff offset x1 y1 x2 y2 |	diff := CellRenderer cellExtent.	offset := self gridFormOffset.	x1 := offset x.	x2 := offset x + diff x.	y1 := offset y + diff y.	y2 := offset y + diff y.	line := Form extent: 1@(diff x).	line from put: x1@y1. 	line to put: x2@y2.	line fillColor put: Color black. 	line displayOn: self cellForm.! !!CellRenderer methodsFor: 'drawing' stamp: 'Patrick 6/18/2017 16:09' prior: 33909591!renderBottomBorder	| line diff offset x1 y1 x2 y2 |	diff := CellRenderer cellExtent.	offset := self gridFormOffset.	x1 := offset x.	x2 := offset x + diff x.	y1 := offset y + diff y.	y2 := offset y + diff y.	line := Form extent: 1@(diff x) depth: Display depth.	line from put: x1@y1. 	line to put: x2@y2.	line fillColor put: Color black. 	line displayOn: self cellForm.! !!CellRenderer methodsFor: 'drawing' stamp: 'Patrick 6/18/2017 16:10' prior: 33910040!renderBottomBorder	| line diff offset x1 y1 x2 y2 |	diff := CellRenderer cellExtent.	offset := self gridFormOffset.	x1 := offset x.	x2 := offset x + diff x.	y1 := offset y + diff y.	y2 := offset y + diff y.	line := Form extent: 1@(diff x) depth: Display depth.	"line from put: x1@y1. 	line to put: x2@y2."	line fillColor put: Color black. 	line displayOn: self cellForm.! !!CellRenderer methodsFor: 'drawing' stamp: 'Patrick 6/18/2017 16:11' prior: 33910510!renderBottomBorder	| line diff offset x1 y1 x2 y2 |	diff := CellRenderer cellExtent.	offset := self gridFormOffset.	x1 := offset x.	x2 := offset x + diff x.	y1 := offset y + diff y.	y2 := offset y + diff y.	line := Form extent: (diff x)@1 depth: Display depth.	"line from put: x1@y1. 	line to put: x2@y2."	line fillColor put: Color black. 	line displayOn: self cellForm at: 1@(diff y).! !!CellRenderer methodsFor: 'drawing' stamp: 'Patrick 6/18/2017 16:11' prior: 33910982!renderBottomBorder	| line diff offset x1 y1 x2 y2 |	diff := CellRenderer cellExtent.	offset := self gridFormOffset.	x1 := offset x.	x2 := offset x + diff x.	y1 := offset y + diff y.	y2 := offset y + diff y.	line := Form extent: (diff x)@1 depth: Display depth.	"line from put: x1@y1. 	line to put: x2@y2."	line fillColor put: Color black. 	line displayAt: 1@(diff y).	"line displayOn: self cellForm at: 1@(diff y)."! !!CellRenderer methodsFor: 'drawing' stamp: 'Patrick 6/18/2017 16:12' prior: 33911469!renderBottomBorder	| line diff offset x1 y1 x2 y2 |	diff := CellRenderer cellExtent.	offset := self gridFormOffset.	x1 := offset x.	x2 := offset x + diff x.	y1 := offset y + diff y.	y2 := offset y + diff y.	line := Form extent: (diff x)@1 depth: Display depth.	"line from put: x1@y1. 	line to put: x2@y2."	line fillColor put: Color black. 	"line displayAt: 1@(diff y)."	"line displayOn: self cellForm at: 1@(diff y)."! !!CellRenderer methodsFor: 'drawing' stamp: 'Patrick 6/18/2017 16:12' prior: 33911987!renderBottomBorder	| line diff offset x1 y1 x2 y2 |	diff := CellRenderer cellExtent.	offset := self gridFormOffset.	x1 := offset x.	x2 := offset x + diff x.	y1 := offset y + diff y.	y2 := offset y + diff y.	line := Form extent: (diff x)@1 depth: Display depth.	"line from put: x1@y1. 	line to put: x2@y2."	line fillColor put: Color black. 	line displayAt: 1@(diff y).	"line displayOn: self cellForm at: 1@(diff y)."! !!CellRenderer methodsFor: 'drawing' stamp: 'Patrick 6/18/2017 16:12' prior: 33912507!renderBottomBorder	| line diff offset x1 y1 x2 y2 |	diff := CellRenderer cellExtent.	offset := self gridFormOffset.	x1 := offset x.	x2 := offset x + diff x.	y1 := offset y + diff y.	y2 := offset y + diff y.	line := Form extent: (300)@1 depth: Display depth.	"line from put: x1@y1. 	line to put: x2@y2."	line fillColor put: Color black. 	line displayAt: 1@200.	"line displayOn: self cellForm at: 1@(diff y)."! !!CellRenderer methodsFor: 'drawing' stamp: 'Patrick 6/18/2017 16:12' prior: 33913025!renderBottomBorder	| line diff offset x1 y1 x2 y2 |	diff := CellRenderer cellExtent.	offset := self gridFormOffset.	x1 := offset x.	x2 := offset x + diff x.	y1 := offset y + diff y.	y2 := offset y + diff y.	line := Form extent: (300)@1 depth: Display depth.	"line from put: x1@y1. 	line to put: x2@y2."	line fillColor put: Color black.	line displayAt: 1@200.	"line displayOn: self cellForm at: 1@(diff y)."! !!CellRenderer methodsFor: 'drawing' stamp: 'Patrick 6/18/2017 16:12' prior: 33913535!renderBottomBorder	| line diff offset x1 y1 x2 y2 |	diff := CellRenderer cellExtent.	offset := self gridFormOffset.	x1 := offset x.	x2 := offset x + diff x.	y1 := offset y + diff y.	y2 := offset y + diff y.	line := Form extent: (300)@2 depth: Display depth.	"line from put: x1@y1. 	line to put: x2@y2."	line fillColor put: Color black.	line displayAt: 1@200.	"line displayOn: self cellForm at: 1@(diff y)."! !!CellRenderer methodsFor: 'drawing' stamp: 'Patrick 6/18/2017 16:15' prior: 33914044!renderBottomBorder	| line diff offset x1 y1 x2 y2 |	diff := CellRenderer cellExtent.	offset := self gridFormOffset.	x1 := offset x.	x2 := offset x + diff x.	y1 := offset y + diff y.	y2 := offset y + diff y.	line := Form extent: (300)@2 depth: Display depth.	"line from put: x1@y1. 	line to put: x2@y2."	line fillColor put: Color black.	line displayAt: 1@200.	"line displayOn: self cellForm at: 1@(diff y)."! !----SNAPSHOT----2017-06-18T16:18:23.76111+02:00 Pharo6.1.image priorSource: 314778!