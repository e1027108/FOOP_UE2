OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2017-06-13T18:54:41.388761+02:00' ],		#prior : OmReference [ 'Pharo.471vex6082mpwt99oyjlxwqpu', '32' ],		#self : OmReference [ '1' ]	},	#content : EpCategoryAddition {		#classCategoryName : #Snake_Game,		#affectedPackageName : #Snake_Game	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2017-06-13T18:54:41.489761+02:00' ],		#prior : OmReference [ '1' ],		#self : OmReference [ '2' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Object',				#traitCompositionSource : '{}',				#definitionSource : 'Object subclass: #Game\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Snake_Game\''			},			#name : #Game,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'Game class\r\tinstanceVariableNames: \'\''				},				#name : #'Game class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #Game,					#isMetaSide : false				},				#parent : @7,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #Snake_Game,			#package : #Snake_Game,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Patrick',		#time : DateAndTime [ '2017-06-13T18:55:47.305761+02:00' ],		#prior : OmReference [ '2' ],		#self : OmReference [ '3' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Game,				#isMetaSide : false			},			#name : #messageSelectorAndArgumentNames,			#protocol : #'as yet unclassified',			#sourceCode : 'messageSelectorAndArgumentNames\r\t"TODO this should read my keyboar input and pass it to the gui"',			#stamp : 'Patrick 6/13/2017 18:55',			#package : #Snake_Game		}	}}OmEntry {	#tags : {		#author : 'Patrick',		#time : DateAndTime [ '2017-06-13T18:57:30.540761+02:00' ],		#prior : OmReference [ '3' ],		#self : OmReference [ '4' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Game,				#isMetaSide : false			},			#name : #messageSelectorAndArgumentNames,			#protocol : #'as yet unclassified',			#sourceCode : 'messageSelectorAndArgumentNames\r\t"TODO this should read my keyboar input and pass it to the gui"',			#stamp : 'Patrick 6/13/2017 18:55',			#package : #Snake_Game		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Game,				#isMetaSide : false			},			#name : #messageSelectorAndArgumentNames,			#protocol : #'as yet unclassified',			#sourceCode : 'messageSelectorAndArgumentNames\r\t"handles input"\r\t\r\t^\'handle input\'.',			#stamp : 'Patrick 6/13/2017 18:57',			#package : #Snake_Game		}	}}OmEntry {	#tags : {		#author : 'Patrick',		#time : DateAndTime [ '2017-06-13T19:01:27.455761+02:00' ],		#prior : OmReference [ '4' ],		#self : OmReference [ '5' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Game,				#isMetaSide : false			},			#name : #doOneCycleNow,			#protocol : #'as yet unclassified',			#sourceCode : 'doOneCycleNow\r"Do one cycle of the interactive loop. This method is called repeatedly\rwhen the world is running."\r"process user input events"',			#stamp : 'Patrick 6/13/2017 19:01',			#package : #Snake_Game		}	}}OmEntry {	#tags : {		#author : 'Patrick',		#time : DateAndTime [ '2017-06-13T19:01:27.480761+02:00' ],		#prior : OmReference [ '5' ],		#self : OmReference [ '6' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Game,				#isMetaSide : false			},			#name : #doOneCycleNow,			#protocol : #'as yet unclassified',			#sourceCode : 'doOneCycleNow\r"Do one cycle of the interactive loop. This method is called repeatedly\rwhen the world is running."\r"process user input events"',			#stamp : 'Patrick 6/13/2017 19:01',			#package : #Snake_Game		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Game,				#isMetaSide : false			},			#name : #doOneCycleNow,			#protocol : #'interaction loop',			#sourceCode : 'doOneCycleNow\r"Do one cycle of the interactive loop. This method is called repeatedly\rwhen the world is running."\r"process user input events"',			#stamp : 'Patrick 6/13/2017 19:01',			#package : #Snake_Game		}	}}OmEntry {	#tags : {		#author : 'Patrick',		#time : DateAndTime [ '2017-06-13T19:01:47.702761+02:00' ],		#prior : OmReference [ '6' ],		#self : OmReference [ '7' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'PackageManifest',				#traitCompositionSource : '{}',				#definitionSource : 'PackageManifest subclass: #ManifestSnakeGame\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Snake_Game\''			},			#name : #ManifestSnakeGame,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'ManifestSnakeGame class\r\tinstanceVariableNames: \'\''				},				#name : #'ManifestSnakeGame class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #ManifestSnakeGame,					#isMetaSide : false				},				#parent : @7,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #Snake_Game,			#package : #Snake_Game,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Patrick',		#time : DateAndTime [ '2017-06-13T19:01:47.708761+02:00' ],		#prior : OmReference [ '7' ],		#self : OmReference [ '8' ]	},	#content : EpBehaviorCommentChange {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'PackageManifest',				#traitCompositionSource : '{}',				#definitionSource : 'PackageManifest subclass: #ManifestSnakeGame\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Snake_Game\''			},			#name : #ManifestSnakeGame,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'ManifestSnakeGame class\r\tinstanceVariableNames: \'\''				},				#name : #'ManifestSnakeGame class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #ManifestSnakeGame,					#isMetaSide : false				},				#parent : @7,				#content : 'I store metadata for this package. These meta data are used by other tools such as the SmalllintManifestChecker and the critics Browser',				#stamp : '<historical>'			},			#classVariables : OrderedCollection [ ],			#category : #Snake_Game,			#package : #Snake_Game,			#sharedPools : OrderedCollection [ ]		},		#oldComment : '',		#newComment : 'I store metadata for this package. These meta data are used by other tools such as the SmalllintManifestChecker and the critics Browser',		#newStamp : '<historical>'	}}OmEntry {	#tags : {		#author : 'Patrick',		#time : DateAndTime [ '2017-06-13T19:01:47.716761+02:00' ],		#prior : OmReference [ '8' ],		#self : OmReference [ '9' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'ManifestSnakeGame class',				#isMetaSide : true			},			#name : #ruleRBUnclassifiedMethodsRuleV1FalsePositive,			#protocol : #code-critics,			#sourceCode : 'ruleRBUnclassifiedMethodsRuleV1FalsePositive\r\t^ #()',			#stamp : 'Patrick 6/13/2017 19:01',			#package : #Snake_Game		}	}}OmEntry {	#tags : {		#author : 'Patrick',		#time : DateAndTime [ '2017-06-13T19:01:47.725761+02:00' ],		#prior : OmReference [ '9' ],		#self : OmReference [ '10' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'ManifestSnakeGame class',				#isMetaSide : true			},			#name : #ruleRBUnclassifiedMethodsRuleV1FalsePositive,			#protocol : #code-critics,			#sourceCode : 'ruleRBUnclassifiedMethodsRuleV1FalsePositive\r\t^ #()',			#stamp : 'Patrick 6/13/2017 19:01',			#package : #Snake_Game		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'ManifestSnakeGame class',				#isMetaSide : true			},			#name : #ruleRBUnclassifiedMethodsRuleV1FalsePositive,			#protocol : #code-critics,			#sourceCode : 'ruleRBUnclassifiedMethodsRuleV1FalsePositive\r\t^ #(#(#(#RGMethodDefinition #(#Game #messageSelectorAndArgumentNames #false)) #\'2017-06-13T19:01:47.719761+02:00\') )',			#stamp : 'Patrick 6/13/2017 19:01',			#package : #Snake_Game		}	}}OmEntry {	#tags : {		#author : 'Patrick',		#time : DateAndTime [ '2017-06-13T19:02:01.725761+02:00' ],		#prior : OmReference [ '10' ],		#self : OmReference [ '11' ]	},	#content : EpGenericRefactoring {		#storeString : '(RBRemoveMethodRefactoring removeMethods: #(#messageSelectorAndArgumentNames ) from: Game)'	}}OmEntry {	#tags : {		#author : 'Patrick',		#prior : OmReference [ '11' ],		#self : OmReference [ '12' ],		#time : DateAndTime [ '2017-06-13T19:02:01.731761+02:00' ],		#trigger : @3	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Game,				#isMetaSide : false			},			#name : #messageSelectorAndArgumentNames,			#protocol : #'as yet unclassified',			#sourceCode : 'messageSelectorAndArgumentNames\r\t"handles input"\r\t\r\t^\'handle input\'.',			#stamp : 'Patrick 6/13/2017 18:57',			#package : #Snake_Game		}	}}OmEntry {	#tags : {		#author : 'Patrick',		#time : DateAndTime [ '2017-06-13T19:03:12.950761+02:00' ],		#prior : OmReference [ '12' ],		#self : OmReference [ '13' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Game,				#isMetaSide : false			},			#name : #doOneCycleNow,			#protocol : #'interaction loop',			#sourceCode : 'doOneCycleNow\r"Do one cycle of the interactive loop. This method is called repeatedly\rwhen the world is running."\r"process user input events"',			#stamp : 'Patrick 6/13/2017 19:01',			#package : #Snake_Game		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Game,				#isMetaSide : false			},			#name : #doOneCycleNow,			#protocol : #'interaction loop',			#sourceCode : 'doOneCycleNow\r"Do one cycle of the interactive loop. This method is called repeatedly\rwhen the world is running."\r"process user input events"\rself handsDo: [:h |\rself activeHand: h.\rh processEvents.\rself activeHand: nil].\rself runStepMethods.\rself displayWorldSafely.',			#stamp : 'Patrick 6/13/2017 19:03',			#package : #Snake_Game		}	}}