OmEntry {	#tags : {		#author : 'Patrick',		#time : DateAndTime [ '2017-06-18T14:21:53.87311+02:00' ],		#prior : OmReference [ 'Pharo.94gqqz11smnrogyb99qwl94ia', '6' ],		#self : OmReference [ '1' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'SnakeGame class',				#isMetaSide : true			},			#name : #'gameBoardExtentFor:',			#protocol : #'as yet unclassified',			#sourceCode : 'gameBoardExtentFor: someGrid\r\t| x y |\r\tx := someGrid columns * CellRenderer extent x.\r\ty := someGrid rows * CellRenderer extent y.\r\t^x@y',			#stamp : 'Patrick 6/18/2017 14:21',			#package : #Snake_Game_Graphics		}	}}OmEntry {	#tags : {		#author : 'Patrick',		#time : DateAndTime [ '2017-06-18T14:22:28.74011+02:00' ],		#prior : OmReference [ '1' ],		#self : OmReference [ '2' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'SnakeGame class',				#isMetaSide : true			},			#name : #'gameBoardExtentFor:',			#protocol : #'as yet unclassified',			#sourceCode : 'gameBoardExtentFor: someGrid\r\t| x y |\r\tx := someGrid columns * CellRenderer extent x.\r\ty := someGrid rows * CellRenderer extent y.\r\t^x@y',			#stamp : 'Patrick 6/18/2017 14:21',			#package : #Snake_Game_Graphics		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'SnakeGame class',				#isMetaSide : true			},			#name : #'gameBoardExtentFor:',			#protocol : #'as yet unclassified',			#sourceCode : 'gameBoardExtentFor: someGrid\r\t| x y |\r\tx := someGrid columns * CellRenderer cellExtent x.\r\ty := someGrid rows * CellRenderer cellExtent y.\r\t^x@y',			#stamp : 'Patrick 6/18/2017 14:22',			#package : #Snake_Game_Graphics		}	}}OmEntry {	#tags : {		#author : 'Patrick',		#time : DateAndTime [ '2017-06-18T14:27:42.65911+02:00' ],		#prior : OmReference [ '2' ],		#self : OmReference [ '3' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #RenderTest,				#isMetaSide : false			},			#name : #testCellOffsets,			#protocol : #'as yet unclassified',			#sourceCode : 'testCellOffsets\r\t| grid form cellLoc renderer |\r\tgrid := Grid newOfSize: 30@30.\r\tform := Form extent: 25@25 depth: Display depth.\r\tcellLoc := 1@1.\r\trenderer := CellRenderer new.\r\trenderer\r\t\tposition: cellLoc;\r\t\tcellForm: form;\r\t\tcellGrid: grid.\r\trenderer render.\r\tform displayAt: 10@10.',			#stamp : 'Patrick 6/18/2017 14:27',			#package : #Snake_Game_Test		}	}}OmEntry {	#tags : {		#author : 'Patrick',		#time : DateAndTime [ '2017-06-18T14:27:42.91311+02:00' ],		#prior : OmReference [ '3' ],		#self : OmReference [ '4' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #RenderTest,				#isMetaSide : false			},			#name : #testCellOffsets,			#protocol : #'as yet unclassified',			#sourceCode : 'testCellOffsets\r\t| grid form cellLoc renderer |\r\tgrid := Grid newOfSize: 30@30.\r\tform := Form extent: 25@25 depth: Display depth.\r\tcellLoc := 1@1.\r\trenderer := CellRenderer new.\r\trenderer\r\t\tposition: cellLoc;\r\t\tcellForm: form;\r\t\tcellGrid: grid.\r\trenderer render.\r\tform displayAt: 10@10.',			#stamp : 'Patrick 6/18/2017 14:27',			#package : #Snake_Game_Test		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #RenderTest,				#isMetaSide : false			},			#name : #testCellOffsets,			#protocol : #tests,			#sourceCode : 'testCellOffsets\r\t| grid form cellLoc renderer |\r\tgrid := Grid newOfSize: 30@30.\r\tform := Form extent: 25@25 depth: Display depth.\r\tcellLoc := 1@1.\r\trenderer := CellRenderer new.\r\trenderer\r\t\tposition: cellLoc;\r\t\tcellForm: form;\r\t\tcellGrid: grid.\r\trenderer render.\r\tform displayAt: 10@10.',			#stamp : 'Patrick 6/18/2017 14:27',			#package : #Snake_Game_Test		}	}}OmEntry {	#tags : {		#author : 'Patrick',		#time : DateAndTime [ '2017-06-18T14:28:07.54811+02:00' ],		#prior : OmReference [ '4' ],		#self : OmReference [ '5' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #RenderTest,				#isMetaSide : false			},			#name : #testCellOffsets,			#protocol : #tests,			#sourceCode : 'testCellOffsets\r\t| grid form cellLoc renderer |\r\tgrid := Grid newOfSize: 30@30.\r\tform := Form extent: 25@25 depth: Display depth.\r\tcellLoc := 1@1.\r\trenderer := CellRenderer new.\r\trenderer\r\t\tposition: cellLoc;\r\t\tcellForm: form;\r\t\tcellGrid: grid.\r\trenderer render.\r\tform displayAt: 10@10.',			#stamp : 'Patrick 6/18/2017 14:27',			#package : #Snake_Game_Test		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #RenderTest,				#isMetaSide : false			},			#name : #testCellOffsets,			#protocol : #tests,			#sourceCode : 'testCellOffsets\r\t| grid form cellLoc renderer |\r\tgrid := Grid newOfSize: 30@30.\r\tform := Form extent: (SnakeGame gameBoardExtentFor: grid) depth: Display depth.\r\tform fillColor: (Color r: 0.9 g: 0.9 b: 0.9 ). "gray background"\r\tcellLoc := 1@1.\r\trenderer := CellRenderer new.\r\trenderer\r\t\tposition: cellLoc;\r\t\tcellGrid: grid;\r\t\tcellForm: form.\r\trenderer render.\r\tform displayAt: 100@50.',			#stamp : 'Patrick 6/18/2017 14:28',			#package : #Snake_Game_Test		}	}}OmEntry {	#tags : {		#author : 'Patrick',		#time : DateAndTime [ '2017-06-18T14:29:27.83111+02:00' ],		#prior : OmReference [ '5' ],		#self : OmReference [ '6' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #RenderTest,				#isMetaSide : false			},			#name : #testCellOffsets,			#protocol : #tests,			#sourceCode : 'testCellOffsets\r\t| grid form cellLoc renderer |\r\tgrid := Grid newOfSize: 30@30.\r\tform := Form extent: (SnakeGame gameBoardExtentFor: grid) depth: Display depth.\r\tform fillColor: (Color r: 0.9 g: 0.9 b: 0.9 ). "gray background"\r\tcellLoc := 1@1.\r\trenderer := CellRenderer new.\r\trenderer\r\t\tposition: cellLoc;\r\t\tcellGrid: grid;\r\t\tcellForm: form.\r\trenderer render.\r\tform displayAt: 100@50.',			#stamp : 'Patrick 6/18/2017 14:28',			#package : #Snake_Game_Test		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #RenderTest,				#isMetaSide : false			},			#name : #testCellOffsets,			#protocol : #tests,			#sourceCode : 'testCellOffsets\r\t| grid form cellLoc renderer offset |\r\tgrid := Grid newOfSize: 30@30.\r\tform := Form extent: (SnakeGame gameBoardExtentFor: grid) depth: Display depth.\r\tform fillColor: (Color r: 0.9 g: 0.9 b: 0.9 ). "gray background"\r\tcellLoc := 1@1.\r\trenderer := CellRenderer new.\r\trenderer\r\t\tposition: cellLoc;\r\t\tcellGrid: grid;\r\t\tcellForm: form.\r\trenderer render.\r\toffset := renderer gridFormOffset.\r\tform displayAt: 100@50.',			#stamp : 'Patrick 6/18/2017 14:29',			#package : #Snake_Game_Test		}	}}OmEntry {	#tags : {		#author : 'Patrick',		#time : DateAndTime [ '2017-06-18T14:31:10.81611+02:00' ],		#prior : OmReference [ '6' ],		#self : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #CellRenderer,				#isMetaSide : false			},			#name : #gridFormOffset,			#protocol : #'as yet unclassified',			#sourceCode : 'gridFormOffset\r\t| diff countX countY offset |\r\t^offset',			#stamp : 'Patrick 6/18/2017 14:31',			#package : #Snake_Game_Model		}	}}OmEntry {	#tags : {		#author : 'Patrick',		#time : DateAndTime [ '2017-06-18T14:31:27.62511+02:00' ],		#prior : OmReference [ '7' ],		#self : OmReference [ '8' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #CellRenderer,				#isMetaSide : false			},			#name : #gridFormOffset,			#protocol : #'as yet unclassified',			#sourceCode : 'gridFormOffset\r\t| diff countX countY offset |\r\t^offset',			#stamp : 'Patrick 6/18/2017 14:31',			#package : #Snake_Game_Model		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #CellRenderer,				#isMetaSide : false			},			#name : #gridFormOffset,			#protocol : #'as yet unclassified',			#sourceCode : 'gridFormOffset\r\t| diff countX countY offset |\r\tdiff := CellRenderer cellExtent.\r\t^offset',			#stamp : 'Patrick 6/18/2017 14:31',			#package : #Snake_Game_Model		}	}}OmEntry {	#tags : {		#author : 'Patrick',		#time : DateAndTime [ '2017-06-18T14:32:12.77011+02:00' ],		#prior : OmReference [ '8' ],		#self : OmReference [ '9' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #CellRenderer,				#isMetaSide : false			},			#name : #gridFormOffset,			#protocol : #'as yet unclassified',			#sourceCode : 'gridFormOffset\r\t| diff countX countY offset |\r\tdiff := CellRenderer cellExtent.\r\t^offset',			#stamp : 'Patrick 6/18/2017 14:31',			#package : #Snake_Game_Model		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #CellRenderer,				#isMetaSide : false			},			#name : #gridFormOffset,			#protocol : #'as yet unclassified',			#sourceCode : 'gridFormOffset\r\t| diff countX countY offset |\r\tdiff := CellRenderer cellExtent.\r\tcountX := (self position x) - 1.\r\tcountY := (self position y) - 1.\r\t^offset',			#stamp : 'Patrick 6/18/2017 14:32',			#package : #Snake_Game_Model		}	}}OmEntry {	#tags : {		#author : 'Patrick',		#time : DateAndTime [ '2017-06-18T14:32:58.41611+02:00' ],		#prior : OmReference [ '9' ],		#self : OmReference [ '10' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #CellRenderer,				#isMetaSide : false			},			#name : #gridFormOffset,			#protocol : #'as yet unclassified',			#sourceCode : 'gridFormOffset\r\t| diff countX countY offset |\r\tdiff := CellRenderer cellExtent.\r\tcountX := (self position x) - 1.\r\tcountY := (self position y) - 1.\r\t^offset',			#stamp : 'Patrick 6/18/2017 14:32',			#package : #Snake_Game_Model		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #CellRenderer,				#isMetaSide : false			},			#name : #gridFormOffset,			#protocol : #'as yet unclassified',			#sourceCode : 'gridFormOffset\r\t| diff countX countY offset |\r\tdiff := CellRenderer cellExtent.\r\tcountX := (self position x) - 1.\r\tcountY := (self position y) - 1.\r\toffset := (diff*countX)@(diff*countY).\r\t^offset',			#stamp : 'Patrick 6/18/2017 14:32',			#package : #Snake_Game_Model		}	}}OmEntry {	#tags : {		#author : 'Patrick',		#time : DateAndTime [ '2017-06-18T14:34:43.25311+02:00' ],		#prior : OmReference [ '10' ],		#self : OmReference [ '11' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #RenderTest,				#isMetaSide : false			},			#name : #testCellOffsets,			#protocol : #tests,			#sourceCode : 'testCellOffsets\r\t| grid form cellLoc renderer offset |\r\tgrid := Grid newOfSize: 30@30.\r\tform := Form extent: (SnakeGame gameBoardExtentFor: grid) depth: Display depth.\r\tform fillColor: (Color r: 0.9 g: 0.9 b: 0.9 ). "gray background"\r\tcellLoc := 1@1.\r\trenderer := CellRenderer new.\r\trenderer\r\t\tposition: cellLoc;\r\t\tcellGrid: grid;\r\t\tcellForm: form.\r\trenderer render.\r\toffset := renderer gridFormOffset.\r\tform displayAt: 100@50.',			#stamp : 'Patrick 6/18/2017 14:29',			#package : #Snake_Game_Test		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #RenderTest,				#isMetaSide : false			},			#name : #testCellOffsets,			#protocol : #tests,			#sourceCode : 'testCellOffsets\r\t| grid form cellLoc renderer offset |\r\tgrid := Grid newOfSize: 30@30.\r\tform := Form extent: (SnakeGame gameBoardExtentFor: grid) depth: Display depth.\r\tform fillColor: (Color r: 0.9 g: 0.9 b: 0.9 ). "gray background"\r\tcellLoc := 1@1.\r\trenderer := CellRenderer new.\r\trenderer\r\t\tposition: cellLoc;\r\t\tcellGrid: grid;\r\t\tcellForm: form.\r\trenderer render.\r\toffset := renderer gridFormOffset.\r\tself should: [ offset := 0@0 ]',			#stamp : 'Patrick 6/18/2017 14:34',			#package : #Snake_Game_Test		}	}}OmEntry {	#tags : {		#author : 'Patrick',		#time : DateAndTime [ '2017-06-18T14:34:48.31311+02:00' ],		#prior : OmReference [ '11' ],		#self : OmReference [ '12' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #RenderTest,				#isMetaSide : false			},			#name : #testCellOffsets,			#protocol : #tests,			#sourceCode : 'testCellOffsets\r\t| grid form cellLoc renderer offset |\r\tgrid := Grid newOfSize: 30@30.\r\tform := Form extent: (SnakeGame gameBoardExtentFor: grid) depth: Display depth.\r\tform fillColor: (Color r: 0.9 g: 0.9 b: 0.9 ). "gray background"\r\tcellLoc := 1@1.\r\trenderer := CellRenderer new.\r\trenderer\r\t\tposition: cellLoc;\r\t\tcellGrid: grid;\r\t\tcellForm: form.\r\trenderer render.\r\toffset := renderer gridFormOffset.\r\tself should: [ offset := 0@0 ]',			#stamp : 'Patrick 6/18/2017 14:34',			#package : #Snake_Game_Test		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #RenderTest,				#isMetaSide : false			},			#name : #testCellOffsets,			#protocol : #tests,			#sourceCode : 'testCellOffsets\r\t| grid form cellLoc renderer offset |\r\tgrid := Grid newOfSize: 30@30.\r\tform := Form extent: (SnakeGame gameBoardExtentFor: grid) depth: Display depth.\r\tform fillColor: (Color r: 0.9 g: 0.9 b: 0.9 ). "gray background"\r\tcellLoc := 1@1.\r\trenderer := CellRenderer new.\r\trenderer\r\t\tposition: cellLoc;\r\t\tcellGrid: grid;\r\t\tcellForm: form.\r\trenderer render.\r\toffset := renderer gridFormOffset.\r\tself should: [ offset := 0@0 ].',			#stamp : 'Patrick 6/18/2017 14:34',			#package : #Snake_Game_Test		}	}}OmEntry {	#tags : {		#author : 'Patrick',		#time : DateAndTime [ '2017-06-18T14:34:53.98811+02:00' ],		#prior : OmReference [ '12' ],		#self : OmReference [ '13' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #RenderTest,				#isMetaSide : false			},			#name : #testCellOffsets,			#protocol : #tests,			#sourceCode : 'testCellOffsets\r\t| grid form cellLoc renderer offset |\r\tgrid := Grid newOfSize: 30@30.\r\tform := Form extent: (SnakeGame gameBoardExtentFor: grid) depth: Display depth.\r\tform fillColor: (Color r: 0.9 g: 0.9 b: 0.9 ). "gray background"\r\tcellLoc := 1@1.\r\trenderer := CellRenderer new.\r\trenderer\r\t\tposition: cellLoc;\r\t\tcellGrid: grid;\r\t\tcellForm: form.\r\trenderer render.\r\toffset := renderer gridFormOffset.\r\tself should: [ offset := 0@0 ].',			#stamp : 'Patrick 6/18/2017 14:34',			#package : #Snake_Game_Test		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #RenderTest,				#isMetaSide : false			},			#name : #testCellOffsets,			#protocol : #tests,			#sourceCode : 'testCellOffsets\r\t| grid form cellLoc renderer offset |\r\tgrid := Grid newOfSize: 30@30.\r\tform := Form extent: (SnakeGame gameBoardExtentFor: grid) depth: Display depth.\r\tform fillColor: (Color r: 0.9 g: 0.9 b: 0.9 ). "gray background"\r\tcellLoc := 1@1.\r\trenderer := CellRenderer new.\r\trenderer\r\t\tposition: cellLoc;\r\t\tcellGrid: grid;\r\t\tcellForm: form.\r\trenderer render.\r\toffset := renderer gridFormOffset.\r\tself should: [ offset = (0@0) ].',			#stamp : 'Patrick 6/18/2017 14:34',			#package : #Snake_Game_Test		}	}}OmEntry {	#tags : {		#author : 'Patrick',		#time : DateAndTime [ '2017-06-18T14:35:49.76411+02:00' ],		#prior : OmReference [ '13' ],		#self : OmReference [ '14' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #CellRenderer,				#isMetaSide : false			},			#name : #gridFormOffset,			#protocol : #'as yet unclassified',			#sourceCode : 'gridFormOffset\r\t| diff countX countY offset |\r\tdiff := CellRenderer cellExtent.\r\tcountX := (self position x) - 1.\r\tcountY := (self position y) - 1.\r\toffset := (diff*countX)@(diff*countY).\r\t^offset',			#stamp : 'Patrick 6/18/2017 14:32',			#package : #Snake_Game_Model		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #CellRenderer,				#isMetaSide : false			},			#name : #gridFormOffset,			#protocol : #'as yet unclassified',			#sourceCode : 'gridFormOffset\r\t| diff countX countY offset |\r\tdiff := CellRenderer cellExtent.\r\tcountX := (self position x) - 1.\r\tcountY := (self position y) - 1.\r\toffset := ((diff*countX)@(diff*countY)).\r\t^offset',			#stamp : 'Patrick 6/18/2017 14:35',			#package : #Snake_Game_Model		}	}}OmEntry {	#tags : {		#author : 'Patrick',		#time : DateAndTime [ '2017-06-18T14:36:35.38911+02:00' ],		#prior : OmReference [ '14' ],		#self : OmReference [ '15' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #CellRenderer,				#isMetaSide : false			},			#name : #gridFormOffset,			#protocol : #'as yet unclassified',			#sourceCode : 'gridFormOffset\r\t| diff countX countY offset |\r\tdiff := CellRenderer cellExtent.\r\tcountX := (self position x) - 1.\r\tcountY := (self position y) - 1.\r\toffset := ((diff*countX)@(diff*countY)).\r\t^offset',			#stamp : 'Patrick 6/18/2017 14:35',			#package : #Snake_Game_Model		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #CellRenderer,				#isMetaSide : false			},			#name : #gridFormOffset,			#protocol : #'as yet unclassified',			#sourceCode : 'gridFormOffset\r\t| diff countX countY offset |\r\tdiff := CellRenderer cellExtent.\r\tcountX := (self position x) - 1.\r\tcountY := (self position y) - 1.\r\toffset := diff*(countX@countY).\r\t^offset',			#stamp : 'Patrick 6/18/2017 14:36',			#package : #Snake_Game_Model		}	}}OmEntry {	#tags : {		#author : 'Patrick',		#time : DateAndTime [ '2017-06-18T14:37:43.06511+02:00' ],		#prior : OmReference [ '15' ],		#self : OmReference [ '16' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #RenderTest,				#isMetaSide : false			},			#name : #testCellOffsets,			#protocol : #tests,			#sourceCode : 'testCellOffsets\r\t| grid form cellLoc renderer offset |\r\tgrid := Grid newOfSize: 30@30.\r\tform := Form extent: (SnakeGame gameBoardExtentFor: grid) depth: Display depth.\r\tform fillColor: (Color r: 0.9 g: 0.9 b: 0.9 ). "gray background"\r\tcellLoc := 1@1.\r\trenderer := CellRenderer new.\r\trenderer\r\t\tposition: cellLoc;\r\t\tcellGrid: grid;\r\t\tcellForm: form.\r\trenderer render.\r\toffset := renderer gridFormOffset.\r\tself should: [ offset = (0@0) ].',			#stamp : 'Patrick 6/18/2017 14:34',			#package : #Snake_Game_Test		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #RenderTest,				#isMetaSide : false			},			#name : #testCellOffsets,			#protocol : #tests,			#sourceCode : 'testCellOffsets\r\t| grid form cellLoc renderer offset |\r\tgrid := Grid newOfSize: 30@30.\r\tform := Form extent: (SnakeGame gameBoardExtentFor: grid) depth: Display depth.\r\tform fillColor: (Color r: 0.9 g: 0.9 b: 0.9 ). "gray background"\r\trenderer := CellRenderer new.\r\trenderer\r\t\tposition: cellLoc;\r\t\tcellGrid: grid;\r\t\tcellForm: form.\r\toffset := renderer gridFormOffset.\r\r\tcellLoc := 1@1.\r\r\tself should: [ offset = (0@0) ].',			#stamp : 'Patrick 6/18/2017 14:37',			#package : #Snake_Game_Test		}	}}OmEntry {	#tags : {		#author : 'Patrick',		#time : DateAndTime [ '2017-06-18T14:37:50.62111+02:00' ],		#prior : OmReference [ '16' ],		#self : OmReference [ '17' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #RenderTest,				#isMetaSide : false			},			#name : #testCellOffsets,			#protocol : #tests,			#sourceCode : 'testCellOffsets\r\t| grid form cellLoc renderer offset |\r\tgrid := Grid newOfSize: 30@30.\r\tform := Form extent: (SnakeGame gameBoardExtentFor: grid) depth: Display depth.\r\tform fillColor: (Color r: 0.9 g: 0.9 b: 0.9 ). "gray background"\r\trenderer := CellRenderer new.\r\trenderer\r\t\tposition: cellLoc;\r\t\tcellGrid: grid;\r\t\tcellForm: form.\r\toffset := renderer gridFormOffset.\r\r\tcellLoc := 1@1.\r\r\tself should: [ offset = (0@0) ].',			#stamp : 'Patrick 6/18/2017 14:37',			#package : #Snake_Game_Test		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #RenderTest,				#isMetaSide : false			},			#name : #testCellOffsets,			#protocol : #tests,			#sourceCode : 'testCellOffsets\r\t| grid form cellLoc renderer offset |\r\tgrid := Grid newOfSize: 30@30.\r\tform := Form extent: (SnakeGame gameBoardExtentFor: grid) depth: Display depth.\r\tform fillColor: (Color r: 0.9 g: 0.9 b: 0.9 ). "gray background"\r\trenderer := CellRenderer new.\r\tcellLoc := 1@1.\r\trenderer\r\t\tposition: cellLoc;\r\t\tcellGrid: grid;\r\t\tcellForm: form.\r\toffset := renderer gridFormOffset.\r\r\r\r\tself should: [ offset = (0@0) ].',			#stamp : 'Patrick 6/18/2017 14:37',			#package : #Snake_Game_Test		}	}}OmEntry {	#tags : {		#author : 'Patrick',		#time : DateAndTime [ '2017-06-18T14:37:52.72511+02:00' ],		#prior : OmReference [ '17' ],		#self : OmReference [ '18' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #RenderTest,				#isMetaSide : false			},			#name : #testCellOffsets,			#protocol : #tests,			#sourceCode : 'testCellOffsets\r\t| grid form cellLoc renderer offset |\r\tgrid := Grid newOfSize: 30@30.\r\tform := Form extent: (SnakeGame gameBoardExtentFor: grid) depth: Display depth.\r\tform fillColor: (Color r: 0.9 g: 0.9 b: 0.9 ). "gray background"\r\trenderer := CellRenderer new.\r\tcellLoc := 1@1.\r\trenderer\r\t\tposition: cellLoc;\r\t\tcellGrid: grid;\r\t\tcellForm: form.\r\toffset := renderer gridFormOffset.\r\r\r\r\tself should: [ offset = (0@0) ].',			#stamp : 'Patrick 6/18/2017 14:37',			#package : #Snake_Game_Test		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #RenderTest,				#isMetaSide : false			},			#name : #testCellOffsets,			#protocol : #tests,			#sourceCode : 'testCellOffsets\r\t| grid form cellLoc renderer offset |\r\tgrid := Grid newOfSize: 30@30.\r\tform := Form extent: (SnakeGame gameBoardExtentFor: grid) depth: Display depth.\r\tform fillColor: (Color r: 0.9 g: 0.9 b: 0.9 ). "gray background"\r\trenderer := CellRenderer new.\r\tcellLoc := 1@1.\r\trenderer\r\t\tposition: cellLoc;\r\t\tcellGrid: grid;\r\t\tcellForm: form.\r\toffset := renderer gridFormOffset.\r\r\tself should: [ offset = (0@0) ].',			#stamp : 'Patrick 6/18/2017 14:37',			#package : #Snake_Game_Test		}	}}OmEntry {	#tags : {		#author : 'Patrick',		#time : DateAndTime [ '2017-06-18T14:38:23.69011+02:00' ],		#prior : OmReference [ '18' ],		#self : OmReference [ '19' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #RenderTest,				#isMetaSide : false			},			#name : #testCellOffsets,			#protocol : #tests,			#sourceCode : 'testCellOffsets\r\t| grid form cellLoc renderer offset |\r\tgrid := Grid newOfSize: 30@30.\r\tform := Form extent: (SnakeGame gameBoardExtentFor: grid) depth: Display depth.\r\tform fillColor: (Color r: 0.9 g: 0.9 b: 0.9 ). "gray background"\r\trenderer := CellRenderer new.\r\tcellLoc := 1@1.\r\trenderer\r\t\tposition: cellLoc;\r\t\tcellGrid: grid;\r\t\tcellForm: form.\r\toffset := renderer gridFormOffset.\r\r\tself should: [ offset = (0@0) ].',			#stamp : 'Patrick 6/18/2017 14:38',			#package : #Snake_Game_Test		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #RenderTest,				#isMetaSide : false			},			#name : #testCellOffsets,			#protocol : #tests,			#sourceCode : 'testCellOffsets\r\t| grid form cellLoc renderer offset |\r\tgrid := Grid newOfSize: 30@30.\r\tform := Form extent: (SnakeGame gameBoardExtentFor: grid) depth: Display depth.\r\tform fillColor: (Color r: 0.9 g: 0.9 b: 0.9 ). "gray background"\r\trenderer := CellRenderer new.\r\tcellLoc := 3@1.\r\trenderer\r\t\tposition: cellLoc;\r\t\tcellGrid: grid;\r\t\tcellForm: form.\r\toffset := renderer gridFormOffset.\r\r\tself should: [ offset = (0@0) ].',			#stamp : 'Patrick 6/18/2017 14:38',			#package : #Snake_Game_Test		}	}}OmEntry {	#tags : {		#author : 'Patrick',		#time : DateAndTime [ '2017-06-18T14:38:29.15511+02:00' ],		#prior : OmReference [ '19' ],		#self : OmReference [ '20' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #RenderTest,				#isMetaSide : false			},			#name : #testCellOffsets,			#protocol : #tests,			#sourceCode : 'testCellOffsets\r\t| grid form cellLoc renderer offset |\r\tgrid := Grid newOfSize: 30@30.\r\tform := Form extent: (SnakeGame gameBoardExtentFor: grid) depth: Display depth.\r\tform fillColor: (Color r: 0.9 g: 0.9 b: 0.9 ). "gray background"\r\trenderer := CellRenderer new.\r\tcellLoc := 3@1.\r\trenderer\r\t\tposition: cellLoc;\r\t\tcellGrid: grid;\r\t\tcellForm: form.\r\toffset := renderer gridFormOffset.\r\r\tself should: [ offset = (0@0) ].',			#stamp : 'Patrick 6/18/2017 14:38',			#package : #Snake_Game_Test		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #RenderTest,				#isMetaSide : false			},			#name : #testCellOffsets,			#protocol : #tests,			#sourceCode : 'testCellOffsets\r\t| grid form cellLoc renderer offset |\r\tgrid := Grid newOfSize: 30@30.\r\tform := Form extent: (SnakeGame gameBoardExtentFor: grid) depth: Display depth.\r\tform fillColor: (Color r: 0.9 g: 0.9 b: 0.9 ). "gray background"\r\trenderer := CellRenderer new.\r\tcellLoc := 3@1.\r\trenderer\r\t\tposition: cellLoc;\r\t\tcellGrid: grid;\r\t\tcellForm: form.\r\toffset := renderer gridFormOffset.\r\r\tself should: [ offset = (60@0) ].',			#stamp : 'Patrick 6/18/2017 14:38',			#package : #Snake_Game_Test		}	}}OmEntry {	#tags : {		#author : 'Patrick',		#time : DateAndTime [ '2017-06-18T14:38:40.65011+02:00' ],		#prior : OmReference [ '20' ],		#self : OmReference [ '21' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #RenderTest,				#isMetaSide : false			},			#name : #testCellOffsets,			#protocol : #tests,			#sourceCode : 'testCellOffsets\r\t| grid form cellLoc renderer offset |\r\tgrid := Grid newOfSize: 30@30.\r\tform := Form extent: (SnakeGame gameBoardExtentFor: grid) depth: Display depth.\r\tform fillColor: (Color r: 0.9 g: 0.9 b: 0.9 ). "gray background"\r\trenderer := CellRenderer new.\r\tcellLoc := 3@1.\r\trenderer\r\t\tposition: cellLoc;\r\t\tcellGrid: grid;\r\t\tcellForm: form.\r\toffset := renderer gridFormOffset.\r\r\tself should: [ offset = (60@0) ].',			#stamp : 'Patrick 6/18/2017 14:38',			#package : #Snake_Game_Test		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #RenderTest,				#isMetaSide : false			},			#name : #testCellOffsets,			#protocol : #tests,			#sourceCode : 'testCellOffsets\r\t| grid form cellLoc renderer offset |\r\tgrid := Grid newOfSize: 30@30.\r\tform := Form extent: (SnakeGame gameBoardExtentFor: grid) depth: Display depth.\r\tform fillColor: (Color r: 0.9 g: 0.9 b: 0.9 ). "gray background"\r\trenderer := CellRenderer new.\r\tcellLoc := 3@1.\r\trenderer\r\t\tposition: cellLoc;\r\t\tcellGrid: grid;\r\t\tcellForm: form.\r\toffset := renderer gridFormOffset.\r\r\tself should: [ offset = (50@0) ].',			#stamp : 'Patrick 6/18/2017 14:38',			#package : #Snake_Game_Test		}	}}OmEntry {	#tags : {		#author : 'Patrick',		#time : DateAndTime [ '2017-06-18T14:39:23.01711+02:00' ],		#prior : OmReference [ '21' ],		#self : OmReference [ '22' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #RenderTest,				#isMetaSide : false			},			#name : #testCellOffsets,			#protocol : #tests,			#sourceCode : 'testCellOffsets\r\t| grid form cellLoc renderer offset |\r\tgrid := Grid newOfSize: 30@30.\r\tform := Form extent: (SnakeGame gameBoardExtentFor: grid) depth: Display depth.\r\tform fillColor: (Color r: 0.9 g: 0.9 b: 0.9 ). "gray background"\r\trenderer := CellRenderer new.\r\tcellLoc := 3@1.\r\trenderer\r\t\tposition: cellLoc;\r\t\tcellGrid: grid;\r\t\tcellForm: form.\r\toffset := renderer gridFormOffset.\r\r\tself should: [ offset = (50@0) ].',			#stamp : 'Patrick 6/18/2017 14:38',			#package : #Snake_Game_Test		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #RenderTest,				#isMetaSide : false			},			#name : #testCellOffsets,			#protocol : #tests,			#sourceCode : 'testCellOffsets\r\t| grid form cellLoc renderer offset |\r\tgrid := Grid newOfSize: 30@30.\r\tform := Form extent: (SnakeGame gameBoardExtentFor: grid) depth: Display depth.\r\tform fillColor: (Color r: 0.9 g: 0.9 b: 0.9 ). "gray background"\r\trenderer := CellRenderer new.\r\t\r\tcellLoc := 3@1.\r\trenderer \tposition: cellLoc; cellGrid: grid; cellForm: form.\r\toffset := renderer gridFormOffset.\r\tself should: [ offset = (50@0) ].\r\t\r\tcellLoc := 3@3.\r\trenderer \tposition: cellLoc; cellGrid: grid; cellForm: form.\r\toffset := renderer gridFormOffset.\r\tself should: [ offset = (50@50) ].\r\t\r\tcellLoc := 1@3.\r\trenderer \tposition: cellLoc; cellGrid: grid; cellForm: form.\r\toffset := renderer gridFormOffset.\r\tself should: [ offset = (0@50) ].',			#stamp : 'Patrick 6/18/2017 14:39',			#package : #Snake_Game_Test		}	}}OmEntry {	#tags : {		#author : 'Patrick',		#time : DateAndTime [ '2017-06-18T14:40:04.37011+02:00' ],		#prior : OmReference [ '22' ],		#self : OmReference [ '23' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #RenderTest,				#isMetaSide : false			},			#name : #testCellOffsets,			#protocol : #tests,			#sourceCode : 'testCellOffsets\r\t| grid form cellLoc renderer offset |\r\tgrid := Grid newOfSize: 30@30.\r\tform := Form extent: (SnakeGame gameBoardExtentFor: grid) depth: Display depth.\r\tform fillColor: (Color r: 0.9 g: 0.9 b: 0.9 ). "gray background"\r\trenderer := CellRenderer new.\r\t\r\tcellLoc := 3@1.\r\trenderer \tposition: cellLoc; cellGrid: grid; cellForm: form.\r\toffset := renderer gridFormOffset.\r\tself should: [ offset = (50@0) ].\r\t\r\tcellLoc := 3@3.\r\trenderer \tposition: cellLoc; cellGrid: grid; cellForm: form.\r\toffset := renderer gridFormOffset.\r\tself should: [ offset = (50@50) ].\r\t\r\tcellLoc := 1@3.\r\trenderer \tposition: cellLoc; cellGrid: grid; cellForm: form.\r\toffset := renderer gridFormOffset.\r\tself should: [ offset = (0@50) ].',			#stamp : 'Patrick 6/18/2017 14:39',			#package : #Snake_Game_Test		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #RenderTest,				#isMetaSide : false			},			#name : #testCellOffsets,			#protocol : #tests,			#sourceCode : 'testCellOffsets\r\t| grid form cellLoc renderer offset |\r\tgrid := Grid newOfSize: 30@30.\r\tform := Form extent: (SnakeGame gameBoardExtentFor: grid) depth: Display depth.\r\tform fillColor: (Color r: 0.9 g: 0.9 b: 0.9 ). "gray background"\r\trenderer := CellRenderer new.\r\t\r\tcellLoc := 3@1.\r\trenderer \tposition: cellLoc; cellGrid: grid; cellForm: form.\r\toffset := renderer gridFormOffset.\r\tself should: [ offset = (50@0) ].\r\t\r\tcellLoc := 3@3.\r\trenderer \tposition put: cellLoc.\r\toffset := renderer gridFormOffset.\r\tself should: [ offset = (50@50) ].\r\t\r\tcellLoc := 1@3.\r\trenderer \tposition: cellLoc.\r\toffset := renderer gridFormOffset.\r\tself should: [ offset = (0@50) ].',			#stamp : 'Patrick 6/18/2017 14:40',			#package : #Snake_Game_Test		}	}}OmEntry {	#tags : {		#author : 'Patrick',		#time : DateAndTime [ '2017-06-18T14:40:11.35511+02:00' ],		#prior : OmReference [ '23' ],		#self : OmReference [ '24' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #RenderTest,				#isMetaSide : false			},			#name : #testCellOffsets,			#protocol : #tests,			#sourceCode : 'testCellOffsets\r\t| grid form cellLoc renderer offset |\r\tgrid := Grid newOfSize: 30@30.\r\tform := Form extent: (SnakeGame gameBoardExtentFor: grid) depth: Display depth.\r\tform fillColor: (Color r: 0.9 g: 0.9 b: 0.9 ). "gray background"\r\trenderer := CellRenderer new.\r\t\r\tcellLoc := 3@1.\r\trenderer \tposition: cellLoc; cellGrid: grid; cellForm: form.\r\toffset := renderer gridFormOffset.\r\tself should: [ offset = (50@0) ].\r\t\r\tcellLoc := 3@3.\r\trenderer \tposition put: cellLoc.\r\toffset := renderer gridFormOffset.\r\tself should: [ offset = (50@50) ].\r\t\r\tcellLoc := 1@3.\r\trenderer \tposition: cellLoc.\r\toffset := renderer gridFormOffset.\r\tself should: [ offset = (0@50) ].',			#stamp : 'Patrick 6/18/2017 14:40',			#package : #Snake_Game_Test		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #RenderTest,				#isMetaSide : false			},			#name : #testCellOffsets,			#protocol : #tests,			#sourceCode : 'testCellOffsets\r\t| grid form cellLoc renderer offset |\r\tgrid := Grid newOfSize: 30@30.\r\tform := Form extent: (SnakeGame gameBoardExtentFor: grid) depth: Display depth.\r\tform fillColor: (Color r: 0.9 g: 0.9 b: 0.9 ). "gray background"\r\trenderer := CellRenderer new.\r\t\r\tcellLoc := 3@1.\r\trenderer \tposition: cellLoc; cellGrid: grid; cellForm: form.\r\toffset := renderer gridFormOffset.\r\tself should: [ offset = (50@0) ].\r\t\r\tcellLoc := 3@3.\r\trenderer \tposition put: cellLoc.\r\toffset := renderer gridFormOffset.\r\tself should: [ offset = (50@50) ].\r\t\r\tcellLoc := 1@3.\r\trenderer \tposition put: cellLoc.\r\toffset := renderer gridFormOffset.\r\tself should: [ offset = (0@50) ].',			#stamp : 'Patrick 6/18/2017 14:40',			#package : #Snake_Game_Test		}	}}OmEntry {	#tags : {		#author : 'Patrick',		#time : DateAndTime [ '2017-06-18T14:40:23.11111+02:00' ],		#prior : OmReference [ '24' ],		#self : OmReference [ '25' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #RenderTest,				#isMetaSide : false			},			#name : #testCellOffsets,			#protocol : #tests,			#sourceCode : 'testCellOffsets\r\t| grid form cellLoc renderer offset |\r\tgrid := Grid newOfSize: 30@30.\r\tform := Form extent: (SnakeGame gameBoardExtentFor: grid) depth: Display depth.\r\tform fillColor: (Color r: 0.9 g: 0.9 b: 0.9 ). "gray background"\r\trenderer := CellRenderer new.\r\t\r\tcellLoc := 3@1.\r\trenderer \tposition: cellLoc; cellGrid: grid; cellForm: form.\r\toffset := renderer gridFormOffset.\r\tself should: [ offset = (50@0) ].\r\t\r\tcellLoc := 3@3.\r\trenderer \tposition put: cellLoc.\r\toffset := renderer gridFormOffset.\r\tself should: [ offset = (50@50) ].\r\t\r\tcellLoc := 1@3.\r\trenderer \tposition put: cellLoc.\r\toffset := renderer gridFormOffset.\r\tself should: [ offset = (0@50) ].',			#stamp : 'Patrick 6/18/2017 14:40',			#package : #Snake_Game_Test		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #RenderTest,				#isMetaSide : false			},			#name : #testCellOffsets,			#protocol : #tests,			#sourceCode : 'testCellOffsets\r\t| grid form cellLoc renderer offset |\r\tgrid := Grid newOfSize: 30@30.\r\tform := Form extent: (SnakeGame gameBoardExtentFor: grid) depth: Display depth.\r\tform fillColor: (Color r: 0.9 g: 0.9 b: 0.9 ). "gray background"\r\trenderer := CellRenderer new.\r\t\r\tcellLoc := 3@1.\r\trenderer \tposition: cellLoc; cellGrid: grid; cellForm: form.\r\toffset := renderer gridFormOffset.\r\tself should: [ offset = (50@0) ].\r\t\r\tcellLoc := 3@3.\r\trenderer \tposition: cellLoc.\r\toffset := renderer gridFormOffset.\r\tself should: [ offset = (50@50) ].\r\t\r\tcellLoc := 1@3.\r\trenderer \tposition: cellLoc.\r\toffset := renderer gridFormOffset.\r\tself should: [ offset = (0@50) ].',			#stamp : 'Patrick 6/18/2017 14:40',			#package : #Snake_Game_Test		}	}}OmEntry {	#tags : {		#author : 'Patrick',		#time : DateAndTime [ '2017-06-18T14:40:36.30511+02:00' ],		#prior : OmReference [ '25' ],		#self : OmReference [ '26' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #RenderTest,				#isMetaSide : false			},			#name : #testCellOffsets,			#protocol : #tests,			#sourceCode : 'testCellOffsets\r\t| grid form cellLoc renderer offset |\r\tgrid := Grid newOfSize: 30@30.\r\tform := Form extent: (SnakeGame gameBoardExtentFor: grid) depth: Display depth.\r\tform fillColor: (Color r: 0.9 g: 0.9 b: 0.9 ). "gray background"\r\trenderer := CellRenderer new.\r\t\r\tcellLoc := 3@1.\r\trenderer \tposition: cellLoc; cellGrid: grid; cellForm: form.\r\toffset := renderer gridFormOffset.\r\tself should: [ offset = (50@0) ].\r\t\r\tcellLoc := 3@3.\r\trenderer \tposition: cellLoc.\r\toffset := renderer gridFormOffset.\r\tself should: [ offset = (50@50) ].\r\t\r\tcellLoc := 1@3.\r\trenderer \tposition: cellLoc.\r\toffset := renderer gridFormOffset.\r\tself should: [ offset = (0@50) ].',			#stamp : 'Patrick 6/18/2017 14:40',			#package : #Snake_Game_Test		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #RenderTest,				#isMetaSide : false			},			#name : #testCellOffsets,			#protocol : #tests,			#sourceCode : 'testCellOffsets\r\t| grid form cellLoc renderer offset |\r\tgrid := Grid newOfSize: 30@30.\r\tform := Form extent: (SnakeGame gameBoardExtentFor: grid) depth: Display depth.\r\tform fillColor: (Color r: 0.9 g: 0.9 b: 0.9 ). "gray background"\r\trenderer := CellRenderer new.\r\t\r\tcellLoc := 3@1.\r\trenderer \tposition: cellLoc; cellGrid: grid; cellForm: form.\r\toffset := renderer gridFormOffset.\r\tself should: [ offset = (50@0) ].\r\t\r\tcellLoc := 3@3.\r\trenderer \tposition: cellLoc.\r\tself should: [ offset = (50@50) ].\r\t\r\tcellLoc := 1@3.\r\trenderer \tposition: cellLoc.\r\tself should: [ offset = (0@50) ].',			#stamp : 'Patrick 6/18/2017 14:40',			#package : #Snake_Game_Test		}	}}OmEntry {	#tags : {		#author : 'Patrick',		#time : DateAndTime [ '2017-06-18T14:40:52.92911+02:00' ],		#prior : OmReference [ '26' ],		#self : OmReference [ '27' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #RenderTest,				#isMetaSide : false			},			#name : #testCellOffsets,			#protocol : #tests,			#sourceCode : 'testCellOffsets\r\t| grid form cellLoc renderer offset |\r\tgrid := Grid newOfSize: 30@30.\r\tform := Form extent: (SnakeGame gameBoardExtentFor: grid) depth: Display depth.\r\tform fillColor: (Color r: 0.9 g: 0.9 b: 0.9 ). "gray background"\r\trenderer := CellRenderer new.\r\t\r\tcellLoc := 3@1.\r\trenderer \tposition: cellLoc; cellGrid: grid; cellForm: form.\r\toffset := renderer gridFormOffset.\r\tself should: [ offset = (50@0) ].\r\t\r\tcellLoc := 3@3.\r\trenderer \tposition: cellLoc.\r\tself should: [ offset = (50@50) ].\r\t\r\tcellLoc := 1@3.\r\trenderer \tposition: cellLoc.\r\tself should: [ offset = (0@50) ].',			#stamp : 'Patrick 6/18/2017 14:40',			#package : #Snake_Game_Test		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #RenderTest,				#isMetaSide : false			},			#name : #testCellOffsets,			#protocol : #tests,			#sourceCode : 'testCellOffsets\r\t| grid form cellLoc renderer offset |\r\tgrid := Grid newOfSize: 30@30.\r\tform := Form extent: (SnakeGame gameBoardExtentFor: grid) depth: Display depth.\r\tform fillColor: (Color r: 0.9 g: 0.9 b: 0.9 ). "gray background"\r\trenderer := CellRenderer new.\r\t\r\tcellLoc := 3@1.\r\trenderer \tposition: cellLoc; cellGrid: grid; cellForm: form.\r\toffset := renderer gridFormOffset.\r\tself should: [ offset = (50@0) ].\r\t\r\tcellLoc := 3@3.\r\trenderer \tposition: cellLoc.\r\toffset := renderer gridFormOffset.\r\tself should: [ offset = (50@50) ].\r\t\r\tcellLoc := 1@3.\r\trenderer \tposition: cellLoc.\r\toffset := renderer gridFormOffset.\r\tself should: [ offset = (0@50) ].',			#stamp : 'Patrick 6/18/2017 14:40',			#package : #Snake_Game_Test		}	}}OmEntry {	#tags : {		#author : 'Patrick',		#time : DateAndTime [ '2017-06-18T14:42:08.44011+02:00' ],		#prior : OmReference [ '27' ],		#self : OmReference [ '28' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #CellRenderer,				#isMetaSide : false			},			#name : #gridFormOffset,			#protocol : #'as yet unclassified',			#sourceCode : 'gridFormOffset\r\t| diff countX countY offset |\r\tdiff := CellRenderer cellExtent.\r\tcountX := (self position x) - 1.\r\tcountY := (self position y) - 1.\r\toffset := diff*(countX@countY).\r\t^offset',			#stamp : 'Patrick 6/18/2017 14:36',			#package : #Snake_Game_Model		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #CellRenderer,				#isMetaSide : false			},			#name : #gridFormOffset,			#protocol : #accessing,			#sourceCode : 'gridFormOffset\r\t| diff countX countY offset |\r\tdiff := CellRenderer cellExtent.\r\tcountX := (self position x) - 1.\r\tcountY := (self position y) - 1.\r\toffset := diff*(countX@countY).\r\t^offset',			#stamp : 'Patrick 6/18/2017 14:36',			#package : #Snake_Game_Model		}	}}OmEntry {	#tags : {		#author : 'Patrick',		#time : DateAndTime [ '2017-06-18T14:43:06.55911+02:00' ],		#prior : OmReference [ '28' ],		#self : OmReference [ '29' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #CellRenderer,				#isMetaSide : false			},			#name : #renderTopBorder,			#protocol : #drawing,			#sourceCode : 'renderTopBorder\r\t| line diff offset x1 y1 x2 y2 |\r\tdiff := CellRenderer cellExtent.',			#stamp : 'Patrick 6/18/2017 14:43',			#package : #Snake_Game_Model		}	}}OmEntry {	#tags : {		#author : 'Patrick',		#time : DateAndTime [ '2017-06-18T14:43:44.93011+02:00' ],		#prior : OmReference [ '29' ],		#self : OmReference [ '30' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #CellRenderer,				#isMetaSide : false			},			#name : #renderTopBorder,			#protocol : #drawing,			#sourceCode : 'renderTopBorder\r\t| line diff offset x1 y1 x2 y2 |\r\tdiff := CellRenderer cellExtent.',			#stamp : 'Patrick 6/18/2017 14:43',			#package : #Snake_Game_Model		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #CellRenderer,				#isMetaSide : false			},			#name : #renderTopBorder,			#protocol : #drawing,			#sourceCode : 'renderTopBorder\r\t| line diff offset x1 y1 x2 y2 |\r\tdiff := CellRenderer cellExtent.\r\toffset := self gridFormOffset.\r\t',			#stamp : 'Patrick 6/18/2017 14:43',			#package : #Snake_Game_Model		}	}}OmEntry {	#tags : {		#author : 'Patrick',		#time : DateAndTime [ '2017-06-18T14:43:58.89111+02:00' ],		#prior : OmReference [ '30' ],		#self : OmReference [ '31' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #CellRenderer,				#isMetaSide : false			},			#name : #renderTopBorder,			#protocol : #drawing,			#sourceCode : 'renderTopBorder\r\t| line diff offset x1 y1 x2 y2 |\r\tdiff := CellRenderer cellExtent.\r\toffset := self gridFormOffset.\r\t',			#stamp : 'Patrick 6/18/2017 14:43',			#package : #Snake_Game_Model		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #CellRenderer,				#isMetaSide : false			},			#name : #renderTopBorder,			#protocol : #drawing,			#sourceCode : 'renderTopBorder\r\t| line diff offset x1 y1 x2 y2 |\r\tdiff := CellRenderer cellExtent.\r\toffset := self gridFormOffset.\r\tx1 := offset.',			#stamp : 'Patrick 6/18/2017 14:43',			#package : #Snake_Game_Model		}	}}OmEntry {	#tags : {		#author : 'Patrick',		#time : DateAndTime [ '2017-06-18T14:44:21.36811+02:00' ],		#prior : OmReference [ '31' ],		#self : OmReference [ '32' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #CellRenderer,				#isMetaSide : false			},			#name : #renderTopBorder,			#protocol : #drawing,			#sourceCode : 'renderTopBorder\r\t| line diff offset x1 y1 x2 y2 |\r\tdiff := CellRenderer cellExtent.\r\toffset := self gridFormOffset.\r\tx1 := offset.',			#stamp : 'Patrick 6/18/2017 14:43',			#package : #Snake_Game_Model		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #CellRenderer,				#isMetaSide : false			},			#name : #renderTopBorder,			#protocol : #drawing,			#sourceCode : 'renderTopBorder\r\t| line diff offset x1 y1 x2 y2 |\r\tdiff := CellRenderer cellExtent.\r\toffset := self gridFormOffset.\r\tx1 := offset x.\r\tx2 := offset x*2.',			#stamp : 'Patrick 6/18/2017 14:44',			#package : #Snake_Game_Model		}	}}OmEntry {	#tags : {		#author : 'Patrick',		#time : DateAndTime [ '2017-06-18T14:44:36.07011+02:00' ],		#prior : OmReference [ '32' ],		#self : OmReference [ '33' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #CellRenderer,				#isMetaSide : false			},			#name : #renderTopBorder,			#protocol : #drawing,			#sourceCode : 'renderTopBorder\r\t| line diff offset x1 y1 x2 y2 |\r\tdiff := CellRenderer cellExtent.\r\toffset := self gridFormOffset.\r\tx1 := offset x.\r\tx2 := offset x*2.',			#stamp : 'Patrick 6/18/2017 14:44',			#package : #Snake_Game_Model		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #CellRenderer,				#isMetaSide : false			},			#name : #renderTopBorder,			#protocol : #drawing,			#sourceCode : 'renderTopBorder\r\t| line diff offset x1 y1 x2 y2 |\r\tdiff := CellRenderer cellExtent.\r\toffset := self gridFormOffset.\r\tx1 := offset x.\r\tx2 := offset x + diff x.',			#stamp : 'Patrick 6/18/2017 14:44',			#package : #Snake_Game_Model		}	}}OmEntry {	#tags : {		#author : 'Patrick',		#time : DateAndTime [ '2017-06-18T14:44:58.82311+02:00' ],		#prior : OmReference [ '33' ],		#self : OmReference [ '34' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #CellRenderer,				#isMetaSide : false			},			#name : #renderTopBorder,			#protocol : #drawing,			#sourceCode : 'renderTopBorder\r\t| line diff offset x1 y1 x2 y2 |\r\tdiff := CellRenderer cellExtent.\r\toffset := self gridFormOffset.\r\tx1 := offset x.\r\tx2 := offset x + diff x.',			#stamp : 'Patrick 6/18/2017 14:44',			#package : #Snake_Game_Model		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #CellRenderer,				#isMetaSide : false			},			#name : #renderTopBorder,			#protocol : #drawing,			#sourceCode : 'renderTopBorder\r\t| line diff offset x1 y1 x2 y2 |\r\tdiff := CellRenderer cellExtent.\r\toffset := self gridFormOffset.\r\tx1 := offset x.\r\tx2 := offset x + diff x.\r\ty1 := offset y.\r\ty2 := offset y.',			#stamp : 'Patrick 6/18/2017 14:44',			#package : #Snake_Game_Model		}	}}OmEntry {	#tags : {		#author : 'Patrick',		#time : DateAndTime [ '2017-06-18T14:46:56.73811+02:00' ],		#prior : OmReference [ '34' ],		#self : OmReference [ '35' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #CellRenderer,				#isMetaSide : false			},			#name : #renderTopBorder,			#protocol : #drawing,			#sourceCode : 'renderTopBorder\r\t| line diff offset x1 y1 x2 y2 |\r\tdiff := CellRenderer cellExtent.\r\toffset := self gridFormOffset.\r\tx1 := offset x.\r\tx2 := offset x + diff x.\r\ty1 := offset y.\r\ty2 := offset y.',			#stamp : 'Patrick 6/18/2017 14:44',			#package : #Snake_Game_Model		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #CellRenderer,				#isMetaSide : false			},			#name : #renderTopBorder,			#protocol : #drawing,			#sourceCode : 'renderTopBorder\r\t| line diff offset x1 y1 x2 y2 |\r\tdiff := CellRenderer cellExtent.\r\toffset := self gridFormOffset.\r\tx1 := offset x.\r\tx2 := offset x + diff x.\r\ty1 := offset y.\r\ty2 := offset y.\r\tline := LineMorph\r\t\tfrom: x1@y1;\r\t\tto: x1@y1;\r\t\twithForm: (Form extent: 1@1 depth: 8)\t\t',			#stamp : 'Patrick 6/18/2017 14:46',			#package : #Snake_Game_Model		}	}}OmEntry {	#tags : {		#author : 'Patrick',		#time : DateAndTime [ '2017-06-18T14:47:26.74911+02:00' ],		#prior : OmReference [ '35' ],		#self : OmReference [ '36' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #CellRenderer,				#isMetaSide : false			},			#name : #renderTopBorder,			#protocol : #drawing,			#sourceCode : 'renderTopBorder\r\t| line diff offset x1 y1 x2 y2 |\r\tdiff := CellRenderer cellExtent.\r\toffset := self gridFormOffset.\r\tx1 := offset x.\r\tx2 := offset x + diff x.\r\ty1 := offset y.\r\ty2 := offset y.\r\tline := LineMorph\r\t\tfrom: x1@y1;\r\t\tto: x1@y1;\r\t\twithForm: (Form extent: 1@1 depth: 8)\t\t',			#stamp : 'Patrick 6/18/2017 14:46',			#package : #Snake_Game_Model		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #CellRenderer,				#isMetaSide : false			},			#name : #renderTopBorder,			#protocol : #drawing,			#sourceCode : 'renderTopBorder\r\t| line diff offset x1 y1 x2 y2 |\r\tdiff := CellRenderer cellExtent.\r\toffset := self gridFormOffset.\r\tx1 := offset x.\r\tx2 := offset x + diff x.\r\ty1 := offset y.\r\ty2 := offset y.\r\tline := LineMorph\r\t\tfrom: x1@y1;\r\t\tto: x1@y1;\r\t\twithForm: (Form extent: 1@1 depth: 8) fillWhite.\r\tline displayOn: self cellForm.\t\t',			#stamp : 'Patrick 6/18/2017 14:47',			#package : #Snake_Game_Model		}	}}OmEntry {	#tags : {		#author : 'Patrick',		#time : DateAndTime [ '2017-06-18T14:48:40.07911+02:00' ],		#prior : OmReference [ '36' ],		#self : OmReference [ '37' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #CellRenderer,				#isMetaSide : false			},			#name : #renderBorder,			#protocol : #drawing,			#sourceCode : 'renderBorder\r\t"will create border for cell"',			#stamp : 'Patrick 6/17/2017 15:39',			#package : #Snake_Game_Model		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #CellRenderer,				#isMetaSide : false			},			#name : #renderBorder,			#protocol : #drawing,			#sourceCode : 'renderBorder\r\tself renderTopBorder.\r\t"renderBottomBorder.\r\trenderLeftBorder.\r\trenderRightBorder."',			#stamp : 'Patrick 6/18/2017 14:48',			#package : #Snake_Game_Model		}	}}OmEntry {	#tags : {		#author : 'Patrick',		#time : DateAndTime [ '2017-06-18T14:48:49.64611+02:00' ],		#prior : OmReference [ '37' ],		#self : OmReference [ '38' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #CellRenderer,				#isMetaSide : false			},			#name : #renderBorder,			#protocol : #drawing,			#sourceCode : 'renderBorder\r\tself renderTopBorder.\r\t"renderBottomBorder.\r\trenderLeftBorder.\r\trenderRightBorder."',			#stamp : 'Patrick 6/18/2017 14:48',			#package : #Snake_Game_Model		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #CellRenderer,				#isMetaSide : false			},			#name : #renderBorder,			#protocol : #drawing,			#sourceCode : 'renderBorder\r\tself renderTopBorder.\r\tself renderBottomBorder.\r\tself renderLeftBorder.\r\tself renderRightBorder.',			#stamp : 'Patrick 6/18/2017 14:48',			#package : #Snake_Game_Model		}	}}OmEntry {	#tags : {		#author : 'Patrick',		#time : DateAndTime [ '2017-06-18T14:49:28.29411+02:00' ],		#prior : OmReference [ '38' ],		#self : OmReference [ '39' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #CellRenderer,				#isMetaSide : false			},			#name : #renderBottomBorder,			#protocol : #drawing,			#sourceCode : 'renderBottomBorder\r\t| line diff offset x1 y1 x2 y2 |\r\tdiff := CellRenderer cellExtent.\r\toffset := self gridFormOffset.\r\tx1 := offset x.\r\tx2 := offset x + diff x.\r\ty1 := offset y + diff y.\r\ty2 := offset y + diff y.\r\tline := LineMorph\r\t\tfrom: x1@y1;\r\t\tto: x1@y1;\r\t\twithForm: (Form extent: 1@1 depth: 8) fillWhite.\r\tline displayOn: self cellForm.\t\t',			#stamp : 'Patrick 6/18/2017 14:49',			#package : #Snake_Game_Model		}	}}OmEntry {	#tags : {		#author : 'Patrick',		#time : DateAndTime [ '2017-06-18T14:50:08.67211+02:00' ],		#prior : OmReference [ '39' ],		#self : OmReference [ '40' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #CellRenderer,				#isMetaSide : false			},			#name : #renderLeftBorder,			#protocol : #drawing,			#sourceCode : 'renderLeftBorder\r\t| line diff offset x1 y1 x2 y2 |\r\tdiff := CellRenderer cellExtent.\r\toffset := self gridFormOffset.\r\tx1 := offset x.\r\tx2 := offset x.\r\ty1 := offset y.\r\ty2 := offset y + diff.\r\tline := LineMorph\r\t\tfrom: x1@y1;\r\t\tto: x1@y1;\r\t\twithForm: (Form extent: 1@1 depth: 8) fillWhite.\r\tline displayOn: self cellForm.\t\t',			#stamp : 'Patrick 6/18/2017 14:50',			#package : #Snake_Game_Model		}	}}OmEntry {	#tags : {		#author : 'Patrick',		#time : DateAndTime [ '2017-06-18T14:50:20.66411+02:00' ],		#prior : OmReference [ '40' ],		#self : OmReference [ '41' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #CellRenderer,				#isMetaSide : false			},			#name : #renderRightBorder,			#protocol : #drawing,			#sourceCode : 'renderRightBorder\r\t| line diff offset x1 y1 x2 y2 |\r\tdiff := CellRenderer cellExtent.\r\toffset := self gridFormOffset.\r\tx1 := offset x + diff x.\r\tx2 := offset x + diff x.\r\ty1 := offset y.\r\ty2 := offset y.\r\tline := LineMorph\r\t\tfrom: x1@y1;\r\t\tto: x1@y1;\r\t\twithForm: (Form extent: 1@1 depth: 8) fillWhite.\r\tline displayOn: self cellForm.\t\t',			#stamp : 'Patrick 6/18/2017 14:50',			#package : #Snake_Game_Model		}	}}OmEntry {	#tags : {		#author : 'Patrick',		#time : DateAndTime [ '2017-06-18T14:50:26.85011+02:00' ],		#prior : OmReference [ '41' ],		#self : OmReference [ '42' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #CellRenderer,				#isMetaSide : false			},			#name : #renderRightBorder,			#protocol : #drawing,			#sourceCode : 'renderRightBorder\r\t| line diff offset x1 y1 x2 y2 |\r\tdiff := CellRenderer cellExtent.\r\toffset := self gridFormOffset.\r\tx1 := offset x + diff x.\r\tx2 := offset x + diff x.\r\ty1 := offset y.\r\ty2 := offset y.\r\tline := LineMorph\r\t\tfrom: x1@y1;\r\t\tto: x1@y1;\r\t\twithForm: (Form extent: 1@1 depth: 8) fillWhite.\r\tline displayOn: self cellForm.\t\t',			#stamp : 'Patrick 6/18/2017 14:50',			#package : #Snake_Game_Model		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #CellRenderer,				#isMetaSide : false			},			#name : #renderRightBorder,			#protocol : #drawing,			#sourceCode : 'renderRightBorder\r\t| line diff offset x1 y1 x2 y2 |\r\tdiff := CellRenderer cellExtent.\r\toffset := self gridFormOffset.\r\tx1 := offset x + diff x.\r\tx2 := offset x + diff x.\r\ty1 := offset y.\r\ty2 := offset y + diff x.\r\tline := LineMorph\r\t\tfrom: x1@y1;\r\t\tto: x1@y1;\r\t\twithForm: (Form extent: 1@1 depth: 8) fillWhite.\r\tline displayOn: self cellForm.\t\t',			#stamp : 'Patrick 6/18/2017 14:50',			#package : #Snake_Game_Model		}	}}OmEntry {	#tags : {		#author : 'Patrick',		#time : DateAndTime [ '2017-06-18T14:50:52.77411+02:00' ],		#prior : OmReference [ '42' ],		#self : OmReference [ '43' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #CellRenderer,				#isMetaSide : false			},			#name : #renderTopBorder,			#protocol : #drawing,			#sourceCode : 'renderTopBorder\r\t| line diff offset x1 y1 x2 y2 |\r\tdiff := CellRenderer cellExtent.\r\toffset := self gridFormOffset.\r\tx1 := offset x.\r\tx2 := offset x + diff x.\r\ty1 := offset y.\r\ty2 := offset y.\r\tline := LineMorph\r\t\tfrom: x1@y1;\r\t\tto: x1@y1;\r\t\twithForm: (Form extent: 1@1 depth: 8) fillWhite.\r\tline displayOn: self cellForm.\t\t',			#stamp : 'Patrick 6/18/2017 14:47',			#package : #Snake_Game_Model		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #CellRenderer,				#isMetaSide : false			},			#name : #renderTopBorder,			#protocol : #drawing,			#sourceCode : 'renderTopBorder\r\t| line diff offset x1 y1 x2 y2 |\r\tdiff := self cellExtent.\r\toffset := self gridFormOffset.\r\tx1 := offset x.\r\tx2 := offset x + diff x.\r\ty1 := offset y.\r\ty2 := offset y.\r\tline := LineMorph\r\t\tfrom: x1@y1;\r\t\tto: x1@y1;\r\t\twithForm: (Form extent: 1@1 depth: 8) fillWhite.\r\tline displayOn: self cellForm.\t\t',			#stamp : 'Patrick 6/18/2017 14:50',			#package : #Snake_Game_Model		}	}}OmEntry {	#tags : {		#author : 'Patrick',		#time : DateAndTime [ '2017-06-18T14:50:55.99811+02:00' ],		#prior : OmReference [ '43' ],		#self : OmReference [ '44' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #CellRenderer,				#isMetaSide : false			},			#name : #renderRightBorder,			#protocol : #drawing,			#sourceCode : 'renderRightBorder\r\t| line diff offset x1 y1 x2 y2 |\r\tdiff := CellRenderer cellExtent.\r\toffset := self gridFormOffset.\r\tx1 := offset x + diff x.\r\tx2 := offset x + diff x.\r\ty1 := offset y.\r\ty2 := offset y + diff x.\r\tline := LineMorph\r\t\tfrom: x1@y1;\r\t\tto: x1@y1;\r\t\twithForm: (Form extent: 1@1 depth: 8) fillWhite.\r\tline displayOn: self cellForm.\t\t',			#stamp : 'Patrick 6/18/2017 14:50',			#package : #Snake_Game_Model		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #CellRenderer,				#isMetaSide : false			},			#name : #renderRightBorder,			#protocol : #drawing,			#sourceCode : 'renderRightBorder\r\t| line diff offset x1 y1 x2 y2 |\r\tdiff := self cellExtent.\r\toffset := self gridFormOffset.\r\tx1 := offset x + diff x.\r\tx2 := offset x + diff x.\r\ty1 := offset y.\r\ty2 := offset y + diff x.\r\tline := LineMorph\r\t\tfrom: x1@y1;\r\t\tto: x1@y1;\r\t\twithForm: (Form extent: 1@1 depth: 8) fillWhite.\r\tline displayOn: self cellForm.\t\t',			#stamp : 'Patrick 6/18/2017 14:50',			#package : #Snake_Game_Model		}	}}OmEntry {	#tags : {		#author : 'Patrick',		#time : DateAndTime [ '2017-06-18T14:50:59.04111+02:00' ],		#prior : OmReference [ '44' ],		#self : OmReference [ '45' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #CellRenderer,				#isMetaSide : false			},			#name : #renderLeftBorder,			#protocol : #drawing,			#sourceCode : 'renderLeftBorder\r\t| line diff offset x1 y1 x2 y2 |\r\tdiff := CellRenderer cellExtent.\r\toffset := self gridFormOffset.\r\tx1 := offset x.\r\tx2 := offset x.\r\ty1 := offset y.\r\ty2 := offset y + diff.\r\tline := LineMorph\r\t\tfrom: x1@y1;\r\t\tto: x1@y1;\r\t\twithForm: (Form extent: 1@1 depth: 8) fillWhite.\r\tline displayOn: self cellForm.\t\t',			#stamp : 'Patrick 6/18/2017 14:50',			#package : #Snake_Game_Model		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #CellRenderer,				#isMetaSide : false			},			#name : #renderLeftBorder,			#protocol : #drawing,			#sourceCode : 'renderLeftBorder\r\t| line diff offset x1 y1 x2 y2 |\r\tdiff := self cellExtent.\r\toffset := self gridFormOffset.\r\tx1 := offset x.\r\tx2 := offset x.\r\ty1 := offset y.\r\ty2 := offset y + diff.\r\tline := LineMorph\r\t\tfrom: x1@y1;\r\t\tto: x1@y1;\r\t\twithForm: (Form extent: 1@1 depth: 8) fillWhite.\r\tline displayOn: self cellForm.\t\t',			#stamp : 'Patrick 6/18/2017 14:50',			#package : #Snake_Game_Model		}	}}OmEntry {	#tags : {		#author : 'Patrick',		#time : DateAndTime [ '2017-06-18T14:51:02.75811+02:00' ],		#prior : OmReference [ '45' ],		#self : OmReference [ '46' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #CellRenderer,				#isMetaSide : false			},			#name : #renderBottomBorder,			#protocol : #drawing,			#sourceCode : 'renderBottomBorder\r\t| line diff offset x1 y1 x2 y2 |\r\tdiff := CellRenderer cellExtent.\r\toffset := self gridFormOffset.\r\tx1 := offset x.\r\tx2 := offset x + diff x.\r\ty1 := offset y + diff y.\r\ty2 := offset y + diff y.\r\tline := LineMorph\r\t\tfrom: x1@y1;\r\t\tto: x1@y1;\r\t\twithForm: (Form extent: 1@1 depth: 8) fillWhite.\r\tline displayOn: self cellForm.\t\t',			#stamp : 'Patrick 6/18/2017 14:49',			#package : #Snake_Game_Model		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #CellRenderer,				#isMetaSide : false			},			#name : #renderBottomBorder,			#protocol : #drawing,			#sourceCode : 'renderBottomBorder\r\t| line diff offset x1 y1 x2 y2 |\r\tdiff := self cellExtent.\r\toffset := self gridFormOffset.\r\tx1 := offset x.\r\tx2 := offset x + diff x.\r\ty1 := offset y + diff y.\r\ty2 := offset y + diff y.\r\tline := LineMorph\r\t\tfrom: x1@y1;\r\t\tto: x1@y1;\r\t\twithForm: (Form extent: 1@1 depth: 8) fillWhite.\r\tline displayOn: self cellForm.\t\t',			#stamp : 'Patrick 6/18/2017 14:51',			#package : #Snake_Game_Model		}	}}OmEntry {	#tags : {		#author : 'Patrick',		#time : DateAndTime [ '2017-06-18T14:54:12.12011+02:00' ],		#prior : OmReference [ '46' ],		#self : OmReference [ '47' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #CellRenderer,				#isMetaSide : false			},			#name : #renderBottomBorder,			#protocol : #drawing,			#sourceCode : 'renderBottomBorder\r\t| line diff offset x1 y1 x2 y2 |\r\tdiff := self cellExtent.\r\toffset := self gridFormOffset.\r\tx1 := offset x.\r\tx2 := offset x + diff x.\r\ty1 := offset y + diff y.\r\ty2 := offset y + diff y.\r\tline := LineMorph\r\t\tfrom: x1@y1;\r\t\tto: x1@y1;\r\t\twithForm: (Form extent: 1@1 depth: 8) fillWhite.\r\tline displayOn: self cellForm.\t\t',			#stamp : 'Patrick 6/18/2017 14:52',			#package : #Snake_Game_Model		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #CellRenderer,				#isMetaSide : false			},			#name : #renderBottomBorder,			#protocol : #drawing,			#sourceCode : 'renderBottomBorder\r\t| line diff offset x1 y1 x2 y2 |\r\tdiff := self cellExtent.\r\toffset := self gridFormOffset.\r\tx1 := offset x.\r\tx2 := offset x + diff x.\r\ty1 := offset y + diff y.\r\ty2 := offset y + diff y.\r\tself cellForm getCanvas line: (x1@y1) to: (x2@y2) width: 1 color: #white. \r\t"line := LineMorph\r\t\tfrom: x1@y1;\r\t\tto: x1@y1;\r\t\twithForm: (Form extent: 1@1 depth: 8) fillWhite.\r\tline displayOn: self cellForm."',			#stamp : 'Patrick 6/18/2017 14:54',			#package : #Snake_Game_Model		}	}}OmEntry {	#tags : {		#author : 'Patrick',		#time : DateAndTime [ '2017-06-18T14:54:19.68611+02:00' ],		#prior : OmReference [ '47' ],		#self : OmReference [ '48' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #CellRenderer,				#isMetaSide : false			},			#name : #renderBottomBorder,			#protocol : #drawing,			#sourceCode : 'renderBottomBorder\r\t| line diff offset x1 y1 x2 y2 |\r\tdiff := self cellExtent.\r\toffset := self gridFormOffset.\r\tx1 := offset x.\r\tx2 := offset x + diff x.\r\ty1 := offset y + diff y.\r\ty2 := offset y + diff y.\r\tself cellForm getCanvas line: (x1@y1) to: (x2@y2) width: 1 color: #white. \r\t"line := LineMorph\r\t\tfrom: x1@y1;\r\t\tto: x1@y1;\r\t\twithForm: (Form extent: 1@1 depth: 8) fillWhite.\r\tline displayOn: self cellForm."',			#stamp : 'Patrick 6/18/2017 14:54',			#package : #Snake_Game_Model		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #CellRenderer,				#isMetaSide : false			},			#name : #renderBottomBorder,			#protocol : #drawing,			#sourceCode : 'renderBottomBorder\r\t| diff offset x1 y1 x2 y2 |\r\tdiff := self cellExtent.\r\toffset := self gridFormOffset.\r\tx1 := offset x.\r\tx2 := offset x + diff x.\r\ty1 := offset y + diff y.\r\ty2 := offset y + diff y.\r\tself cellForm getCanvas line: (x1@y1) to: (x2@y2) width: 1 color: #white. \r\t"line := LineMorph\r\t\tfrom: x1@y1;\r\t\tto: x1@y1;\r\t\twithForm: (Form extent: 1@1 depth: 8) fillWhite.\r\tline displayOn: self cellForm."',			#stamp : 'Patrick 6/18/2017 14:54',			#package : #Snake_Game_Model		}	}}OmEntry {	#tags : {		#author : 'Patrick',		#time : DateAndTime [ '2017-06-18T14:55:04.70111+02:00' ],		#prior : OmReference [ '48' ],		#self : OmReference [ '49' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #CellRenderer,				#isMetaSide : false			},			#name : #renderBottomBorder,			#protocol : #drawing,			#sourceCode : 'renderBottomBorder\r\t| diff offset x1 y1 x2 y2 |\r\tdiff := self cellExtent.\r\toffset := self gridFormOffset.\r\tx1 := offset x.\r\tx2 := offset x + diff x.\r\ty1 := offset y + diff y.\r\ty2 := offset y + diff y.\r\tself cellForm getCanvas line: (x1@y1) to: (x2@y2) width: 1 color: #white. \r\t"line := LineMorph\r\t\tfrom: x1@y1;\r\t\tto: x1@y1;\r\t\twithForm: (Form extent: 1@1 depth: 8) fillWhite.\r\tline displayOn: self cellForm."',			#stamp : 'Patrick 6/18/2017 14:54',			#package : #Snake_Game_Model		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #CellRenderer,				#isMetaSide : false			},			#name : #renderBottomBorder,			#protocol : #drawing,			#sourceCode : 'renderBottomBorder\r\t| diff offset x1 y1 x2 y2 |\r\tdiff := self cellExtent.\r\toffset := self gridFormOffset.\r\tx1 := offset x.\r\tx2 := offset x + diff x.\r\ty1 := offset y + diff y.\r\ty2 := offset y + diff y.\r\tself cellForm getCanvas line: (x1@y1) to: (x2@y2) width: 1 color: Color white.\r\t"line := LineMorph\r\t\tfrom: x1@y1;\r\t\tto: x1@y1;\r\t\twithForm: (Form extent: 1@1 depth: 8) fillWhite.\r\tline displayOn: self cellForm."',			#stamp : 'Patrick 6/18/2017 14:55',			#package : #Snake_Game_Model		}	}}OmEntry {	#tags : {		#author : 'Patrick',		#time : DateAndTime [ '2017-06-18T14:55:13.49311+02:00' ],		#prior : OmReference [ '49' ],		#self : OmReference [ '50' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #CellRenderer,				#isMetaSide : false			},			#name : #renderLeftBorder,			#protocol : #drawing,			#sourceCode : 'renderLeftBorder\r\t| line diff offset x1 y1 x2 y2 |\r\tdiff := self cellExtent.\r\toffset := self gridFormOffset.\r\tx1 := offset x.\r\tx2 := offset x.\r\ty1 := offset y.\r\ty2 := offset y + diff.\r\tline := LineMorph\r\t\tfrom: x1@y1;\r\t\tto: x1@y1;\r\t\twithForm: (Form extent: 1@1 depth: 8) fillWhite.\r\tline displayOn: self cellForm.\t\t',			#stamp : 'Patrick 6/18/2017 14:50',			#package : #Snake_Game_Model		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #CellRenderer,				#isMetaSide : false			},			#name : #renderLeftBorder,			#protocol : #drawing,			#sourceCode : 'renderLeftBorder\r\t| line diff offset x1 y1 x2 y2 |\r\tdiff := self cellExtent.\r\toffset := self gridFormOffset.\r\tx1 := offset x.\r\tx2 := offset x.\r\ty1 := offset y.\r\ty2 := offset y + diff.\r\tself cellForm getCanvas line: (x1@y1) to: (x2@y2) width: 1 color: Color white.',			#stamp : 'Patrick 6/18/2017 14:55',			#package : #Snake_Game_Model		}	}}OmEntry {	#tags : {		#author : 'Patrick',		#time : DateAndTime [ '2017-06-18T14:55:16.50911+02:00' ],		#prior : OmReference [ '50' ],		#self : OmReference [ '51' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #CellRenderer,				#isMetaSide : false			},			#name : #renderRightBorder,			#protocol : #drawing,			#sourceCode : 'renderRightBorder\r\t| line diff offset x1 y1 x2 y2 |\r\tdiff := self cellExtent.\r\toffset := self gridFormOffset.\r\tx1 := offset x + diff x.\r\tx2 := offset x + diff x.\r\ty1 := offset y.\r\ty2 := offset y + diff x.\r\tline := LineMorph\r\t\tfrom: x1@y1;\r\t\tto: x1@y1;\r\t\twithForm: (Form extent: 1@1 depth: 8) fillWhite.\r\tline displayOn: self cellForm.\t\t',			#stamp : 'Patrick 6/18/2017 14:50',			#package : #Snake_Game_Model		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #CellRenderer,				#isMetaSide : false			},			#name : #renderRightBorder,			#protocol : #drawing,			#sourceCode : 'renderRightBorder\r\t| line diff offset x1 y1 x2 y2 |\r\tdiff := self cellExtent.\r\toffset := self gridFormOffset.\r\tx1 := offset x + diff x.\r\tx2 := offset x + diff x.\r\ty1 := offset y.\r\ty2 := offset y + diff x.\r\tself cellForm getCanvas line: (x1@y1) to: (x2@y2) width: 1 color: Color white.',			#stamp : 'Patrick 6/18/2017 14:55',			#package : #Snake_Game_Model		}	}}OmEntry {	#tags : {		#author : 'Patrick',		#time : DateAndTime [ '2017-06-18T14:55:19.88211+02:00' ],		#prior : OmReference [ '51' ],		#self : OmReference [ '52' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #CellRenderer,				#isMetaSide : false			},			#name : #renderTopBorder,			#protocol : #drawing,			#sourceCode : 'renderTopBorder\r\t| line diff offset x1 y1 x2 y2 |\r\tdiff := self cellExtent.\r\toffset := self gridFormOffset.\r\tx1 := offset x.\r\tx2 := offset x + diff x.\r\ty1 := offset y.\r\ty2 := offset y.\r\tline := LineMorph\r\t\tfrom: x1@y1;\r\t\tto: x1@y1;\r\t\twithForm: (Form extent: 1@1 depth: 8) fillWhite.\r\tline displayOn: self cellForm.\t\t',			#stamp : 'Patrick 6/18/2017 14:50',			#package : #Snake_Game_Model		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #CellRenderer,				#isMetaSide : false			},			#name : #renderTopBorder,			#protocol : #drawing,			#sourceCode : 'renderTopBorder\r\t| line diff offset x1 y1 x2 y2 |\r\tdiff := self cellExtent.\r\toffset := self gridFormOffset.\r\tx1 := offset x.\r\tx2 := offset x + diff x.\r\ty1 := offset y.\r\ty2 := offset y.\r\tself cellForm getCanvas line: (x1@y1) to: (x2@y2) width: 1 color: Color white.',			#stamp : 'Patrick 6/18/2017 14:55',			#package : #Snake_Game_Model		}	}}OmEntry {	#tags : {		#author : 'Patrick',		#time : DateAndTime [ '2017-06-18T14:55:27.62111+02:00' ],		#prior : OmReference [ '52' ],		#self : OmReference [ '53' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #CellRenderer,				#isMetaSide : false			},			#name : #renderTopBorder,			#protocol : #drawing,			#sourceCode : 'renderTopBorder\r\t| line diff offset x1 y1 x2 y2 |\r\tdiff := self cellExtent.\r\toffset := self gridFormOffset.\r\tx1 := offset x.\r\tx2 := offset x + diff x.\r\ty1 := offset y.\r\ty2 := offset y.\r\tself cellForm getCanvas line: (x1@y1) to: (x2@y2) width: 1 color: Color white.',			#stamp : 'Patrick 6/18/2017 14:55',			#package : #Snake_Game_Model		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #CellRenderer,				#isMetaSide : false			},			#name : #renderTopBorder,			#protocol : #drawing,			#sourceCode : 'renderTopBorder\r\t| diff offset x1 y1 x2 y2 |\r\tdiff := self cellExtent.\r\toffset := self gridFormOffset.\r\tx1 := offset x.\r\tx2 := offset x + diff x.\r\ty1 := offset y.\r\ty2 := offset y.\r\tself cellForm getCanvas line: (x1@y1) to: (x2@y2) width: 1 color: Color white.',			#stamp : 'Patrick 6/18/2017 14:55',			#package : #Snake_Game_Model		}	}}OmEntry {	#tags : {		#author : 'Patrick',		#time : DateAndTime [ '2017-06-18T14:55:31.87411+02:00' ],		#prior : OmReference [ '53' ],		#self : OmReference [ '54' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #CellRenderer,				#isMetaSide : false			},			#name : #renderRightBorder,			#protocol : #drawing,			#sourceCode : 'renderRightBorder\r\t| line diff offset x1 y1 x2 y2 |\r\tdiff := self cellExtent.\r\toffset := self gridFormOffset.\r\tx1 := offset x + diff x.\r\tx2 := offset x + diff x.\r\ty1 := offset y.\r\ty2 := offset y + diff x.\r\tself cellForm getCanvas line: (x1@y1) to: (x2@y2) width: 1 color: Color white.',			#stamp : 'Patrick 6/18/2017 14:55',			#package : #Snake_Game_Model		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #CellRenderer,				#isMetaSide : false			},			#name : #renderRightBorder,			#protocol : #drawing,			#sourceCode : 'renderRightBorder\r\t| diff offset x1 y1 x2 y2 |\r\tdiff := self cellExtent.\r\toffset := self gridFormOffset.\r\tx1 := offset x + diff x.\r\tx2 := offset x + diff x.\r\ty1 := offset y.\r\ty2 := offset y + diff x.\r\tself cellForm getCanvas line: (x1@y1) to: (x2@y2) width: 1 color: Color white.',			#stamp : 'Patrick 6/18/2017 14:55',			#package : #Snake_Game_Model		}	}}OmEntry {	#tags : {		#author : 'Patrick',		#time : DateAndTime [ '2017-06-18T14:55:35.89911+02:00' ],		#prior : OmReference [ '54' ],		#self : OmReference [ '55' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #CellRenderer,				#isMetaSide : false			},			#name : #renderLeftBorder,			#protocol : #drawing,			#sourceCode : 'renderLeftBorder\r\t| line diff offset x1 y1 x2 y2 |\r\tdiff := self cellExtent.\r\toffset := self gridFormOffset.\r\tx1 := offset x.\r\tx2 := offset x.\r\ty1 := offset y.\r\ty2 := offset y + diff.\r\tself cellForm getCanvas line: (x1@y1) to: (x2@y2) width: 1 color: Color white.',			#stamp : 'Patrick 6/18/2017 14:55',			#package : #Snake_Game_Model		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #CellRenderer,				#isMetaSide : false			},			#name : #renderLeftBorder,			#protocol : #drawing,			#sourceCode : 'renderLeftBorder\r\t| diff offset x1 y1 x2 y2 |\r\tdiff := self cellExtent.\r\toffset := self gridFormOffset.\r\tx1 := offset x.\r\tx2 := offset x.\r\ty1 := offset y.\r\ty2 := offset y + diff.\r\tself cellForm getCanvas line: (x1@y1) to: (x2@y2) width: 1 color: Color white.',			#stamp : 'Patrick 6/18/2017 14:55',			#package : #Snake_Game_Model		}	}}OmEntry {	#tags : {		#author : 'Patrick',		#time : DateAndTime [ '2017-06-18T14:55:49.73911+02:00' ],		#prior : OmReference [ '55' ],		#self : OmReference [ '56' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #CellRenderer,				#isMetaSide : false			},			#name : #renderBottomBorder,			#protocol : #drawing,			#sourceCode : 'renderBottomBorder\r\t| diff offset x1 y1 x2 y2 |\r\tdiff := self cellExtent.\r\toffset := self gridFormOffset.\r\tx1 := offset x.\r\tx2 := offset x + diff x.\r\ty1 := offset y + diff y.\r\ty2 := offset y + diff y.\r\tself cellForm getCanvas line: (x1@y1) to: (x2@y2) width: 1 color: Color white.\r\t"line := LineMorph\r\t\tfrom: x1@y1;\r\t\tto: x1@y1;\r\t\twithForm: (Form extent: 1@1 depth: 8) fillWhite.\r\tline displayOn: self cellForm."',			#stamp : 'Patrick 6/18/2017 14:55',			#package : #Snake_Game_Model		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #CellRenderer,				#isMetaSide : false			},			#name : #renderBottomBorder,			#protocol : #drawing,			#sourceCode : 'renderBottomBorder\r\t| diff offset x1 y1 x2 y2 |\r\tdiff := CellRenderer cellExtent.\r\toffset := self gridFormOffset.\r\tx1 := offset x.\r\tx2 := offset x + diff x.\r\ty1 := offset y + diff y.\r\ty2 := offset y + diff y.\r\tself cellForm getCanvas line: (x1@y1) to: (x2@y2) width: 1 color: Color white.\r\t"line := LineMorph\r\t\tfrom: x1@y1;\r\t\tto: x1@y1;\r\t\twithForm: (Form extent: 1@1 depth: 8) fillWhite.\r\tline displayOn: self cellForm."',			#stamp : 'Patrick 6/18/2017 14:55',			#package : #Snake_Game_Model		}	}}OmEntry {	#tags : {		#author : 'Patrick',		#time : DateAndTime [ '2017-06-18T14:55:56.36711+02:00' ],		#prior : OmReference [ '56' ],		#self : OmReference [ '57' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'ManifestSnakeGameModel class',				#isMetaSide : true			},			#name : #ruleRBRefersToClassRuleV1FalsePositive,			#protocol : #code-critics,			#sourceCode : 'ruleRBRefersToClassRuleV1FalsePositive\r\t^ #()',			#stamp : 'Patrick 6/18/2017 14:55',			#package : #Snake_Game_Model		}	}}OmEntry {	#tags : {		#author : 'Patrick',		#time : DateAndTime [ '2017-06-18T14:55:56.37711+02:00' ],		#prior : OmReference [ '57' ],		#self : OmReference [ '58' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'ManifestSnakeGameModel class',				#isMetaSide : true			},			#name : #ruleRBRefersToClassRuleV1FalsePositive,			#protocol : #code-critics,			#sourceCode : 'ruleRBRefersToClassRuleV1FalsePositive\r\t^ #()',			#stamp : 'Patrick 6/18/2017 14:55',			#package : #Snake_Game_Model		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'ManifestSnakeGameModel class',				#isMetaSide : true			},			#name : #ruleRBRefersToClassRuleV1FalsePositive,			#protocol : #code-critics,			#sourceCode : 'ruleRBRefersToClassRuleV1FalsePositive\r\t^ #(#(#(#RGClassDefinition #(#CellRenderer)) #\'2017-06-18T14:55:56.37111+02:00\') )',			#stamp : 'Patrick 6/18/2017 14:55',			#package : #Snake_Game_Model		}	}}OmEntry {	#tags : {		#author : 'Patrick',		#time : DateAndTime [ '2017-06-18T14:56:00.71211+02:00' ],		#prior : OmReference [ '58' ],		#self : OmReference [ '59' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #CellRenderer,				#isMetaSide : false			},			#name : #renderLeftBorder,			#protocol : #drawing,			#sourceCode : 'renderLeftBorder\r\t| diff offset x1 y1 x2 y2 |\r\tdiff := self cellExtent.\r\toffset := self gridFormOffset.\r\tx1 := offset x.\r\tx2 := offset x.\r\ty1 := offset y.\r\ty2 := offset y + diff.\r\tself cellForm getCanvas line: (x1@y1) to: (x2@y2) width: 1 color: Color white.',			#stamp : 'Patrick 6/18/2017 14:55',			#package : #Snake_Game_Model		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #CellRenderer,				#isMetaSide : false			},			#name : #renderLeftBorder,			#protocol : #drawing,			#sourceCode : 'renderLeftBorder\r\t| diff offset x1 y1 x2 y2 |\r\tdiff := CellRenderer cellExtent.\r\toffset := self gridFormOffset.\r\tx1 := offset x.\r\tx2 := offset x.\r\ty1 := offset y.\r\ty2 := offset y + diff.\r\tself cellForm getCanvas line: (x1@y1) to: (x2@y2) width: 1 color: Color white.',			#stamp : 'Patrick 6/18/2017 14:56',			#package : #Snake_Game_Model		}	}}OmEntry {	#tags : {		#author : 'Patrick',		#time : DateAndTime [ '2017-06-18T14:56:03.84611+02:00' ],		#prior : OmReference [ '59' ],		#self : OmReference [ '60' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #CellRenderer,				#isMetaSide : false			},			#name : #renderRightBorder,			#protocol : #drawing,			#sourceCode : 'renderRightBorder\r\t| diff offset x1 y1 x2 y2 |\r\tdiff := self cellExtent.\r\toffset := self gridFormOffset.\r\tx1 := offset x + diff x.\r\tx2 := offset x + diff x.\r\ty1 := offset y.\r\ty2 := offset y + diff x.\r\tself cellForm getCanvas line: (x1@y1) to: (x2@y2) width: 1 color: Color white.',			#stamp : 'Patrick 6/18/2017 14:55',			#package : #Snake_Game_Model		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #CellRenderer,				#isMetaSide : false			},			#name : #renderRightBorder,			#protocol : #drawing,			#sourceCode : 'renderRightBorder\r\t| diff offset x1 y1 x2 y2 |\r\tdiff := CellRenderer cellExtent.\r\toffset := self gridFormOffset.\r\tx1 := offset x + diff x.\r\tx2 := offset x + diff x.\r\ty1 := offset y.\r\ty2 := offset y + diff x.\r\tself cellForm getCanvas line: (x1@y1) to: (x2@y2) width: 1 color: Color white.',			#stamp : 'Patrick 6/18/2017 14:56',			#package : #Snake_Game_Model		}	}}OmEntry {	#tags : {		#author : 'Patrick',		#time : DateAndTime [ '2017-06-18T14:56:06.27911+02:00' ],		#prior : OmReference [ '60' ],		#self : OmReference [ '61' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #CellRenderer,				#isMetaSide : false			},			#name : #renderTopBorder,			#protocol : #drawing,			#sourceCode : 'renderTopBorder\r\t| diff offset x1 y1 x2 y2 |\r\tdiff := self cellExtent.\r\toffset := self gridFormOffset.\r\tx1 := offset x.\r\tx2 := offset x + diff x.\r\ty1 := offset y.\r\ty2 := offset y.\r\tself cellForm getCanvas line: (x1@y1) to: (x2@y2) width: 1 color: Color white.',			#stamp : 'Patrick 6/18/2017 14:55',			#package : #Snake_Game_Model		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #CellRenderer,				#isMetaSide : false			},			#name : #renderTopBorder,			#protocol : #drawing,			#sourceCode : 'renderTopBorder\r\t| diff offset x1 y1 x2 y2 |\r\tdiff := CellRenderer cellExtent.\r\toffset := self gridFormOffset.\r\tx1 := offset x.\r\tx2 := offset x + diff x.\r\ty1 := offset y.\r\ty2 := offset y.\r\tself cellForm getCanvas line: (x1@y1) to: (x2@y2) width: 1 color: Color white.',			#stamp : 'Patrick 6/18/2017 14:56',			#package : #Snake_Game_Model		}	}}OmEntry {	#tags : {		#author : 'Patrick',		#time : DateAndTime [ '2017-06-18T14:58:51.20411+02:00' ],		#prior : OmReference [ '61' ],		#self : OmReference [ '62' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #CellRenderer,				#isMetaSide : false			},			#name : #renderBottomBorder,			#protocol : #drawing,			#sourceCode : 'renderBottomBorder\r\t| diff offset x1 y1 x2 y2 |\r\tdiff := CellRenderer cellExtent.\r\toffset := self gridFormOffset.\r\tx1 := offset x.\r\tx2 := offset x + diff x.\r\ty1 := offset y + diff y.\r\ty2 := offset y + diff y.\r\tself cellForm getCanvas line: (x1@y1) to: (x2@y2) width: 1 color: Color white.\r\t"line := LineMorph\r\t\tfrom: x1@y1;\r\t\tto: x1@y1;\r\t\twithForm: (Form extent: 1@1 depth: 8) fillWhite.\r\tline displayOn: self cellForm."',			#stamp : 'Patrick 6/18/2017 14:55',			#package : #Snake_Game_Model		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #CellRenderer,				#isMetaSide : false			},			#name : #renderBottomBorder,			#protocol : #drawing,			#sourceCode : 'renderBottomBorder\r\t| diff offset x1 y1 x2 y2 |\r\tdiff := CellRenderer cellExtent.\r\toffset := self gridFormOffset.\r\tx1 := offset x.\r\tx2 := offset x + diff x.\r\ty1 := offset y + diff y.\r\ty2 := offset y + diff y.\r\tself cellForm getCanvas line: x1@y1 to: x2@y2 width: 1 color: Color white.\r\t"line := LineMorph\r\t\tfrom: x1@y1;\r\t\tto: x1@y1;\r\t\twithForm: (Form extent: 1@1 depth: 8) fillWhite.\r\tline displayOn: self cellForm."',			#stamp : 'Patrick 6/18/2017 14:58',			#package : #Snake_Game_Model		}	}}OmEntry {	#tags : {		#author : 'Patrick',		#time : DateAndTime [ '2017-06-18T14:59:06.19611+02:00' ],		#prior : OmReference [ '62' ],		#self : OmReference [ '63' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #CellRenderer,				#isMetaSide : false			},			#name : #renderLeftBorder,			#protocol : #drawing,			#sourceCode : 'renderLeftBorder\r\t| diff offset x1 y1 x2 y2 |\r\tdiff := CellRenderer cellExtent.\r\toffset := self gridFormOffset.\r\tx1 := offset x.\r\tx2 := offset x.\r\ty1 := offset y.\r\ty2 := offset y + diff.\r\tself cellForm getCanvas line: (x1@y1) to: (x2@y2) width: 1 color: Color white.',			#stamp : 'Patrick 6/18/2017 14:56',			#package : #Snake_Game_Model		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #CellRenderer,				#isMetaSide : false			},			#name : #renderLeftBorder,			#protocol : #drawing,			#sourceCode : 'renderLeftBorder\r\t| diff offset x1 y1 x2 y2 |\r\tdiff := CellRenderer cellExtent.\r\toffset := self gridFormOffset.\r\tx1 := offset x.\r\tx2 := offset x.\r\ty1 := offset y.\r\ty2 := offset y + diff.\r\tself cellForm getCanvas line: x1@y1 to: x2@y2 width: 1 color: Color white.',			#stamp : 'Patrick 6/18/2017 14:59',			#package : #Snake_Game_Model		}	}}OmEntry {	#tags : {		#author : 'Patrick',		#time : DateAndTime [ '2017-06-18T14:59:09.91011+02:00' ],		#prior : OmReference [ '63' ],		#self : OmReference [ '64' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #CellRenderer,				#isMetaSide : false			},			#name : #renderRightBorder,			#protocol : #drawing,			#sourceCode : 'renderRightBorder\r\t| diff offset x1 y1 x2 y2 |\r\tdiff := CellRenderer cellExtent.\r\toffset := self gridFormOffset.\r\tx1 := offset x + diff x.\r\tx2 := offset x + diff x.\r\ty1 := offset y.\r\ty2 := offset y + diff x.\r\tself cellForm getCanvas line: (x1@y1) to: (x2@y2) width: 1 color: Color white.',			#stamp : 'Patrick 6/18/2017 14:56',			#package : #Snake_Game_Model		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #CellRenderer,				#isMetaSide : false			},			#name : #renderRightBorder,			#protocol : #drawing,			#sourceCode : 'renderRightBorder\r\t| diff offset x1 y1 x2 y2 |\r\tdiff := CellRenderer cellExtent.\r\toffset := self gridFormOffset.\r\tx1 := offset x + diff x.\r\tx2 := offset x + diff x.\r\ty1 := offset y.\r\ty2 := offset y + diff x.\r\tself cellForm getCanvas line: x1@y1 to: x2@y2 width: 1 color: Color white.',			#stamp : 'Patrick 6/18/2017 14:59',			#package : #Snake_Game_Model		}	}}OmEntry {	#tags : {		#author : 'Patrick',		#time : DateAndTime [ '2017-06-18T14:59:16.86311+02:00' ],		#prior : OmReference [ '64' ],		#self : OmReference [ '65' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #CellRenderer,				#isMetaSide : false			},			#name : #renderTopBorder,			#protocol : #drawing,			#sourceCode : 'renderTopBorder\r\t| diff offset x1 y1 x2 y2 |\r\tdiff := CellRenderer cellExtent.\r\toffset := self gridFormOffset.\r\tx1 := offset x.\r\tx2 := offset x + diff x.\r\ty1 := offset y.\r\ty2 := offset y.\r\tself cellForm getCanvas line: (x1@y1) to: (x2@y2) width: 1 color: Color white.',			#stamp : 'Patrick 6/18/2017 14:56',			#package : #Snake_Game_Model		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #CellRenderer,				#isMetaSide : false			},			#name : #renderTopBorder,			#protocol : #drawing,			#sourceCode : 'renderTopBorder\r\t| diff offset x1 y1 x2 y2 |\r\tdiff := CellRenderer cellExtent.\r\toffset := self gridFormOffset.\r\tx1 := offset x.\r\tx2 := offset x + diff x.\r\ty1 := offset y.\r\ty2 := offset y.\r\tself cellForm getCanvas line: x1@y1 to: x2@y2 width: 1 color: Color white.',			#stamp : 'Patrick 6/18/2017 14:59',			#package : #Snake_Game_Model		}	}}OmEntry {	#tags : {		#author : 'Patrick',		#time : DateAndTime [ '2017-06-18T15:11:06.88711+02:00' ],		#prior : OmReference [ '65' ],		#self : OmReference [ '66' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #CellRenderer,				#isMetaSide : false			},			#name : #renderBottomBorder,			#protocol : #drawing,			#sourceCode : 'renderBottomBorder\r\t| diff offset x1 y1 x2 y2 |\r\tdiff := CellRenderer cellExtent.\r\toffset := self gridFormOffset.\r\tx1 := offset x.\r\tx2 := offset x + diff x.\r\ty1 := offset y + diff y.\r\ty2 := offset y + diff y.\r\tself cellForm getCanvas line: x1@y1 to: x2@y2 width: 1 color: Color white.\r\t"line := LineMorph\r\t\tfrom: x1@y1;\r\t\tto: x1@y1;\r\t\twithForm: (Form extent: 1@1 depth: 8) fillWhite.\r\tline displayOn: self cellForm."',			#stamp : 'Patrick 6/18/2017 14:58',			#package : #Snake_Game_Model		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #CellRenderer,				#isMetaSide : false			},			#name : #renderBottomBorder,			#protocol : #drawing,			#sourceCode : 'renderBottomBorder\r\t| line diff offset x1 y1 x2 y2 |\r\tdiff := CellRenderer cellExtent.\r\toffset := self gridFormOffset.\r\tx1 := offset x.\r\tx2 := offset x + diff x.\r\ty1 := offset y + diff y.\r\ty2 := offset y + diff y.\r\tline := LineMorph from: x1@y1 to: x1@y1 color: Color white width: 1.\r\tline displayOn: self cellForm.',			#stamp : 'Patrick 6/18/2017 15:11',			#package : #Snake_Game_Model		}	}}OmEntry {	#tags : {		#author : 'Patrick',		#time : DateAndTime [ '2017-06-18T15:11:58.92411+02:00' ],		#prior : OmReference [ '66' ],		#self : OmReference [ '67' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #CellRenderer,				#isMetaSide : false			},			#name : #renderLeftBorder,			#protocol : #drawing,			#sourceCode : 'renderLeftBorder\r\t| diff offset x1 y1 x2 y2 |\r\tdiff := CellRenderer cellExtent.\r\toffset := self gridFormOffset.\r\tx1 := offset x.\r\tx2 := offset x.\r\ty1 := offset y.\r\ty2 := offset y + diff.\r\tself cellForm getCanvas line: x1@y1 to: x2@y2 width: 1 color: Color white.',			#stamp : 'Patrick 6/18/2017 15:11',			#package : #Snake_Game_Model		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #CellRenderer,				#isMetaSide : false			},			#name : #renderLeftBorder,			#protocol : #drawing,			#sourceCode : 'renderLeftBorder\r\t| line diff offset x1 y1 x2 y2 |\r\tdiff := CellRenderer cellExtent.\r\toffset := self gridFormOffset.\r\tx1 := offset x.\r\tx2 := offset x.\r\ty1 := offset y.\r\ty2 := offset y + diff.\r\tline := LineMorph from: x1@y1 to: x1@y1 color: Color white width: 1.\r\tline displayOn: self cellForm.\r\t"self cellForm getCanvas line: x1@y1 to: x2@y2 width: 1 color: Color white."',			#stamp : 'Patrick 6/18/2017 15:11',			#package : #Snake_Game_Model		}	}}OmEntry {	#tags : {		#author : 'Patrick',		#time : DateAndTime [ '2017-06-18T15:12:11.41711+02:00' ],		#prior : OmReference [ '67' ],		#self : OmReference [ '68' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #CellRenderer,				#isMetaSide : false			},			#name : #renderRightBorder,			#protocol : #drawing,			#sourceCode : 'renderRightBorder\r\t| diff offset x1 y1 x2 y2 |\r\tdiff := CellRenderer cellExtent.\r\toffset := self gridFormOffset.\r\tx1 := offset x + diff x.\r\tx2 := offset x + diff x.\r\ty1 := offset y.\r\ty2 := offset y + diff x.\r\tself cellForm getCanvas line: x1@y1 to: x2@y2 width: 1 color: Color white.',			#stamp : 'Patrick 6/18/2017 14:59',			#package : #Snake_Game_Model		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #CellRenderer,				#isMetaSide : false			},			#name : #renderRightBorder,			#protocol : #drawing,			#sourceCode : 'renderRightBorder\r\t| line diff offset x1 y1 x2 y2 |\r\tdiff := CellRenderer cellExtent.\r\toffset := self gridFormOffset.\r\tx1 := offset x + diff x.\r\tx2 := offset x + diff x.\r\ty1 := offset y.\r\ty2 := offset y + diff x.\r\tline := LineMorph from: x1@y1 to: x1@y1 color: Color white width: 1.\r\tline displayOn: self cellForm.\r\t"self cellForm getCanvas line: x1@y1 to: x2@y2 width: 1 color: Color white."',			#stamp : 'Patrick 6/18/2017 15:12',			#package : #Snake_Game_Model		}	}}OmEntry {	#tags : {		#author : 'Patrick',		#time : DateAndTime [ '2017-06-18T15:12:22.45511+02:00' ],		#prior : OmReference [ '68' ],		#self : OmReference [ '69' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #CellRenderer,				#isMetaSide : false			},			#name : #renderTopBorder,			#protocol : #drawing,			#sourceCode : 'renderTopBorder\r\t| diff offset x1 y1 x2 y2 |\r\tdiff := CellRenderer cellExtent.\r\toffset := self gridFormOffset.\r\tx1 := offset x.\r\tx2 := offset x + diff x.\r\ty1 := offset y.\r\ty2 := offset y.\r\tself cellForm getCanvas line: x1@y1 to: x2@y2 width: 1 color: Color white.',			#stamp : 'Patrick 6/18/2017 14:59',			#package : #Snake_Game_Model		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #CellRenderer,				#isMetaSide : false			},			#name : #renderTopBorder,			#protocol : #drawing,			#sourceCode : 'renderTopBorder\r\t| line diff offset x1 y1 x2 y2 |\r\tdiff := CellRenderer cellExtent.\r\toffset := self gridFormOffset.\r\tx1 := offset x.\r\tx2 := offset x + diff x.\r\ty1 := offset y.\r\ty2 := offset y.\r\tline := LineMorph from: x1@y1 to: x1@y1 color: Color white width: 1.\r\tline displayOn: self cellForm.\r\t"self cellForm getCanvas line: x1@y1 to: x2@y2 width: 1 color: Color white."',			#stamp : 'Patrick 6/18/2017 15:12',			#package : #Snake_Game_Model		}	}}OmEntry {	#tags : {		#author : 'Patrick',		#time : DateAndTime [ '2017-06-18T15:13:34.43711+02:00' ],		#prior : OmReference [ '69' ],		#self : OmReference [ '70' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #CellRenderer,				#isMetaSide : false			},			#name : #renderTopBorder,			#protocol : #drawing,			#sourceCode : 'renderTopBorder\r\t| line diff offset x1 y1 x2 y2 |\r\tdiff := CellRenderer cellExtent.\r\toffset := self gridFormOffset.\r\tx1 := offset x.\r\tx2 := offset x + diff x.\r\ty1 := offset y.\r\ty2 := offset y.\r\tline := LineMorph from: x1@y1 to: x1@y1 color: Color white width: 1.\r\tline displayOn: self cellForm.\r\t"self cellForm getCanvas line: x1@y1 to: x2@y2 width: 1 color: Color white."',			#stamp : 'Patrick 6/18/2017 15:12',			#package : #Snake_Game_Model		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #CellRenderer,				#isMetaSide : false			},			#name : #renderTopBorder,			#protocol : #drawing,			#sourceCode : 'renderTopBorder\r\t| line diff offset x1 y1 x2 y2 |\r\tdiff := CellRenderer cellExtent.\r\toffset := self gridFormOffset.\r\tx1 := offset x.\r\tx2 := offset x + diff x.\r\ty1 := offset y.\r\ty2 := offset y.\r\tline := LineMorph from: x1@y1 to: x1@y1 color: Color white width: 1.\r\t"line displayOn: self cellForm.\r\tself cellForm getCanvas line: x1@y1 to: x2@y2 width: 1 color: Color white."',			#stamp : 'Patrick 6/18/2017 15:13',			#package : #Snake_Game_Model		}	}}OmEntry {	#tags : {		#author : 'Patrick',		#time : DateAndTime [ '2017-06-18T15:13:38.54211+02:00' ],		#prior : OmReference [ '70' ],		#self : OmReference [ '71' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #CellRenderer,				#isMetaSide : false			},			#name : #renderRightBorder,			#protocol : #drawing,			#sourceCode : 'renderRightBorder\r\t| line diff offset x1 y1 x2 y2 |\r\tdiff := CellRenderer cellExtent.\r\toffset := self gridFormOffset.\r\tx1 := offset x + diff x.\r\tx2 := offset x + diff x.\r\ty1 := offset y.\r\ty2 := offset y + diff x.\r\tline := LineMorph from: x1@y1 to: x1@y1 color: Color white width: 1.\r\tline displayOn: self cellForm.\r\t"self cellForm getCanvas line: x1@y1 to: x2@y2 width: 1 color: Color white."',			#stamp : 'Patrick 6/18/2017 15:12',			#package : #Snake_Game_Model		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #CellRenderer,				#isMetaSide : false			},			#name : #renderRightBorder,			#protocol : #drawing,			#sourceCode : 'renderRightBorder\r\t| line diff offset x1 y1 x2 y2 |\r\tdiff := CellRenderer cellExtent.\r\toffset := self gridFormOffset.\r\tx1 := offset x + diff x.\r\tx2 := offset x + diff x.\r\ty1 := offset y.\r\ty2 := offset y + diff x.\r\tline := LineMorph from: x1@y1 to: x1@y1 color: Color white width: 1.\r\t"line displayOn: self cellForm.\r\tself cellForm getCanvas line: x1@y1 to: x2@y2 width: 1 color: Color white."',			#stamp : 'Patrick 6/18/2017 15:13',			#package : #Snake_Game_Model		}	}}OmEntry {	#tags : {		#author : 'Patrick',		#time : DateAndTime [ '2017-06-18T15:13:42.74011+02:00' ],		#prior : OmReference [ '71' ],		#self : OmReference [ '72' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #CellRenderer,				#isMetaSide : false			},			#name : #renderLeftBorder,			#protocol : #drawing,			#sourceCode : 'renderLeftBorder\r\t| line diff offset x1 y1 x2 y2 |\r\tdiff := CellRenderer cellExtent.\r\toffset := self gridFormOffset.\r\tx1 := offset x.\r\tx2 := offset x.\r\ty1 := offset y.\r\ty2 := offset y + diff.\r\tline := LineMorph from: x1@y1 to: x1@y1 color: Color white width: 1.\r\tline displayOn: self cellForm.\r\t"self cellForm getCanvas line: x1@y1 to: x2@y2 width: 1 color: Color white."',			#stamp : 'Patrick 6/18/2017 15:11',			#package : #Snake_Game_Model		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #CellRenderer,				#isMetaSide : false			},			#name : #renderLeftBorder,			#protocol : #drawing,			#sourceCode : 'renderLeftBorder\r\t| line diff offset x1 y1 x2 y2 |\r\tdiff := CellRenderer cellExtent.\r\toffset := self gridFormOffset.\r\tx1 := offset x.\r\tx2 := offset x.\r\ty1 := offset y.\r\ty2 := offset y + diff.\r\tline := LineMorph from: x1@y1 to: x1@y1 color: Color white width: 1.\r\t"line displayOn: self cellForm.\r\tself cellForm getCanvas line: x1@y1 to: x2@y2 width: 1 color: Color white."',			#stamp : 'Patrick 6/18/2017 15:13',			#package : #Snake_Game_Model		}	}}OmEntry {	#tags : {		#author : 'Patrick',		#time : DateAndTime [ '2017-06-18T15:13:49.72911+02:00' ],		#prior : OmReference [ '72' ],		#self : OmReference [ '73' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #CellRenderer,				#isMetaSide : false			},			#name : #renderBottomBorder,			#protocol : #drawing,			#sourceCode : 'renderBottomBorder\r\t| line diff offset x1 y1 x2 y2 |\r\tdiff := CellRenderer cellExtent.\r\toffset := self gridFormOffset.\r\tx1 := offset x.\r\tx2 := offset x + diff x.\r\ty1 := offset y + diff y.\r\ty2 := offset y + diff y.\r\tline := LineMorph from: x1@y1 to: x1@y1 color: Color white width: 1.\r\tline displayOn: self cellForm.',			#stamp : 'Patrick 6/18/2017 15:11',			#package : #Snake_Game_Model		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #CellRenderer,				#isMetaSide : false			},			#name : #renderBottomBorder,			#protocol : #drawing,			#sourceCode : 'renderBottomBorder\r\t| line diff offset x1 y1 x2 y2 |\r\tdiff := CellRenderer cellExtent.\r\toffset := self gridFormOffset.\r\tx1 := offset x.\r\tx2 := offset x + diff x.\r\ty1 := offset y + diff y.\r\ty2 := offset y + diff y.\r\tline := LineMorph from: x1@y1 to: x1@y1 color: Color white width: 1.\r\t"line displayOn: self cellForm."',			#stamp : 'Patrick 6/18/2017 15:13',			#package : #Snake_Game_Model		}	}}OmEntry {	#tags : {		#author : 'Patrick',		#time : DateAndTime [ '2017-06-18T15:16:16.05411+02:00' ],		#prior : OmReference [ '73' ],		#self : OmReference [ '74' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #CellRenderer,				#isMetaSide : false			},			#name : #renderBottomBorder,			#protocol : #drawing,			#sourceCode : 'renderBottomBorder\r\t| line diff offset x1 y1 x2 y2 |\r\tdiff := CellRenderer cellExtent.\r\toffset := self gridFormOffset.\r\tx1 := offset x.\r\tx2 := offset x + diff x.\r\ty1 := offset y + diff y.\r\ty2 := offset y + diff y.\r\tline := LineMorph from: x1@y1 to: x1@y1 color: Color white width: 1.\r\t"line displayOn: self cellForm."',			#stamp : 'Patrick 6/18/2017 15:13',			#package : #Snake_Game_Model		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #CellRenderer,				#isMetaSide : false			},			#name : #renderBottomBorder,			#protocol : #drawing,			#sourceCode : 'renderBottomBorder\r\t| line diff offset x1 y1 x2 y2 |\r\tdiff := CellRenderer cellExtent.\r\toffset := self gridFormOffset.\r\tx1 := offset x.\r\tx2 := offset x + diff x.\r\ty1 := offset y + diff y.\r\ty2 := offset y + diff y.\r\tline := LineMorph from: x1@y1 to: x1@y1 color: Color white width: 1.\r\tline openInWorld.\r\t"line displayOn: self cellForm."',			#stamp : 'Patrick 6/18/2017 15:16',			#package : #Snake_Game_Model		}	}}OmEntry {	#tags : {		#author : 'Patrick',		#time : DateAndTime [ '2017-06-18T15:16:22.76111+02:00' ],		#prior : OmReference [ '74' ],		#self : OmReference [ '75' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #CellRenderer,				#isMetaSide : false			},			#name : #renderLeftBorder,			#protocol : #drawing,			#sourceCode : 'renderLeftBorder\r\t| line diff offset x1 y1 x2 y2 |\r\tdiff := CellRenderer cellExtent.\r\toffset := self gridFormOffset.\r\tx1 := offset x.\r\tx2 := offset x.\r\ty1 := offset y.\r\ty2 := offset y + diff.\r\tline := LineMorph from: x1@y1 to: x1@y1 color: Color white width: 1.\r\t"line displayOn: self cellForm.\r\tself cellForm getCanvas line: x1@y1 to: x2@y2 width: 1 color: Color white."',			#stamp : 'Patrick 6/18/2017 15:13',			#package : #Snake_Game_Model		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #CellRenderer,				#isMetaSide : false			},			#name : #renderLeftBorder,			#protocol : #drawing,			#sourceCode : 'renderLeftBorder\r\t| line diff offset x1 y1 x2 y2 |\r\tdiff := CellRenderer cellExtent.\r\toffset := self gridFormOffset.\r\tx1 := offset x.\r\tx2 := offset x.\r\ty1 := offset y.\r\ty2 := offset y + diff.\r\tline := LineMorph from: x1@y1 to: x1@y1 color: Color white width: 1.\r\tline openInWorld.\r\t"line displayOn: self cellForm.\r\tself cellForm getCanvas line: x1@y1 to: x2@y2 width: 1 color: Color white."',			#stamp : 'Patrick 6/18/2017 15:16',			#package : #Snake_Game_Model		}	}}OmEntry {	#tags : {		#author : 'Patrick',		#time : DateAndTime [ '2017-06-18T15:16:26.99711+02:00' ],		#prior : OmReference [ '75' ],		#self : OmReference [ '76' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #CellRenderer,				#isMetaSide : false			},			#name : #renderRightBorder,			#protocol : #drawing,			#sourceCode : 'renderRightBorder\r\t| line diff offset x1 y1 x2 y2 |\r\tdiff := CellRenderer cellExtent.\r\toffset := self gridFormOffset.\r\tx1 := offset x + diff x.\r\tx2 := offset x + diff x.\r\ty1 := offset y.\r\ty2 := offset y + diff x.\r\tline := LineMorph from: x1@y1 to: x1@y1 color: Color white width: 1.\r\t"line displayOn: self cellForm.\r\tself cellForm getCanvas line: x1@y1 to: x2@y2 width: 1 color: Color white."',			#stamp : 'Patrick 6/18/2017 15:13',			#package : #Snake_Game_Model		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #CellRenderer,				#isMetaSide : false			},			#name : #renderRightBorder,			#protocol : #drawing,			#sourceCode : 'renderRightBorder\r\t| line diff offset x1 y1 x2 y2 |\r\tdiff := CellRenderer cellExtent.\r\toffset := self gridFormOffset.\r\tx1 := offset x + diff x.\r\tx2 := offset x + diff x.\r\ty1 := offset y.\r\ty2 := offset y + diff x.\r\tline := LineMorph from: x1@y1 to: x1@y1 color: Color white width: 1.\r\tline openInWorld.\r\t"line displayOn: self cellForm.\r\tself cellForm getCanvas line: x1@y1 to: x2@y2 width: 1 color: Color white."',			#stamp : 'Patrick 6/18/2017 15:16',			#package : #Snake_Game_Model		}	}}OmEntry {	#tags : {		#author : 'Patrick',		#time : DateAndTime [ '2017-06-18T15:16:29.97911+02:00' ],		#prior : OmReference [ '76' ],		#self : OmReference [ '77' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #CellRenderer,				#isMetaSide : false			},			#name : #renderTopBorder,			#protocol : #drawing,			#sourceCode : 'renderTopBorder\r\t| line diff offset x1 y1 x2 y2 |\r\tdiff := CellRenderer cellExtent.\r\toffset := self gridFormOffset.\r\tx1 := offset x.\r\tx2 := offset x + diff x.\r\ty1 := offset y.\r\ty2 := offset y.\r\tline := LineMorph from: x1@y1 to: x1@y1 color: Color white width: 1.\r\t"line displayOn: self cellForm.\r\tself cellForm getCanvas line: x1@y1 to: x2@y2 width: 1 color: Color white."',			#stamp : 'Patrick 6/18/2017 15:13',			#package : #Snake_Game_Model		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #CellRenderer,				#isMetaSide : false			},			#name : #renderTopBorder,			#protocol : #drawing,			#sourceCode : 'renderTopBorder\r\t| line diff offset x1 y1 x2 y2 |\r\tdiff := CellRenderer cellExtent.\r\toffset := self gridFormOffset.\r\tx1 := offset x.\r\tx2 := offset x + diff x.\r\ty1 := offset y.\r\ty2 := offset y.\r\tline := LineMorph from: x1@y1 to: x1@y1 color: Color white width: 1.\r\tline openInWorld.\r\t"line displayOn: self cellForm.\r\tself cellForm getCanvas line: x1@y1 to: x2@y2 width: 1 color: Color white."',			#stamp : 'Patrick 6/18/2017 15:16',			#package : #Snake_Game_Model		}	}}OmEntry {	#tags : {		#author : 'Patrick',		#time : DateAndTime [ '2017-06-18T15:20:03.58811+02:00' ],		#prior : OmReference [ '77' ],		#self : OmReference [ '78' ]	},	#content : EpClassModification {		#oldClass : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Object',				#traitCompositionSource : '{}',				#definitionSource : 'Object subclass: #SnakeGame\r\tinstanceVariableNames: \'grid\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Snake_Game_Graphics\''			},			#name : #SnakeGame,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #SnakeGame,						#isMetaSide : false					},					#name : #grid,					#parent : @7				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'SnakeGame class\r\tinstanceVariableNames: \'\''				},				#name : #'SnakeGame class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #SnakeGame,					#isMetaSide : false				},				#parent : @7,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #Snake_Game_Graphics,			#package : #Snake_Game_Graphics,			#sharedPools : OrderedCollection [ ]		},		#newClass : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Object',				#traitCompositionSource : '{}',				#definitionSource : 'Object subclass: #SnakeGame\r\tinstanceVariableNames: \'grid\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Snake_Game_Graphics\''			},			#name : #SnakeGame,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #SnakeGame,						#isMetaSide : false					},					#name : #grid,					#parent : @23				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'SnakeGame class\r\tinstanceVariableNames: \'\''				},				#name : #'SnakeGame class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @23			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #SnakeGame,					#isMetaSide : false				},				#parent : @23,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #Snake_Game_Graphics,			#package : #Snake_Game_Graphics,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Patrick',		#time : DateAndTime [ '2017-06-18T15:20:03.76311+02:00' ],		#prior : OmReference [ '78' ],		#self : OmReference [ '79' ]	},	#content : EpClassModification {		#oldClass : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Object',				#traitCompositionSource : '{}',				#definitionSource : 'Object subclass: #SnakeGame\r\tinstanceVariableNames: \'grid\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Snake_Game_Graphics\''			},			#name : #SnakeGame,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #SnakeGame,						#isMetaSide : false					},					#name : #grid,					#parent : @7				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'SnakeGame class\r\tinstanceVariableNames: \'\''				},				#name : #'SnakeGame class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #SnakeGame,					#isMetaSide : false				},				#parent : @7,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #Snake_Game_Graphics,			#package : #Snake_Game_Graphics,			#sharedPools : OrderedCollection [ ]		},		#newClass : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Morph',				#traitCompositionSource : '{}',				#definitionSource : 'Morph subclass: #SnakeGame\r\tinstanceVariableNames: \'grid\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Snake_Game_Graphics\''			},			#name : #SnakeGame,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #SnakeGame,						#isMetaSide : false					},					#name : #grid,					#parent : @23				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'SnakeGame class\r\tinstanceVariableNames: \'\''				},				#name : #'SnakeGame class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @23			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #SnakeGame,					#isMetaSide : false				},				#parent : @23,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #Snake_Game_Graphics,			#package : #Snake_Game_Graphics,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Patrick',		#time : DateAndTime [ '2017-06-18T15:26:31.02611+02:00' ],		#prior : OmReference [ '79' ],		#self : OmReference [ '80' ]	},	#content : EpClassModification {		#oldClass : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Morph',				#traitCompositionSource : '{}',				#definitionSource : 'Morph subclass: #SnakeGame\r\tinstanceVariableNames: \'grid\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Snake_Game_Graphics\''			},			#name : #SnakeGame,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #SnakeGame,						#isMetaSide : false					},					#name : #grid,					#parent : @7				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'SnakeGame class\r\tinstanceVariableNames: \'\''				},				#name : #'SnakeGame class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #SnakeGame,					#isMetaSide : false				},				#parent : @7,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #Snake_Game_Graphics,			#package : #Snake_Game_Graphics,			#sharedPools : OrderedCollection [ ]		},		#newClass : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Morph',				#traitCompositionSource : '{}',				#definitionSource : 'Morph subclass: #SnakeGame\r\tinstanceVariableNames: \'grid area\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Snake_Game_Graphics\''			},			#name : #SnakeGame,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #SnakeGame,						#isMetaSide : false					},					#name : #grid,					#parent : @23				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #SnakeGame,						#isMetaSide : false					},					#name : #area,					#parent : @23				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'SnakeGame class\r\tinstanceVariableNames: \'\''				},				#name : #'SnakeGame class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @23			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #SnakeGame,					#isMetaSide : false				},				#parent : @23,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #Snake_Game_Graphics,			#package : #Snake_Game_Graphics,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Patrick',		#time : DateAndTime [ '2017-06-18T15:26:39.92611+02:00' ],		#prior : OmReference [ '80' ],		#self : OmReference [ '81' ]	},	#content : EpGenericRefactoring {		#storeString : '(RBCreateAccessorsForVariableRefactoring variable: #area class: SnakeGame classVariable: false)'	}}OmEntry {	#tags : {		#author : 'Patrick',		#prior : OmReference [ '81' ],		#self : OmReference [ '82' ],		#time : DateAndTime [ '2017-06-18T15:26:39.93911+02:00' ],		#trigger : @3	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #SnakeGame,				#isMetaSide : false			},			#name : #area,			#protocol : #accessing,			#sourceCode : 'area\r\t^ area',			#stamp : 'Patrick 6/18/2017 15:26',			#package : #Snake_Game_Graphics		}	}}OmEntry {	#tags : {		#author : 'Patrick',		#prior : OmReference [ '82' ],		#self : OmReference [ '83' ],		#time : DateAndTime [ '2017-06-18T15:26:39.94811+02:00' ],		#trigger : OmReference [ '81' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #SnakeGame,				#isMetaSide : false			},			#name : #'area:',			#protocol : #accessing,			#sourceCode : 'area: anObject\r\tarea := anObject',			#stamp : 'Patrick 6/18/2017 15:26',			#package : #Snake_Game_Graphics		}	}}OmEntry {	#tags : {		#author : 'Patrick',		#time : DateAndTime [ '2017-06-18T15:26:49.63311+02:00' ],		#prior : OmReference [ '83' ],		#self : OmReference [ '84' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #SnakeGame,				#isMetaSide : false			},			#name : #area,			#protocol : #accessing,			#sourceCode : 'area\r\t^ area',			#stamp : 'Patrick 6/18/2017 15:26',			#package : #Snake_Game_Graphics		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #SnakeGame,				#isMetaSide : false			},			#name : #area,			#protocol : #accessing,			#sourceCode : 'area\r   ^ area ifNil: [\r      area := FormCanvas extent: self extent.\r      self clear.\r      area]',			#stamp : 'Patrick 6/18/2017 15:26',			#package : #Snake_Game_Graphics		}	}}OmEntry {	#tags : {		#author : 'Patrick',		#time : DateAndTime [ '2017-06-18T15:27:32.58411+02:00' ],		#prior : OmReference [ '84' ],		#self : OmReference [ '85' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #SnakeGame,				#isMetaSide : false			},			#name : #area,			#protocol : #accessing,			#sourceCode : 'area\r   ^ area ifNil: [\r      area := FormCanvas extent: self extent.\r      self clear.\r      area]',			#stamp : 'Patrick 6/18/2017 15:26',			#package : #Snake_Game_Graphics		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #SnakeGame,				#isMetaSide : false			},			#name : #area,			#protocol : #accessing,			#sourceCode : 'area\r   ^ area ifNil: [\r      area := FormCanvas extent: (self gameBoardExtentFor: grid).\r      self clear.\r      area]',			#stamp : 'Patrick 6/18/2017 15:27',			#package : #Snake_Game_Graphics		}	}}OmEntry {	#tags : {		#author : 'Patrick',		#time : DateAndTime [ '2017-06-18T15:27:40.24411+02:00' ],		#prior : OmReference [ '85' ],		#self : OmReference [ '86' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #SnakeGame,				#isMetaSide : false			},			#name : #area,			#protocol : #accessing,			#sourceCode : 'area\r   ^ area ifNil: [\r      area := FormCanvas extent: (self gameBoardExtentFor: grid).\r      self clear.\r      area]',			#stamp : 'Patrick 6/18/2017 15:27',			#package : #Snake_Game_Graphics		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #SnakeGame,				#isMetaSide : false			},			#name : #area,			#protocol : #accessing,			#sourceCode : 'area\r   ^ area ifNil: [\r      area := FormCanvas extent: SnakeGame gameBoardExtentFor: grid.\r      self clear.\r      area]',			#stamp : 'Patrick 6/18/2017 15:27',			#package : #Snake_Game_Graphics		}	}}OmEntry {	#tags : {		#author : 'Patrick',		#time : DateAndTime [ '2017-06-18T15:28:05.59711+02:00' ],		#prior : OmReference [ '86' ],		#self : OmReference [ '87' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #SnakeGame,				#isMetaSide : false			},			#name : #clear,			#protocol : #'as yet unclassified',			#sourceCode : 'clear\r   self area fillColor: Color white.\r   self changed',			#stamp : 'Patrick 6/18/2017 15:28',			#package : #Snake_Game_Graphics		}	}}OmEntry {	#tags : {		#author : 'Patrick',		#time : DateAndTime [ '2017-06-18T15:28:05.77211+02:00' ],		#prior : OmReference [ '87' ],		#self : OmReference [ '88' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #SnakeGame,				#isMetaSide : false			},			#name : #clear,			#protocol : #'as yet unclassified',			#sourceCode : 'clear\r   self area fillColor: Color white.\r   self changed',			#stamp : 'Patrick 6/18/2017 15:28',			#package : #Snake_Game_Graphics		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #SnakeGame,				#isMetaSide : false			},			#name : #clear,			#protocol : #accessing,			#sourceCode : 'clear\r   self area fillColor: Color white.\r   self changed',			#stamp : 'Patrick 6/18/2017 15:28',			#package : #Snake_Game_Graphics		}	}}OmEntry {	#tags : {		#author : 'Patrick',		#time : DateAndTime [ '2017-06-18T15:28:26.40511+02:00' ],		#prior : OmReference [ '88' ],		#self : OmReference [ '89' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #SnakeGame,				#isMetaSide : false			},			#name : #'area:',			#protocol : #accessing,			#sourceCode : 'area: anObject\r\tarea := anObject',			#stamp : 'Patrick 6/18/2017 15:26',			#package : #Snake_Game_Graphics		}	}}OmEntry {	#tags : {		#author : 'Patrick',		#time : DateAndTime [ '2017-06-18T15:28:54.99511+02:00' ],		#prior : OmReference [ '89' ],		#self : OmReference [ '90' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #SnakeGame,				#isMetaSide : false			},			#name : #area,			#protocol : #accessing,			#sourceCode : 'area\r   ^ area ifNil: [\r      area := FormCanvas extent: SnakeGame gameBoardExtentFor: grid.\r      self clear.\r      area]',			#stamp : 'Patrick 6/18/2017 15:27',			#package : #Snake_Game_Graphics		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #SnakeGame,				#isMetaSide : false			},			#name : #area,			#protocol : #accessing,			#sourceCode : 'area\r   ^ area ifNil: [\r      area := FormCanvas extent: self gameBoardExtentFor: grid.\r      self clear.\r      area]',			#stamp : 'Patrick 6/18/2017 15:28',			#package : #Snake_Game_Graphics		}	}}OmEntry {	#tags : {		#author : 'Patrick',		#time : DateAndTime [ '2017-06-18T15:31:30.15511+02:00' ],		#prior : OmReference [ '90' ],		#self : OmReference [ '91' ]	},	#content : EpClassModification {		#oldClass : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Morph',				#traitCompositionSource : '{}',				#definitionSource : 'Morph subclass: #SnakeGame\r\tinstanceVariableNames: \'grid area\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Snake_Game_Graphics\''			},			#name : #SnakeGame,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #SnakeGame,						#isMetaSide : false					},					#name : #grid,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #SnakeGame,						#isMetaSide : false					},					#name : #area,					#parent : @7				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'SnakeGame class\r\tinstanceVariableNames: \'\''				},				#name : #'SnakeGame class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #SnakeGame,					#isMetaSide : false				},				#parent : @7,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #Snake_Game_Graphics,			#package : #Snake_Game_Graphics,			#sharedPools : OrderedCollection [ ]		},		#newClass : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Morph',				#traitCompositionSource : '{}',				#definitionSource : 'Morph subclass: #SnakeGame\r\tinstanceVariableNames: \'grid\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Snake_Game_Graphics\''			},			#name : #SnakeGame,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #SnakeGame,						#isMetaSide : false					},					#name : #grid,					#parent : @25				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'SnakeGame class\r\tinstanceVariableNames: \'\''				},				#name : #'SnakeGame class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @25			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #SnakeGame,					#isMetaSide : false				},				#parent : @25,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #Snake_Game_Graphics,			#package : #Snake_Game_Graphics,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Patrick',		#time : DateAndTime [ '2017-06-18T15:31:36.72711+02:00' ],		#prior : OmReference [ '91' ],		#self : OmReference [ '92' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #SnakeGame,				#isMetaSide : false			},			#name : #clear,			#protocol : #accessing,			#sourceCode : 'clear\r   self area fillColor: Color white.\r   self changed',			#stamp : 'Patrick 6/18/2017 15:28',			#package : #Snake_Game_Graphics		}	}}OmEntry {	#tags : {		#author : 'Patrick',		#time : DateAndTime [ '2017-06-18T15:31:41.28711+02:00' ],		#prior : OmReference [ '92' ],		#self : OmReference [ '93' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #SnakeGame,				#isMetaSide : false			},			#name : #area,			#protocol : #accessing,			#sourceCode : 'area\r   ^ area ifNil: [\r      area := FormCanvas extent: self gameBoardExtentFor: grid.\r      self clear.\r      area]',			#stamp : 'Patrick 6/18/2017 15:28',			#package : #Snake_Game_Graphics		}	}}OmEntry {	#tags : {		#author : 'Patrick',		#time : DateAndTime [ '2017-06-18T15:34:03.92111+02:00' ],		#prior : OmReference [ '93' ],		#self : OmReference [ '94' ]	},	#content : EpClassModification {		#oldClass : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Morph',				#traitCompositionSource : '{}',				#definitionSource : 'Morph subclass: #SnakeGame\r\tinstanceVariableNames: \'grid\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Snake_Game_Graphics\''			},			#name : #SnakeGame,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #SnakeGame,						#isMetaSide : false					},					#name : #grid,					#parent : @7				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'SnakeGame class\r\tinstanceVariableNames: \'\''				},				#name : #'SnakeGame class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #SnakeGame,					#isMetaSide : false				},				#parent : @7,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #Snake_Game_Graphics,			#package : #Snake_Game_Graphics,			#sharedPools : OrderedCollection [ ]		},		#newClass : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Morph',				#traitCompositionSource : '{}',				#definitionSource : 'Morph subclass: #SnakeGame\r\tinstanceVariableNames: \'grid\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Snake_Game_Graphics\''			},			#name : #SnakeGame,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #SnakeGame,						#isMetaSide : false					},					#name : #grid,					#parent : @23				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'SnakeGame class\r\tinstanceVariableNames: \'\''				},				#name : #'SnakeGame class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @23			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #SnakeGame,					#isMetaSide : false				},				#parent : @23,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #Snake_Game_Graphics,			#package : #Snake_Game_Graphics,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Patrick',		#time : DateAndTime [ '2017-06-18T15:34:04.09311+02:00' ],		#prior : OmReference [ '94' ],		#self : OmReference [ '95' ]	},	#content : EpClassModification {		#oldClass : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Morph',				#traitCompositionSource : '{}',				#definitionSource : 'Morph subclass: #SnakeGame\r\tinstanceVariableNames: \'grid\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Snake_Game_Graphics\''			},			#name : #SnakeGame,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #SnakeGame,						#isMetaSide : false					},					#name : #grid,					#parent : @7				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'SnakeGame class\r\tinstanceVariableNames: \'\''				},				#name : #'SnakeGame class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #SnakeGame,					#isMetaSide : false				},				#parent : @7,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #Snake_Game_Graphics,			#package : #Snake_Game_Graphics,			#sharedPools : OrderedCollection [ ]		},		#newClass : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Object',				#traitCompositionSource : '{}',				#definitionSource : 'Object subclass: #SnakeGame\r\tinstanceVariableNames: \'grid\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'Snake_Game_Graphics\''			},			#name : #SnakeGame,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #SnakeGame,						#isMetaSide : false					},					#name : #grid,					#parent : @23				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'SnakeGame class\r\tinstanceVariableNames: \'\''				},				#name : #'SnakeGame class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @23			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #SnakeGame,					#isMetaSide : false				},				#parent : @23,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #Snake_Game_Graphics,			#package : #Snake_Game_Graphics,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Patrick',		#time : DateAndTime [ '2017-06-18T15:35:18.73711+02:00' ],		#prior : OmReference [ '95' ],		#self : OmReference [ '96' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #CellRenderer,				#isMetaSide : false			},			#name : #renderBorder,			#protocol : #drawing,			#sourceCode : 'renderBorder\r\tself renderTopBorder.\r\tself renderBottomBorder.\r\tself renderLeftBorder.\r\tself renderRightBorder.',			#stamp : 'Patrick 6/18/2017 14:48',			#package : #Snake_Game_Model		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #CellRenderer,				#isMetaSide : false			},			#name : #renderBorder,			#protocol : #drawing,			#sourceCode : 'renderBorder\r\tself\r\t\trenderTopBorder;\r\t\trenderBottomBorder;\r\t\trenderLeftBorder;\r\t\trenderRightBorder.',			#stamp : 'Patrick 6/18/2017 15:35',			#package : #Snake_Game_Model		}	}}OmEntry {	#tags : {		#author : 'Patrick',		#time : DateAndTime [ '2017-06-18T15:35:37.59511+02:00' ],		#prior : OmReference [ '96' ],		#self : OmReference [ '97' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #CellRenderer,				#isMetaSide : false			},			#name : #renderBottomBorder,			#protocol : #drawing,			#sourceCode : 'renderBottomBorder\r\t| line diff offset x1 y1 x2 y2 |\r\tdiff := CellRenderer cellExtent.\r\toffset := self gridFormOffset.\r\tx1 := offset x.\r\tx2 := offset x + diff x.\r\ty1 := offset y + diff y.\r\ty2 := offset y + diff y.\r\tline := LineMorph from: x1@y1 to: x1@y1 color: Color white width: 1.\r\tline openInWorld.\r\t"line displayOn: self cellForm."',			#stamp : 'Patrick 6/18/2017 15:16',			#package : #Snake_Game_Model		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #CellRenderer,				#isMetaSide : false			},			#name : #renderBottomBorder,			#protocol : #drawing,			#sourceCode : 'renderBottomBorder\r\t| line diff offset x1 y1 x2 y2 |\r\tdiff := CellRenderer cellExtent.\r\toffset := self gridFormOffset.\r\tx1 := offset x.\r\tx2 := offset x + diff x.\r\ty1 := offset y + diff y.\r\ty2 := offset y + diff y.\r\tline := LineMorph from: x1@y1 to: x1@y1 color: Color white width: 1.\r\tline openInWindow.\r\t"line displayOn: self cellForm."',			#stamp : 'Patrick 6/18/2017 15:35',			#package : #Snake_Game_Model		}	}}OmEntry {	#tags : {		#author : 'Patrick',		#time : DateAndTime [ '2017-06-18T15:40:26.44411+02:00' ],		#prior : OmReference [ '97' ],		#self : OmReference [ '98' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #CellRenderer,				#isMetaSide : false			},			#name : #renderLeftBorder,			#protocol : #drawing,			#sourceCode : 'renderLeftBorder\r\t| line diff offset x1 y1 x2 y2 |\r\tdiff := CellRenderer cellExtent.\r\toffset := self gridFormOffset.\r\tx1 := offset x.\r\tx2 := offset x.\r\ty1 := offset y.\r\ty2 := offset y + diff.\r\tline := LineMorph from: x1@y1 to: x1@y1 color: Color white width: 1.\r\tline openInWorld.\r\t"line displayOn: self cellForm.\r\tself cellForm getCanvas line: x1@y1 to: x2@y2 width: 1 color: Color white."',			#stamp : 'Patrick 6/18/2017 15:16',			#package : #Snake_Game_Model		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #CellRenderer,				#isMetaSide : false			},			#name : #renderLeftBorder,			#protocol : #drawing,			#sourceCode : 'renderLeftBorder\r\t| line diff offset x1 y1 x2 y2 |\r\tdiff := CellRenderer cellExtent.\r\toffset := self gridFormOffset.\r\tx1 := offset x.\r\tx2 := offset x.\r\ty1 := offset y.\r\ty2 := offset y + diff.\r\tline := LineMorph from: x1@y1 to: x1@y1 color: Color white width: 1.\r\tline openInWindow.\r\t"line displayOn: self cellForm.\r\tself cellForm getCanvas line: x1@y1 to: x2@y2 width: 1 color: Color white."',			#stamp : 'Patrick 6/18/2017 15:40',			#package : #Snake_Game_Model		}	}}OmEntry {	#tags : {		#author : 'Patrick',		#time : DateAndTime [ '2017-06-18T15:40:28.91911+02:00' ],		#prior : OmReference [ '98' ],		#self : OmReference [ '99' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #CellRenderer,				#isMetaSide : false			},			#name : #renderRightBorder,			#protocol : #drawing,			#sourceCode : 'renderRightBorder\r\t| line diff offset x1 y1 x2 y2 |\r\tdiff := CellRenderer cellExtent.\r\toffset := self gridFormOffset.\r\tx1 := offset x + diff x.\r\tx2 := offset x + diff x.\r\ty1 := offset y.\r\ty2 := offset y + diff x.\r\tline := LineMorph from: x1@y1 to: x1@y1 color: Color white width: 1.\r\tline openInWorld.\r\t"line displayOn: self cellForm.\r\tself cellForm getCanvas line: x1@y1 to: x2@y2 width: 1 color: Color white."',			#stamp : 'Patrick 6/18/2017 15:16',			#package : #Snake_Game_Model		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #CellRenderer,				#isMetaSide : false			},			#name : #renderRightBorder,			#protocol : #drawing,			#sourceCode : 'renderRightBorder\r\t| line diff offset x1 y1 x2 y2 |\r\tdiff := CellRenderer cellExtent.\r\toffset := self gridFormOffset.\r\tx1 := offset x + diff x.\r\tx2 := offset x + diff x.\r\ty1 := offset y.\r\ty2 := offset y + diff x.\r\tline := LineMorph from: x1@y1 to: x1@y1 color: Color white width: 1.\r\tline openInWindow.\r\t"line displayOn: self cellForm.\r\tself cellForm getCanvas line: x1@y1 to: x2@y2 width: 1 color: Color white."',			#stamp : 'Patrick 6/18/2017 15:40',			#package : #Snake_Game_Model		}	}}OmEntry {	#tags : {		#author : 'Patrick',		#time : DateAndTime [ '2017-06-18T15:40:32.62111+02:00' ],		#prior : OmReference [ '99' ],		#self : OmReference [ '100' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #CellRenderer,				#isMetaSide : false			},			#name : #renderTopBorder,			#protocol : #drawing,			#sourceCode : 'renderTopBorder\r\t| line diff offset x1 y1 x2 y2 |\r\tdiff := CellRenderer cellExtent.\r\toffset := self gridFormOffset.\r\tx1 := offset x.\r\tx2 := offset x + diff x.\r\ty1 := offset y.\r\ty2 := offset y.\r\tline := LineMorph from: x1@y1 to: x1@y1 color: Color white width: 1.\r\tline openInWorld.\r\t"line displayOn: self cellForm.\r\tself cellForm getCanvas line: x1@y1 to: x2@y2 width: 1 color: Color white."',			#stamp : 'Patrick 6/18/2017 15:16',			#package : #Snake_Game_Model		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #CellRenderer,				#isMetaSide : false			},			#name : #renderTopBorder,			#protocol : #drawing,			#sourceCode : 'renderTopBorder\r\t| line diff offset x1 y1 x2 y2 |\r\tdiff := CellRenderer cellExtent.\r\toffset := self gridFormOffset.\r\tx1 := offset x.\r\tx2 := offset x + diff x.\r\ty1 := offset y.\r\ty2 := offset y.\r\tline := LineMorph from: x1@y1 to: x1@y1 color: Color white width: 1.\r\tline openInWindow.\r\t"line displayOn: self cellForm.\r\tself cellForm getCanvas line: x1@y1 to: x2@y2 width: 1 color: Color white."',			#stamp : 'Patrick 6/18/2017 15:40',			#package : #Snake_Game_Model		}	}}OmEntry {	#tags : {		#author : 'Patrick',		#time : DateAndTime [ '2017-06-18T15:41:34.21811+02:00' ],		#prior : OmReference [ '100' ],		#self : OmReference [ '101' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #CellRenderer,				#isMetaSide : false			},			#name : #renderTopBorder,			#protocol : #drawing,			#sourceCode : 'renderTopBorder\r\t| line diff offset x1 y1 x2 y2 |\r\tdiff := CellRenderer cellExtent.\r\toffset := self gridFormOffset.\r\tx1 := offset x.\r\tx2 := offset x + diff x.\r\ty1 := offset y.\r\ty2 := offset y.\r\tline := LineMorph from: x1@y1 to: x1@y1 color: Color white width: 1.\r\tline openInWindow.\r\t"line displayOn: self cellForm.\r\tself cellForm getCanvas line: x1@y1 to: x2@y2 width: 1 color: Color white."',			#stamp : 'Patrick 6/18/2017 15:40',			#package : #Snake_Game_Model		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #CellRenderer,				#isMetaSide : false			},			#name : #renderTopBorder,			#protocol : #drawing,			#sourceCode : 'renderTopBorder\r\t| line diff offset x1 y1 x2 y2 |\r\tdiff := CellRenderer cellExtent.\r\toffset := self gridFormOffset.\r\tx1 := offset x.\r\tx2 := offset x + diff x.\r\ty1 := offset y.\r\ty2 := offset y.\r\t',			#stamp : 'Patrick 6/18/2017 15:41',			#package : #Snake_Game_Model		}	}}OmEntry {	#tags : {		#author : 'Patrick',		#time : DateAndTime [ '2017-06-18T15:43:40.22711+02:00' ],		#prior : OmReference [ '101' ],		#self : OmReference [ '102' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #CellRenderer,				#isMetaSide : false			},			#name : #renderTopBorder,			#protocol : #drawing,			#sourceCode : 'renderTopBorder\r\t| line diff offset x1 y1 x2 y2 |\r\tdiff := CellRenderer cellExtent.\r\toffset := self gridFormOffset.\r\tx1 := offset x.\r\tx2 := offset x + diff x.\r\ty1 := offset y.\r\ty2 := offset y.\r\t',			#stamp : 'Patrick 6/18/2017 15:41',			#package : #Snake_Game_Model		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #CellRenderer,				#isMetaSide : false			},			#name : #renderTopBorder,			#protocol : #drawing,			#sourceCode : 'renderTopBorder\r\t| line diff offset x1 y1 x2 y2 |\r\tdiff := CellRenderer cellExtent.\r\toffset := self gridFormOffset.\r\tx1 := offset x.\r\tx2 := offset x + diff x.\r\ty1 := offset y.\r\ty2 := offset y.\r\t"line := Line\r\t\tfrom: x1@y1 \r\t\tto: x2@y2 \r\t\twithForm: (Form extent: 1@1 depth: 8) fillWhite. \r\tline displayOn: self cellForm." "depth: 8?"',			#stamp : 'Patrick 6/18/2017 15:43',			#package : #Snake_Game_Model		}	}}OmEntry {	#tags : {		#author : 'Patrick',		#time : DateAndTime [ '2017-06-18T15:55:31.01211+02:00' ],		#prior : OmReference [ '102' ],		#self : OmReference [ '103' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #CellRenderer,				#isMetaSide : false			},			#name : #renderTopBorder,			#protocol : #drawing,			#sourceCode : 'renderTopBorder\r\t| line diff offset x1 y1 x2 y2 |\r\tdiff := CellRenderer cellExtent.\r\toffset := self gridFormOffset.\r\tx1 := offset x.\r\tx2 := offset x + diff x.\r\ty1 := offset y.\r\ty2 := offset y.\r\t"line := Line\r\t\tfrom: x1@y1 \r\t\tto: x2@y2 \r\t\twithForm: (Form extent: 1@1 depth: 8) fillWhite. \r\tline displayOn: self cellForm." "depth: 8?"',			#stamp : 'Patrick 6/18/2017 15:43',			#package : #Snake_Game_Model		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #CellRenderer,				#isMetaSide : false			},			#name : #renderTopBorder,			#protocol : #drawing,			#sourceCode : 'renderTopBorder\r\t| line diff offset x1 y1 x2 y2 |\r\tdiff := CellRenderer cellExtent.\r\toffset := self gridFormOffset.\r\tx1 := offset x.\r\tx2 := offset x + diff x.\r\ty1 := offset y.\r\ty2 := offset y.\r\tline := Form drawLine from: x1@y1 \r\t\tto: x2@y2 \r\t\twithForm: (Form extent: 1@1 depth: 8) fillWhite. \r\tline displayOn: self cellForm.',			#stamp : 'Patrick 6/18/2017 15:55',			#package : #Snake_Game_Model		}	}}OmEntry {	#tags : {		#author : 'Patrick',		#time : DateAndTime [ '2017-06-18T15:55:48.68411+02:00' ],		#prior : OmReference [ '103' ],		#self : OmReference [ '104' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #CellRenderer,				#isMetaSide : false			},			#name : #renderTopBorder,			#protocol : #drawing,			#sourceCode : 'renderTopBorder\r\t| line diff offset x1 y1 x2 y2 |\r\tdiff := CellRenderer cellExtent.\r\toffset := self gridFormOffset.\r\tx1 := offset x.\r\tx2 := offset x + diff x.\r\ty1 := offset y.\r\ty2 := offset y.\r\tline := Form drawLine from: x1@y1 \r\t\tto: x2@y2 \r\t\twithForm: (Form extent: 1@1 depth: 8) fillWhite. \r\tline displayOn: self cellForm.',			#stamp : 'Patrick 6/18/2017 15:55',			#package : #Snake_Game_Model		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #CellRenderer,				#isMetaSide : false			},			#name : #renderTopBorder,			#protocol : #drawing,			#sourceCode : 'renderTopBorder\r\t| line diff offset x1 y1 x2 y2 |\r\tdiff := CellRenderer cellExtent.\r\toffset := self gridFormOffset.\r\tx1 := offset x.\r\tx2 := offset x + diff x.\r\ty1 := offset y.\r\ty2 := offset y.\r\tline := Form drawLine from: x1@y1 to: x2@y2 \r\t\twithForm: (Form extent: 1@1 depth: 8) fillWhite. \r\tline displayOn: self cellForm.',			#stamp : 'Patrick 6/18/2017 15:55',			#package : #Snake_Game_Model		}	}}OmEntry {	#tags : {		#author : 'Patrick',		#time : DateAndTime [ '2017-06-18T15:57:09.08911+02:00' ],		#prior : OmReference [ '104' ],		#self : OmReference [ '105' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #CellRenderer,				#isMetaSide : false			},			#name : #renderTopBorder,			#protocol : #drawing,			#sourceCode : 'renderTopBorder\r\t| line diff offset x1 y1 x2 y2 |\r\tdiff := CellRenderer cellExtent.\r\toffset := self gridFormOffset.\r\tx1 := offset x.\r\tx2 := offset x + diff x.\r\ty1 := offset y.\r\ty2 := offset y.\r\tline := Form drawLine from: x1@y1 to: x2@y2 \r\t\twithForm: (Form extent: 1@1 depth: 8) fillWhite. \r\tline displayOn: self cellForm.',			#stamp : 'Patrick 6/18/2017 15:55',			#package : #Snake_Game_Model		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #CellRenderer,				#isMetaSide : false			},			#name : #renderTopBorder,			#protocol : #drawing,			#sourceCode : 'renderTopBorder\r\t| line diff offset x1 y1 x2 y2 |\r\tdiff := CellRenderer cellExtent.\r\toffset := self gridFormOffset.\r\tx1 := offset x.\r\tx2 := offset x + diff x.\r\ty1 := offset y.\r\ty2 := offset y.\r\tline := Form.\r\tline from put: x1@y1. \r\tline to put: x2@y2 \r\t\twithForm: (Form extent: 1@1 depth: 8) fillWhite. \r\tline displayOn: self cellForm.',			#stamp : 'Patrick 6/18/2017 15:57',			#package : #Snake_Game_Model		}	}}OmEntry {	#tags : {		#author : 'Patrick',		#time : DateAndTime [ '2017-06-18T15:57:43.25811+02:00' ],		#prior : OmReference [ '105' ],		#self : OmReference [ '106' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #CellRenderer,				#isMetaSide : false			},			#name : #renderTopBorder,			#protocol : #drawing,			#sourceCode : 'renderTopBorder\r\t| line diff offset x1 y1 x2 y2 |\r\tdiff := CellRenderer cellExtent.\r\toffset := self gridFormOffset.\r\tx1 := offset x.\r\tx2 := offset x + diff x.\r\ty1 := offset y.\r\ty2 := offset y.\r\tline := Form.\r\tline from put: x1@y1. \r\tline to put: x2@y2 \r\t\twithForm: (Form extent: 1@1 depth: 8) fillWhite. \r\tline displayOn: self cellForm.',			#stamp : 'Patrick 6/18/2017 15:57',			#package : #Snake_Game_Model		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #CellRenderer,				#isMetaSide : false			},			#name : #renderTopBorder,			#protocol : #drawing,			#sourceCode : 'renderTopBorder\r\t| line diff offset x1 y1 x2 y2 |\r\tdiff := CellRenderer cellExtent.\r\toffset := self gridFormOffset.\r\tx1 := offset x.\r\tx2 := offset x + diff x.\r\ty1 := offset y.\r\ty2 := offset y.\r\tline := Form.\r\tline from put: x1@y1. \r\tline to put: x2@y2.\r\tline fillColor put: Color white. \r\tline displayOn: self cellForm.',			#stamp : 'Patrick 6/18/2017 15:57',			#package : #Snake_Game_Model		}	}}OmEntry {	#tags : {		#author : 'Patrick',		#time : DateAndTime [ '2017-06-18T15:58:16.12311+02:00' ],		#prior : OmReference [ '106' ],		#self : OmReference [ '107' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #CellRenderer,				#isMetaSide : false			},			#name : #renderBottomBorder,			#protocol : #drawing,			#sourceCode : 'renderBottomBorder\r\t| line diff offset x1 y1 x2 y2 |\r\tdiff := CellRenderer cellExtent.\r\toffset := self gridFormOffset.\r\tx1 := offset x.\r\tx2 := offset x + diff x.\r\ty1 := offset y + diff y.\r\ty2 := offset y + diff y.\r\tline := LineMorph from: x1@y1 to: x1@y1 color: Color white width: 1.\r\tline openInWindow.\r\t"line displayOn: self cellForm."',			#stamp : 'Patrick 6/18/2017 15:35',			#package : #Snake_Game_Model		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #CellRenderer,				#isMetaSide : false			},			#name : #renderBottomBorder,			#protocol : #drawing,			#sourceCode : 'renderBottomBorder\r\t| line diff offset x1 y1 x2 y2 |\r\tdiff := CellRenderer cellExtent.\r\toffset := self gridFormOffset.\r\tx1 := offset x.\r\tx2 := offset x + diff x.\r\ty1 := offset y + diff y.\r\ty2 := offset y + diff y.\r\tline := Form.\r\tline from put: x1@y1. \r\tline to put: x2@y2.\r\tline fillColor put: Color white. ',			#stamp : 'Patrick 6/18/2017 15:58',			#package : #Snake_Game_Model		}	}}OmEntry {	#tags : {		#author : 'Patrick',		#time : DateAndTime [ '2017-06-18T15:58:27.21311+02:00' ],		#prior : OmReference [ '107' ],		#self : OmReference [ '108' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #CellRenderer,				#isMetaSide : false			},			#name : #renderBottomBorder,			#protocol : #drawing,			#sourceCode : 'renderBottomBorder\r\t| line diff offset x1 y1 x2 y2 |\r\tdiff := CellRenderer cellExtent.\r\toffset := self gridFormOffset.\r\tx1 := offset x.\r\tx2 := offset x + diff x.\r\ty1 := offset y + diff y.\r\ty2 := offset y + diff y.\r\tline := Form.\r\tline from put: x1@y1. \r\tline to put: x2@y2.\r\tline fillColor put: Color white. ',			#stamp : 'Patrick 6/18/2017 15:58',			#package : #Snake_Game_Model		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #CellRenderer,				#isMetaSide : false			},			#name : #renderBottomBorder,			#protocol : #drawing,			#sourceCode : 'renderBottomBorder\r\t| line diff offset x1 y1 x2 y2 |\r\tdiff := CellRenderer cellExtent.\r\toffset := self gridFormOffset.\r\tx1 := offset x.\r\tx2 := offset x + diff x.\r\ty1 := offset y + diff y.\r\ty2 := offset y + diff y.\r\tline := Form.\r\tline from put: x1@y1. \r\tline to put: x2@y2.\r\tline fillColor put: Color white. \r\tline displayOn: self cellForm.',			#stamp : 'Patrick 6/18/2017 15:58',			#package : #Snake_Game_Model		}	}}OmEntry {	#tags : {		#author : 'Patrick',		#time : DateAndTime [ '2017-06-18T15:58:30.32011+02:00' ],		#prior : OmReference [ '108' ],		#self : OmReference [ '109' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #CellRenderer,				#isMetaSide : false			},			#name : #renderBottomBorder,			#protocol : #drawing,			#sourceCode : 'renderBottomBorder\r\t| line diff offset x1 y1 x2 y2 |\r\tdiff := CellRenderer cellExtent.\r\toffset := self gridFormOffset.\r\tx1 := offset x.\r\tx2 := offset x + diff x.\r\ty1 := offset y + diff y.\r\ty2 := offset y + diff y.\r\tline := Form.\r\tline from put: x1@y1. \r\tline to put: x2@y2.\r\tline fillColor put: Color white. \r\tline displayOn: self cellForm.',			#stamp : 'Patrick 6/18/2017 15:58',			#package : #Snake_Game_Model		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #CellRenderer,				#isMetaSide : false			},			#name : #renderBottomBorder,			#protocol : #drawing,			#sourceCode : 'renderBottomBorder\r\t| line diff offset x1 y1 x2 y2 |\r\tdiff := CellRenderer cellExtent.\r\toffset := self gridFormOffset.\r\tx1 := offset x.\r\tx2 := offset x + diff x.\r\ty1 := offset y + diff y.\r\ty2 := offset y + diff y.\r\tline := Form.\r\tline from put: x1@y1. \r\tline to put: x2@y2.\r\tline fillColor put: Color black. \r\tline displayOn: self cellForm.',			#stamp : 'Patrick 6/18/2017 15:58',			#package : #Snake_Game_Model		}	}}OmEntry {	#tags : {		#author : 'Patrick',		#time : DateAndTime [ '2017-06-18T16:09:01.57411+02:00' ],		#prior : OmReference [ '109' ],		#self : OmReference [ '110' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #CellRenderer,				#isMetaSide : false			},			#name : #renderBottomBorder,			#protocol : #drawing,			#sourceCode : 'renderBottomBorder\r\t| line diff offset x1 y1 x2 y2 |\r\tdiff := CellRenderer cellExtent.\r\toffset := self gridFormOffset.\r\tx1 := offset x.\r\tx2 := offset x + diff x.\r\ty1 := offset y + diff y.\r\ty2 := offset y + diff y.\r\tline := Form.\r\tline from put: x1@y1. \r\tline to put: x2@y2.\r\tline fillColor put: Color black. \r\tline displayOn: self cellForm.',			#stamp : 'Patrick 6/18/2017 15:58',			#package : #Snake_Game_Model		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #CellRenderer,				#isMetaSide : false			},			#name : #renderBottomBorder,			#protocol : #drawing,			#sourceCode : 'renderBottomBorder\r\t| line diff offset x1 y1 x2 y2 |\r\tdiff := CellRenderer cellExtent.\r\toffset := self gridFormOffset.\r\tx1 := offset x.\r\tx2 := offset x + diff x.\r\ty1 := offset y + diff y.\r\ty2 := offset y + diff y.\r\tline := Form extent: (1@(diff x)).\r\tline from put: x1@y1. \r\tline to put: x2@y2.\r\tline fillColor put: Color black. \r\tline displayOn: self cellForm.',			#stamp : 'Patrick 6/18/2017 16:09',			#package : #Snake_Game_Model		}	}}OmEntry {	#tags : {		#author : 'Patrick',		#time : DateAndTime [ '2017-06-18T16:09:05.76411+02:00' ],		#prior : OmReference [ '110' ],		#self : OmReference [ '111' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #CellRenderer,				#isMetaSide : false			},			#name : #renderBottomBorder,			#protocol : #drawing,			#sourceCode : 'renderBottomBorder\r\t| line diff offset x1 y1 x2 y2 |\r\tdiff := CellRenderer cellExtent.\r\toffset := self gridFormOffset.\r\tx1 := offset x.\r\tx2 := offset x + diff x.\r\ty1 := offset y + diff y.\r\ty2 := offset y + diff y.\r\tline := Form extent: (1@(diff x)).\r\tline from put: x1@y1. \r\tline to put: x2@y2.\r\tline fillColor put: Color black. \r\tline displayOn: self cellForm.',			#stamp : 'Patrick 6/18/2017 16:09',			#package : #Snake_Game_Model		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #CellRenderer,				#isMetaSide : false			},			#name : #renderBottomBorder,			#protocol : #drawing,			#sourceCode : 'renderBottomBorder\r\t| line diff offset x1 y1 x2 y2 |\r\tdiff := CellRenderer cellExtent.\r\toffset := self gridFormOffset.\r\tx1 := offset x.\r\tx2 := offset x + diff x.\r\ty1 := offset y + diff y.\r\ty2 := offset y + diff y.\r\tline := Form extent: 1@(diff x).\r\tline from put: x1@y1. \r\tline to put: x2@y2.\r\tline fillColor put: Color black. \r\tline displayOn: self cellForm.',			#stamp : 'Patrick 6/18/2017 16:09',			#package : #Snake_Game_Model		}	}}OmEntry {	#tags : {		#author : 'Patrick',		#time : DateAndTime [ '2017-06-18T16:09:29.78811+02:00' ],		#prior : OmReference [ '111' ],		#self : OmReference [ '112' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #CellRenderer,				#isMetaSide : false			},			#name : #renderBottomBorder,			#protocol : #drawing,			#sourceCode : 'renderBottomBorder\r\t| line diff offset x1 y1 x2 y2 |\r\tdiff := CellRenderer cellExtent.\r\toffset := self gridFormOffset.\r\tx1 := offset x.\r\tx2 := offset x + diff x.\r\ty1 := offset y + diff y.\r\ty2 := offset y + diff y.\r\tline := Form extent: 1@(diff x).\r\tline from put: x1@y1. \r\tline to put: x2@y2.\r\tline fillColor put: Color black. \r\tline displayOn: self cellForm.',			#stamp : 'Patrick 6/18/2017 16:09',			#package : #Snake_Game_Model		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #CellRenderer,				#isMetaSide : false			},			#name : #renderBottomBorder,			#protocol : #drawing,			#sourceCode : 'renderBottomBorder\r\t| line diff offset x1 y1 x2 y2 |\r\tdiff := CellRenderer cellExtent.\r\toffset := self gridFormOffset.\r\tx1 := offset x.\r\tx2 := offset x + diff x.\r\ty1 := offset y + diff y.\r\ty2 := offset y + diff y.\r\tline := Form extent: 1@(diff x) depth: Display depth.\r\tline from put: x1@y1. \r\tline to put: x2@y2.\r\tline fillColor put: Color black. \r\tline displayOn: self cellForm.',			#stamp : 'Patrick 6/18/2017 16:09',			#package : #Snake_Game_Model		}	}}OmEntry {	#tags : {		#author : 'Patrick',		#time : DateAndTime [ '2017-06-18T16:10:29.23211+02:00' ],		#prior : OmReference [ '112' ],		#self : OmReference [ '113' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #CellRenderer,				#isMetaSide : false			},			#name : #renderBottomBorder,			#protocol : #drawing,			#sourceCode : 'renderBottomBorder\r\t| line diff offset x1 y1 x2 y2 |\r\tdiff := CellRenderer cellExtent.\r\toffset := self gridFormOffset.\r\tx1 := offset x.\r\tx2 := offset x + diff x.\r\ty1 := offset y + diff y.\r\ty2 := offset y + diff y.\r\tline := Form extent: 1@(diff x) depth: Display depth.\r\tline from put: x1@y1. \r\tline to put: x2@y2.\r\tline fillColor put: Color black. \r\tline displayOn: self cellForm.',			#stamp : 'Patrick 6/18/2017 16:09',			#package : #Snake_Game_Model		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #CellRenderer,				#isMetaSide : false			},			#name : #renderBottomBorder,			#protocol : #drawing,			#sourceCode : 'renderBottomBorder\r\t| line diff offset x1 y1 x2 y2 |\r\tdiff := CellRenderer cellExtent.\r\toffset := self gridFormOffset.\r\tx1 := offset x.\r\tx2 := offset x + diff x.\r\ty1 := offset y + diff y.\r\ty2 := offset y + diff y.\r\tline := Form extent: 1@(diff x) depth: Display depth.\r\t"line from put: x1@y1. \r\tline to put: x2@y2."\r\tline fillColor put: Color black. \r\tline displayOn: self cellForm.',			#stamp : 'Patrick 6/18/2017 16:10',			#package : #Snake_Game_Model		}	}}OmEntry {	#tags : {		#author : 'Patrick',		#time : DateAndTime [ '2017-06-18T16:11:05.76511+02:00' ],		#prior : OmReference [ '113' ],		#self : OmReference [ '114' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #CellRenderer,				#isMetaSide : false			},			#name : #renderBottomBorder,			#protocol : #drawing,			#sourceCode : 'renderBottomBorder\r\t| line diff offset x1 y1 x2 y2 |\r\tdiff := CellRenderer cellExtent.\r\toffset := self gridFormOffset.\r\tx1 := offset x.\r\tx2 := offset x + diff x.\r\ty1 := offset y + diff y.\r\ty2 := offset y + diff y.\r\tline := Form extent: 1@(diff x) depth: Display depth.\r\t"line from put: x1@y1. \r\tline to put: x2@y2."\r\tline fillColor put: Color black. \r\tline displayOn: self cellForm.',			#stamp : 'Patrick 6/18/2017 16:10',			#package : #Snake_Game_Model		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #CellRenderer,				#isMetaSide : false			},			#name : #renderBottomBorder,			#protocol : #drawing,			#sourceCode : 'renderBottomBorder\r\t| line diff offset x1 y1 x2 y2 |\r\tdiff := CellRenderer cellExtent.\r\toffset := self gridFormOffset.\r\tx1 := offset x.\r\tx2 := offset x + diff x.\r\ty1 := offset y + diff y.\r\ty2 := offset y + diff y.\r\tline := Form extent: (diff x)@1 depth: Display depth.\r\t"line from put: x1@y1. \r\tline to put: x2@y2."\r\tline fillColor put: Color black. \r\tline displayOn: self cellForm at: 1@(diff y).',			#stamp : 'Patrick 6/18/2017 16:11',			#package : #Snake_Game_Model		}	}}OmEntry {	#tags : {		#author : 'Patrick',		#time : DateAndTime [ '2017-06-18T16:11:42.86811+02:00' ],		#prior : OmReference [ '114' ],		#self : OmReference [ '115' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #CellRenderer,				#isMetaSide : false			},			#name : #renderBottomBorder,			#protocol : #drawing,			#sourceCode : 'renderBottomBorder\r\t| line diff offset x1 y1 x2 y2 |\r\tdiff := CellRenderer cellExtent.\r\toffset := self gridFormOffset.\r\tx1 := offset x.\r\tx2 := offset x + diff x.\r\ty1 := offset y + diff y.\r\ty2 := offset y + diff y.\r\tline := Form extent: (diff x)@1 depth: Display depth.\r\t"line from put: x1@y1. \r\tline to put: x2@y2."\r\tline fillColor put: Color black. \r\tline displayOn: self cellForm at: 1@(diff y).',			#stamp : 'Patrick 6/18/2017 16:11',			#package : #Snake_Game_Model		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #CellRenderer,				#isMetaSide : false			},			#name : #renderBottomBorder,			#protocol : #drawing,			#sourceCode : 'renderBottomBorder\r\t| line diff offset x1 y1 x2 y2 |\r\tdiff := CellRenderer cellExtent.\r\toffset := self gridFormOffset.\r\tx1 := offset x.\r\tx2 := offset x + diff x.\r\ty1 := offset y + diff y.\r\ty2 := offset y + diff y.\r\tline := Form extent: (diff x)@1 depth: Display depth.\r\t"line from put: x1@y1. \r\tline to put: x2@y2."\r\tline fillColor put: Color black. \r\tline displayAt: 1@(diff y).\r\t"line displayOn: self cellForm at: 1@(diff y)."',			#stamp : 'Patrick 6/18/2017 16:11',			#package : #Snake_Game_Model		}	}}OmEntry {	#tags : {		#author : 'Patrick',		#time : DateAndTime [ '2017-06-18T16:12:00.27011+02:00' ],		#prior : OmReference [ '115' ],		#self : OmReference [ '116' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #CellRenderer,				#isMetaSide : false			},			#name : #renderBottomBorder,			#protocol : #drawing,			#sourceCode : 'renderBottomBorder\r\t| line diff offset x1 y1 x2 y2 |\r\tdiff := CellRenderer cellExtent.\r\toffset := self gridFormOffset.\r\tx1 := offset x.\r\tx2 := offset x + diff x.\r\ty1 := offset y + diff y.\r\ty2 := offset y + diff y.\r\tline := Form extent: (diff x)@1 depth: Display depth.\r\t"line from put: x1@y1. \r\tline to put: x2@y2."\r\tline fillColor put: Color black. \r\tline displayAt: 1@(diff y).\r\t"line displayOn: self cellForm at: 1@(diff y)."',			#stamp : 'Patrick 6/18/2017 16:11',			#package : #Snake_Game_Model		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #CellRenderer,				#isMetaSide : false			},			#name : #renderBottomBorder,			#protocol : #drawing,			#sourceCode : 'renderBottomBorder\r\t| line diff offset x1 y1 x2 y2 |\r\tdiff := CellRenderer cellExtent.\r\toffset := self gridFormOffset.\r\tx1 := offset x.\r\tx2 := offset x + diff x.\r\ty1 := offset y + diff y.\r\ty2 := offset y + diff y.\r\tline := Form extent: (diff x)@1 depth: Display depth.\r\t"line from put: x1@y1. \r\tline to put: x2@y2."\r\tline fillColor put: Color black. \r\t"line displayAt: 1@(diff y)."\r\t"line displayOn: self cellForm at: 1@(diff y)."',			#stamp : 'Patrick 6/18/2017 16:12',			#package : #Snake_Game_Model		}	}}OmEntry {	#tags : {		#author : 'Patrick',		#time : DateAndTime [ '2017-06-18T16:12:15.65511+02:00' ],		#prior : OmReference [ '116' ],		#self : OmReference [ '117' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #CellRenderer,				#isMetaSide : false			},			#name : #renderBottomBorder,			#protocol : #drawing,			#sourceCode : 'renderBottomBorder\r\t| line diff offset x1 y1 x2 y2 |\r\tdiff := CellRenderer cellExtent.\r\toffset := self gridFormOffset.\r\tx1 := offset x.\r\tx2 := offset x + diff x.\r\ty1 := offset y + diff y.\r\ty2 := offset y + diff y.\r\tline := Form extent: (diff x)@1 depth: Display depth.\r\t"line from put: x1@y1. \r\tline to put: x2@y2."\r\tline fillColor put: Color black. \r\t"line displayAt: 1@(diff y)."\r\t"line displayOn: self cellForm at: 1@(diff y)."',			#stamp : 'Patrick 6/18/2017 16:12',			#package : #Snake_Game_Model		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #CellRenderer,				#isMetaSide : false			},			#name : #renderBottomBorder,			#protocol : #drawing,			#sourceCode : 'renderBottomBorder\r\t| line diff offset x1 y1 x2 y2 |\r\tdiff := CellRenderer cellExtent.\r\toffset := self gridFormOffset.\r\tx1 := offset x.\r\tx2 := offset x + diff x.\r\ty1 := offset y + diff y.\r\ty2 := offset y + diff y.\r\tline := Form extent: (diff x)@1 depth: Display depth.\r\t"line from put: x1@y1. \r\tline to put: x2@y2."\r\tline fillColor put: Color black. \r\tline displayAt: 1@(diff y).\r\t"line displayOn: self cellForm at: 1@(diff y)."',			#stamp : 'Patrick 6/18/2017 16:12',			#package : #Snake_Game_Model		}	}}OmEntry {	#tags : {		#author : 'Patrick',		#time : DateAndTime [ '2017-06-18T16:12:28.15011+02:00' ],		#prior : OmReference [ '117' ],		#self : OmReference [ '118' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #CellRenderer,				#isMetaSide : false			},			#name : #renderBottomBorder,			#protocol : #drawing,			#sourceCode : 'renderBottomBorder\r\t| line diff offset x1 y1 x2 y2 |\r\tdiff := CellRenderer cellExtent.\r\toffset := self gridFormOffset.\r\tx1 := offset x.\r\tx2 := offset x + diff x.\r\ty1 := offset y + diff y.\r\ty2 := offset y + diff y.\r\tline := Form extent: (diff x)@1 depth: Display depth.\r\t"line from put: x1@y1. \r\tline to put: x2@y2."\r\tline fillColor put: Color black. \r\tline displayAt: 1@(diff y).\r\t"line displayOn: self cellForm at: 1@(diff y)."',			#stamp : 'Patrick 6/18/2017 16:12',			#package : #Snake_Game_Model		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #CellRenderer,				#isMetaSide : false			},			#name : #renderBottomBorder,			#protocol : #drawing,			#sourceCode : 'renderBottomBorder\r\t| line diff offset x1 y1 x2 y2 |\r\tdiff := CellRenderer cellExtent.\r\toffset := self gridFormOffset.\r\tx1 := offset x.\r\tx2 := offset x + diff x.\r\ty1 := offset y + diff y.\r\ty2 := offset y + diff y.\r\tline := Form extent: (300)@1 depth: Display depth.\r\t"line from put: x1@y1. \r\tline to put: x2@y2."\r\tline fillColor put: Color black. \r\tline displayAt: 1@200.\r\t"line displayOn: self cellForm at: 1@(diff y)."',			#stamp : 'Patrick 6/18/2017 16:12',			#package : #Snake_Game_Model		}	}}OmEntry {	#tags : {		#author : 'Patrick',		#time : DateAndTime [ '2017-06-18T16:12:32.40511+02:00' ],		#prior : OmReference [ '118' ],		#self : OmReference [ '119' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #CellRenderer,				#isMetaSide : false			},			#name : #renderBottomBorder,			#protocol : #drawing,			#sourceCode : 'renderBottomBorder\r\t| line diff offset x1 y1 x2 y2 |\r\tdiff := CellRenderer cellExtent.\r\toffset := self gridFormOffset.\r\tx1 := offset x.\r\tx2 := offset x + diff x.\r\ty1 := offset y + diff y.\r\ty2 := offset y + diff y.\r\tline := Form extent: (300)@1 depth: Display depth.\r\t"line from put: x1@y1. \r\tline to put: x2@y2."\r\tline fillColor put: Color black. \r\tline displayAt: 1@200.\r\t"line displayOn: self cellForm at: 1@(diff y)."',			#stamp : 'Patrick 6/18/2017 16:12',			#package : #Snake_Game_Model		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #CellRenderer,				#isMetaSide : false			},			#name : #renderBottomBorder,			#protocol : #drawing,			#sourceCode : 'renderBottomBorder\r\t| line diff offset x1 y1 x2 y2 |\r\tdiff := CellRenderer cellExtent.\r\toffset := self gridFormOffset.\r\tx1 := offset x.\r\tx2 := offset x + diff x.\r\ty1 := offset y + diff y.\r\ty2 := offset y + diff y.\r\tline := Form extent: (300)@1 depth: Display depth.\r\t"line from put: x1@y1. \r\tline to put: x2@y2."\r\tline fillColor put: Color black.\r\tline displayAt: 1@200.\r\t"line displayOn: self cellForm at: 1@(diff y)."',			#stamp : 'Patrick 6/18/2017 16:12',			#package : #Snake_Game_Model		}	}}OmEntry {	#tags : {		#author : 'Patrick',		#time : DateAndTime [ '2017-06-18T16:12:34.67911+02:00' ],		#prior : OmReference [ '119' ],		#self : OmReference [ '120' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #CellRenderer,				#isMetaSide : false			},			#name : #renderBottomBorder,			#protocol : #drawing,			#sourceCode : 'renderBottomBorder\r\t| line diff offset x1 y1 x2 y2 |\r\tdiff := CellRenderer cellExtent.\r\toffset := self gridFormOffset.\r\tx1 := offset x.\r\tx2 := offset x + diff x.\r\ty1 := offset y + diff y.\r\ty2 := offset y + diff y.\r\tline := Form extent: (300)@1 depth: Display depth.\r\t"line from put: x1@y1. \r\tline to put: x2@y2."\r\tline fillColor put: Color black.\r\tline displayAt: 1@200.\r\t"line displayOn: self cellForm at: 1@(diff y)."',			#stamp : 'Patrick 6/18/2017 16:12',			#package : #Snake_Game_Model		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #CellRenderer,				#isMetaSide : false			},			#name : #renderBottomBorder,			#protocol : #drawing,			#sourceCode : 'renderBottomBorder\r\t| line diff offset x1 y1 x2 y2 |\r\tdiff := CellRenderer cellExtent.\r\toffset := self gridFormOffset.\r\tx1 := offset x.\r\tx2 := offset x + diff x.\r\ty1 := offset y + diff y.\r\ty2 := offset y + diff y.\r\tline := Form extent: (300)@2 depth: Display depth.\r\t"line from put: x1@y1. \r\tline to put: x2@y2."\r\tline fillColor put: Color black.\r\tline displayAt: 1@200.\r\t"line displayOn: self cellForm at: 1@(diff y)."',			#stamp : 'Patrick 6/18/2017 16:12',			#package : #Snake_Game_Model		}	}}